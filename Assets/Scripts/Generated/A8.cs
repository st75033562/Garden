// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: a8.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from a8.proto</summary>
public static partial class A8Reflection {

  #region Descriptor
  /// <summary>File descriptor for a8.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static A8Reflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CghhOC5wcm90bxoLdG9waWMucHJvdG8ifwoNTXVsdGlGaWxlTGlzdBIxCgpm",
          "aWxlX2xpc3RzGAEgAygLMh0uTXVsdGlGaWxlTGlzdC5GaWxlTGlzdHNFbnRy",
          "eRo7Cg5GaWxlTGlzdHNFbnRyeRILCgNrZXkYASABKAkSGAoFdmFsdWUYAiAB",
          "KAsyCS5GaWxlTGlzdDoCOAEiPQoUR2V0UHJvamVjdExpc3RSZXFfVjMSJQoI",
          "cmVxX3Jvb3QYASABKA4yEy5GaWxlTGlzdF9Sb290X1R5cGUiagoRVXBsb2Fk",
          "RmlsZUxpc3RfVjMSJgoJbGlzdF9yb290GAEgASgOMhMuRmlsZUxpc3RfUm9v",
          "dF9UeXBlEhgKBWZpbGVzGAIgASgLMgkuRmlsZUxpc3QSEwoLcHJvamVjdF90",
          "YWcYAyABKAkitQEKD0Rvd25sb2FkRGlydF9WMxIYChBwcm9qZWN0X2Z1bGxw",
          "YXRoGAEgASgJEiMKG3NhdmVfYXNfZ3JhcGh5X3Byb2plY3RfbmFtZRgDIAEo",
          "CRIjChtzYXZlX2FzX3B5dGhvbl9wcm9qZWN0X25hbWUYBCABKAkSHgoWc2F2",
          "ZV9hc19ncmFwaHlfZ2JfbmFtZRgFIAEoCRIeChZzYXZlX2FzX3B5dGhvbl9n",
          "Yl9uYW1lGAYgASgJImsKCkNvcHlEaXJfVjMSEwoLcHJvamVjdF9zcmMYASAB",
          "KAkSJQoIZGVzX3Jvb3QYAiABKA4yEy5GaWxlTGlzdF9Sb290X1R5cGUSEAoI",
          "ZGVzX25hbWUYAyABKAkSDwoHZGVzX3RhZxgEIAEoCSI4CglEZWxEaXJfVjMS",
          "GAoQcHJvamVjdF9mdWxscGF0aBgBIAEoCRIRCglkZWxfcGF0aHMYAiADKAki",
          "lAIKBE1haWwSDwoHbWFpbF9pZBgBIAEoBBIRCglzZW5kZXJfaWQYAiABKA0S",
          "EwoLcmVjZWl2ZXJfaWQYAyABKA0SEwoLc2VuZGVyX25hbWUYBCABKAwSDQoF",
          "dGl0bGUYBSABKAwSDwoHY29udGVudBgGIAEoDBISCgphdHRhY2htZW50GAcg",
          "ASgMEhQKDGV4cGlyZWRfdGltZRgIIAEoDRIRCgltYWlsX2ZsYWcYCSABKA0S",
          "EwoLY3JlYXRlX3RpbWUYCiABKAQSEQoJbWFpbF90eXBlGAsgASgNEhEKCWV4",
          "dGVuc2lvbhgMIAEoDBIVCg1yZWNlaXZlcl9uYW1lGA0gASgMEg8KB2ljb25f",
          "aWQYDiABKA0iagoUQThfVXNlcl9EaXNwbGF5X0luZm8SDwoHdXNlcl9pZBgB",
          "IAEoDRIVCg11c2VyX25pY2tuYW1lGAIgASgJEhUKDXVzZXJfaW5jb25faWQY",
          "AyABKA0SEwoLdXNlcl9vbmxpbmUYBCABKA0izAEKFkE4X1N0dWRlbnRfU3Vi",
          "bWl0X1Rhc2sSEQoJc3VibWl0X2lkGAEgASgNEhQKDHByb2plY3RfbmFtZRgC",
          "IAEoCRISCgp0YXNrX2dyYWRlGAMgASgJEhYKDnN1Ym1pdHRlZF90aW1lGAQg",
          "ASgEEhMKC3VwZGF0ZV90aW1lGAUgASgEEhsKE3N1Ym1pdF9wcm9qZWN0X3R5",
          "cGUYBiABKA0SKwoSc3VibWl0X2F0dGFjaF9pbmZvGAcgASgLMg8uSzhfQXR0",
          "YWNoX0luZm8ipQEKE0E4X1Rhc2tfU3VibWl0X0luZm8SPwoOc3VibWl0dGVk",
          "X3Rhc2sYCCADKAsyJy5BOF9UYXNrX1N1Ym1pdF9JbmZvLlN1Ym1pdHRlZFRh",
          "c2tFbnRyeRpNChJTdWJtaXR0ZWRUYXNrRW50cnkSCwoDa2V5GAEgASgNEiYK",
          "BXZhbHVlGAIgASgLMhcuQThfU3R1ZGVudF9TdWJtaXRfVGFzazoCOAEiyAIK",
          "DEE4X1Rhc2tfSW5mbxIPCgd0YXNrX2lkGAEgASgNEhEKCXRhc2tfbmFtZRgC",
          "IAEoCRISCgpjcmVhdGVyX2lkGAMgASgNEhgKEHRhc2tfZGVzY3JpcHRpb24Y",
          "BCABKAkSGQoRdGFza19wcm9ncmFtX25hbWUYBSABKAkSGAoQdGFza19jcmVh",
          "dGVfdGltZRgGIAEoBBIYChB0YXNrX3VwZGF0ZV90aW1lGAcgASgEEi4KEHRh",
          "c2tfc3VibWl0X2luZm8YCCABKAsyFC5BOF9UYXNrX1N1Ym1pdF9JbmZvEhkK",
          "EXRhc2tfcHJvamVjdF90eXBlGAogASgNEi0KFHRhc2tfYXR0YWNoX2luZm9f",
          "bmV3GAsgASgLMg8uSzhfQXR0YWNoX0luZm8SHQoVdGFza19ub3RfYWxsb3df",
          "c3VibWl0GAwgASgIIpwBChRBOF9DbGFzc19NZW1iZXJfSW5mbxI6CgttZW1i",
          "ZXJfbGlzdBgBIAMoCzIlLkE4X0NsYXNzX01lbWJlcl9JbmZvLk1lbWJlckxp",
          "c3RFbnRyeRpICg9NZW1iZXJMaXN0RW50cnkSCwoDa2V5GAEgASgNEiQKBXZh",
          "bHVlGAIgASgLMhUuQThfVXNlcl9EaXNwbGF5X0luZm86AjgBIooBChJBOF9D",
          "bGFzc19UYXNrX0xpc3QSNAoJdGFza19saXN0GAEgAygLMiEuQThfQ2xhc3Nf",
          "VGFza19MaXN0LlRhc2tMaXN0RW50cnkaPgoNVGFza0xpc3RFbnRyeRILCgNr",
          "ZXkYASABKA0SHAoFdmFsdWUYAiABKAsyDS5BOF9UYXNrX0luZm86AjgBIpAC",
          "Cg1BOF9DbGFzc19JbmZvEhAKCGNsYXNzX2lkGAEgASgNEhIKCmNsYXNzX25h",
          "bWUYAiABKAkSEgoKdGVhY2hlcl9pZBgDIAEoDRIqCgttZW1iZXJfaW5mbxgE",
          "IAEoCzIVLkE4X0NsYXNzX01lbWJlcl9JbmZvEhkKEWNsYXNzX2Rlc2NyaXB0",
          "aW9uGAUgASgJEhYKDmNsYXNzX2luY29uX2lkGAYgASgNEhkKEWNsYXNzX2Ny",
          "ZWF0ZV90aW1lGAcgASgEEhkKEWNsYXNzX3VwZGF0ZV90aW1lGAggASgEEhQK",
          "DGNsYXNzX3N0YXR1cxgKIAEoDRIaChJjbGFzc19wcm9qZWN0X3R5cGUYCyAB",
          "KA0iKAoRVXNlcl9DbGFzc19EZXRhaWwSEwoLam9pbmVkX3RpbWUYASABKAQi",
          "9gMKD1VzZXJfQ2xhc3NfSW5mbxJOChl1c2VyX2F0dGVuZF9jbGFzc19tYXBf",
          "bmV3GAQgAygLMisuVXNlcl9DbGFzc19JbmZvLlVzZXJBdHRlbmRDbGFzc01h",
          "cE5ld0VudHJ5Ek4KGXVzZXJfY3JlYXRlX2NsYXNzX21hcF9uZXcYBSADKAsy",
          "Ky5Vc2VyX0NsYXNzX0luZm8uVXNlckNyZWF0ZUNsYXNzTWFwTmV3RW50cnkS",
          "TQoYdXNlcl9hcHBsaWVkX2NsYXNzZXNfbmV3GAYgAygLMisuVXNlcl9DbGFz",
          "c19JbmZvLlVzZXJBcHBsaWVkQ2xhc3Nlc05ld0VudHJ5GlAKGlVzZXJBdHRl",
          "bmRDbGFzc01hcE5ld0VudHJ5EgsKA2tleRgBIAEoDRIhCgV2YWx1ZRgCIAEo",
          "CzISLlVzZXJfQ2xhc3NfRGV0YWlsOgI4ARpQChpVc2VyQ3JlYXRlQ2xhc3NN",
          "YXBOZXdFbnRyeRILCgNrZXkYASABKA0SIQoFdmFsdWUYAiABKAsyEi5Vc2Vy",
          "X0NsYXNzX0RldGFpbDoCOAEaUAoaVXNlckFwcGxpZWRDbGFzc2VzTmV3RW50",
          "cnkSCwoDa2V5GAEgASgNEiEKBXZhbHVlGAIgASgLMhIuVXNlcl9DbGFzc19E",
          "ZXRhaWw6AjgBIowBCg1Vc2VyX0V4dF9JbmZvEhUKDWNlbGxwaG9uZV9udW0Y",
          "ASABKAkSHAoUcmVzZXRfcGFzc3dvcmRfY291bnQYAiABKA0SIAoYbGFzdF9y",
          "ZXNldF9wYXNzd29yZF90aW1lGAMgASgEEhEKCXdlYl90b2tlbhgEIAEoCRIR",
          "CgltYWlsX2FkZHIYBSABKAkiPwoUVXNlcl9QZXJpb2RJdGVtX0luZm8SEwoL",
          "aXRlbV9zdGF0dXMYASABKA0SEgoKaXRlbV9zY29yZRgCIAEoDSLEAQoQVXNl",
          "cl9QZXJpb2RfSW5mbxJHChR1c2VyX3BlcmlvZGl0ZW1fbGlzdBgBIAMoCzIp",
          "LlVzZXJfUGVyaW9kX0luZm8uVXNlclBlcmlvZGl0ZW1MaXN0RW50cnkSFQoN",
          "cGVyaW9kX3N0YXR1cxgCIAEoDRpQChdVc2VyUGVyaW9kaXRlbUxpc3RFbnRy",
          "eRILCgNrZXkYASABKA0SJAoFdmFsdWUYAiABKAsyFS5Vc2VyX1BlcmlvZEl0",
          "ZW1fSW5mbzoCOAEikAIKFVVzZXJfUGVyaW9kX0luZm9fTGlzdBJRChd1c2Vy",
          "X2F0dGVuZF9wZXJpb2RfbGlzdBgBIAMoCzIwLlVzZXJfUGVyaW9kX0luZm9f",
          "TGlzdC5Vc2VyQXR0ZW5kUGVyaW9kTGlzdEVudHJ5EhUKDWNvdXJzZV9zdGF0",
          "dXMYAiABKA0SIQoLY291cnNlX3R5cGUYAyABKA4yDC5Db3Vyc2VfdHlwZRIa",
          "ChJjb3Vyc2VfYXR0ZW5kX3RpbWUYBCABKAQaTgoZVXNlckF0dGVuZFBlcmlv",
          "ZExpc3RFbnRyeRILCgNrZXkYASABKA0SIAoFdmFsdWUYAiABKAsyES5Vc2Vy",
          "X1BlcmlvZF9JbmZvOgI4ASK6AgoQVXNlcl9Db3Vyc2VfSW5mbxJKChZ1c2Vy",
          "X2NyZWF0ZV9jb3Vyc2VfbWFwGAEgAygLMiouVXNlcl9Db3Vyc2VfSW5mby5V",
          "c2VyQ3JlYXRlQ291cnNlTWFwRW50cnkSSgoWdXNlcl9hdHRlbmRfY291cnNl",
          "X21hcBgDIAMoCzIqLlVzZXJfQ291cnNlX0luZm8uVXNlckF0dGVuZENvdXJz",
          "ZU1hcEVudHJ5GjoKGFVzZXJDcmVhdGVDb3Vyc2VNYXBFbnRyeRILCgNrZXkY",
          "ASABKA0SDQoFdmFsdWUYAiABKA06AjgBGlIKGFVzZXJBdHRlbmRDb3Vyc2VN",
          "YXBFbnRyeRILCgNrZXkYASABKA0SJQoFdmFsdWUYAiABKAsyFi5Vc2VyX1Bl",
          "cmlvZF9JbmZvX0xpc3Q6AjgBIoEBChJBOF9CdXlfTGVzc29uX0luZm8SOAoL",
          "YnV5X2xlc3NvbnMYASADKAsyIy5BOF9CdXlfTGVzc29uX0luZm8uQnV5TGVz",
          "c29uc0VudHJ5GjEKD0J1eUxlc3NvbnNFbnRyeRILCgNrZXkYASABKA0SDQoF",
          "dmFsdWUYAiABKA06AjgBIiEKEEE4X1B1cmNoYXNlX0luZm8SDQoFY29pbnMY",
          "ASABKA0ifwoSQThfQnV5X0FyT2Jqc19JbmZvEjcKC2J1eV9hcl9vYmpzGAEg",
          "AygLMiIuQThfQnV5X0FyT2Jqc19JbmZvLkJ1eUFyT2Jqc0VudHJ5GjAKDkJ1",
          "eUFyT2Jqc0VudHJ5EgsKA2tleRgBIAEoDRINCgV2YWx1ZRgCIAEoDToCOAEi",
          "xwMKDEE4X1VzZXJfSW5mbxIPCgd1c2VyX2lkGAEgASgNEhUKDXVzZXJfbmlj",
          "a25hbWUYAiABKAkSFQoNdXNlcl9pbmNvbl9pZBgDIAEoDRIpCg91c2VyX2Ns",
          "YXNzX2luZm8YBCABKAsyEC5Vc2VyX0NsYXNzX0luZm8SEQoJdXNlcl90eXBl",
          "GAUgASgNEhMKC3VzZXJfb25saW5lGAYgASgNEhkKEXVzZXJfZXhwaXJlZF90",
          "aW1lGAcgASgEEiUKDXVzZXJfZXh0X2luZm8YCCABKAsyDi5Vc2VyX0V4dF9J",
          "bmZvEi0KEHVzZXJfYnV5X2xlc3NvbnMYCSABKAsyEy5BOF9CdXlfTGVzc29u",
          "X0luZm8SKwoQdXNlcl9jb3Vyc2VfaW5mbxgKIAEoCzIRLlVzZXJfQ291cnNl",
          "X0luZm8SLQoSdXNlcl9wdXJjaGFzZV9pbmZvGAsgASgLMhEuQThfUHVyY2hh",
          "c2VfSW5mbxItChB1c2VyX2J1eV9hcl9vYmpzGAwgASgLMhMuQThfQnV5X0Fy",
          "T2Jqc19JbmZvEikKD3VzZXJfdG9waWNfaW5mbxgNIAEoCzIQLlVzZXJfVG9w",
          "aWNfSW5mbyJmCgNDTUQSDgoGY21kX2lkGAEgASgNEhYKDmNtZF9wYXJhbWV0",
          "ZXJzGAIgASgMEhIKCmNtZF9yZXN1bHQYAyABKA0SEgoKdXNlcl90b2tlbhgE",
          "IAEoDBIPCgd1c2VyX2lkGAUgASgNIs0DChRDTURfUmVnX3JfUGFyYW1ldGVy",
          "cxISCgphY2NvdW50X2lkGAEgASgNEhQKDGFjY291bnRfbmFtZRgCIAEoCRIU",
          "CgxhY2NvdW50X3Bhc3MYAyABKAkSFAoMYWNjb3VudF90eXBlGAQgASgJEhYK",
          "DmFjY291bnRfdW5pcXVlGAUgASgJEhMKC2RldmljZV9pbmZvGAYgASgJEhUK",
          "DXVzZXJfbmlja25hbWUYByABKAkSFAoMdXNlcl9pY29uX2lkGAggASgNEhEK",
          "CXVzZXJfdHlwZRgJIAEoDRIVCg1jZWxscGhvbmVfbnVtGAogASgJEhMKC2lu",
          "dml0ZV9jb2RlGAsgASgJEhkKEXZlcmlmaWNhdGlvbl9jb2RlGAwgASgJEhEK",
          "CW1haWxfYWRkchgNIAEoCRI6CgtidXlfbGVzc29ucxgOIAMoCzIlLkNNRF9S",
          "ZWdfcl9QYXJhbWV0ZXJzLkJ1eUxlc3NvbnNFbnRyeRITCgthY3RpdmVfZGF5",
          "cxgPIAEoDRIUCgx1c2VyX2NoYW5uZWwYECABKA0aMQoPQnV5TGVzc29uc0Vu",
          "dHJ5EgsKA2tleRgBIAEoDRINCgV2YWx1ZRgCIAEoDToCOAEiaQoUQ01EX1Jl",
          "Z19hX1BhcmFtZXRlcnMSEgoKYWNjb3VudF9pZBgBIAEoDRIPCgdyb2xlX2lk",
          "GAIgASgNEhUKDWFjY291bnRfdG9rZW4YAyABKAkSFQoNdXNlcl9uaWNrbmFt",
          "ZRgEIAEoCSKJAQoeQ01EX0FjY291bnRfTG9naW5fcl9QYXJhbWV0ZXJzEhQK",
          "DGFjY291bnRfbmFtZRgBIAEoCRIUCgxhY2NvdW50X3Bhc3MYAiABKAkSEgoK",
          "YWNjb3VudF9pZBgDIAEoDRISCgpsb2dpbl90eXBlGAQgASgNEhMKC2Rldmlj",
          "ZV9pbmZvGAUgASgJIpMBCh5DTURfQWNjb3VudF9Mb2dpbl9hX1BhcmFtZXRl",
          "cnMSEgoKYWNjb3VudF9pZBgBIAEoDRIVCg1hY2NvdW50X3Rva2VuGAIgASgJ",
          "EiAKCXVzZXJfaW5mbxgDIAEoCzINLkE4X1VzZXJfSW5mbxISCgpsb2dpbl90",
          "eXBlGAQgASgNEhAKCHNydl90aW1lGAUgASgEIioKF0NNRF9Mb2dvdXRfcl9Q",
          "YXJhbWV0ZXJzEg8KB3VzZXJfaWQYASABKA0iKgoXQ01EX0xvZ291dF9hX1Bh",
          "cmFtZXRlcnMSDwoHdXNlcl9pZBgBIAEoDSKOAQomQ01EX0dldF9WZXJpZmlj",
          "YXRpb25fQ29kZV9yX1BhcmFtZXRlcnMSFQoNY2VsbHBob25lX251bRgBIAEo",
          "CRIPCgd2Y190eXBlGAIgASgNEhMKC2ludml0ZV9jb2RlGAMgASgJEhEKCXN0",
          "cl90b2tlbhgEIAEoCRIUCgx1c2VyX2NoYW5uZWwYBSABKA0iWgomQ01EX0dl",
          "dF9WZXJpZmljYXRpb25fQ29kZV9hX1BhcmFtZXRlcnMSFQoNY2VsbHBob25l",
          "X251bRgBIAEoCRIZChF2ZXJpZmljYXRpb25fY29kZRgCIAEoCSJpCh9DTURf",
          "UmVzZXRfUGFzc3dvcmRfcl9QYXJhbWV0ZXJzEhQKDG5ld19wYXNzd29yZBgB",
          "IAEoCRIZChF2ZXJpZmljYXRpb25fY29kZRgCIAEoCRIVCg1jZWxscGhvbmVf",
          "bnVtGAMgASgJIiEKH0NNRF9SZXNldF9QYXNzd29yZF9hX1BhcmFtZXRlcnMi",
          "PwokQ01EX1VzZV9BY3RpdmF0aW9uX0NvZGVfcl9QYXJhbWV0ZXJzEhcKD2Fj",
          "dGl2YXRpb25fY29kZRgBIAEoCSJPCiRDTURfVXNlX0FjdGl2YXRpb25fQ29k",
          "ZV9hX1BhcmFtZXRlcnMSEQoJdXNlcl90eXBlGAEgASgNEhQKDGV4cGlyZWRf",
          "dGltZRgCIAEoBCI4CiBDTURfQ2hhbmdlX05pY2tuYW1lX3JfUGFyYW1ldGVy",
          "cxIUCgxuZXdfbmlja25hbWUYASABKAkiOAogQ01EX0NoYW5nZV9OaWNrbmFt",
          "ZV9hX1BhcmFtZXRlcnMSFAoMbmV3X25pY2tuYW1lGAEgASgJIlMKFkNNRF9S",
          "YmluZF9yX1BhcmFtZXRlcnMSEQoJcGhvbmVfbnVtGAEgASgJEhEKCW1haWxf",
          "YWRkchgCIAEoCRITCgt2ZXJpZnlfY29kZRgDIAEoCSI+ChZDTURfUmJpbmRf",
          "YV9QYXJhbWV0ZXJzEhEKCXBob25lX251bRgBIAEoCRIRCgltYWlsX2FkZHIY",
          "AiABKAkiTgogQ01EX01vZGlmeV9QYXNzd29yZF9yX1BhcmFtZXRlcnMSFAoM",
          "bmV3X3Bhc3N3b3JkGAEgASgJEhQKDG9sZF9wYXNzd29yZBgCIAEoCSI4CiBD",
          "TURfTW9kaWZ5X1Bhc3N3b3JkX2FfUGFyYW1ldGVycxIUCgxuZXdfcGFzc3dv",
          "cmQYASABKAkiMgobQ01EX0FkZF9TaGFyZWRfcl9QYXJhbWV0ZXJzEhMKC3No",
          "YXJlZF9vcHRzGAEgASgJImEKC1NoYXJlZF9JbmZvEhEKCXNoYXJlZF9pZBgB",
          "IAEoDRITCgtzaGFyZWRfb3B0cxgCIAEoCRIRCgljcmVhdGVfaWQYAyABKA0S",
          "FwoPY3JlYXRlX25pY2tuYW1lGAQgASgJIkUKG0NNRF9BZGRfU2hhcmVkX2Ff",
          "UGFyYW1ldGVycxIRCglzaGFyZWRfaWQYASABKA0SEwoLc2hhcmVkX29wdHMY",
          "AiABKAkiSAoeQ01EX01vZGlmeV9TaGFyZWRfcl9QYXJhbWV0ZXJzEhEKCXNo",
          "YXJlZF9pZBgBIAEoDRITCgtzaGFyZWRfb3B0cxgCIAEoCSJICh5DTURfTW9k",
          "aWZ5X1NoYXJlZF9hX1BhcmFtZXRlcnMSEQoJc2hhcmVkX2lkGAEgASgNEhMK",
          "C3NoYXJlZF9vcHRzGAIgASgJIjAKG0NNRF9EZWxfU2hhcmVkX3JfUGFyYW1l",
          "dGVycxIRCglzaGFyZWRfaWQYASABKA0iMAobQ01EX0RlbF9TaGFyZWRfYV9Q",
          "YXJhbWV0ZXJzEhEKCXNoYXJlZF9pZBgBIAEoDSJFCiBDTURfR2V0X1NoYXJl",
          "ZF9MaXN0X3JfUGFyYW1ldGVycxIhCghyZXFfdHlwZRgBIAEoDjIPLkdldFNo",
          "YXJlZF9UeXBlIkUKIENNRF9HZXRfU2hhcmVkX0xpc3RfYV9QYXJhbWV0ZXJz",
          "EiEKC3NoYXJlZF9saXN0GAEgAygLMgwuU2hhcmVkX0luZm8iSAoiQ01EX0Nv",
          "aW5zX0NoYW5nZV9Ob3RpZnlfUGFyYW1ldGVycxITCgtjb2luc19kZWx0YRgB",
          "IAEoBRINCgVjb2lucxgCIAEoDSIfCh1DTURfR2V0X1Nydl9UaW1lX3JfUGFy",
          "YW1ldGVycyIxCh1DTURfR2V0X1Nydl9UaW1lX2FfUGFyYW1ldGVycxIQCghz",
          "cnZfdGltZRgBIAEoBCI4ChtDTURfQnV5X0FyX09ial9yX1BhcmFtZXRlcnMS",
          "GQoRcmVxX2J1eV9hcl9vYmpfaWQYASABKA0iMAobQ01EX0J1eV9Bcl9PYmpf",
          "YV9QYXJhbWV0ZXJzEhEKCWFyX29ial9pZBgBIAEoDSJUChdDTURfVW5iaW5k",
          "X3JfUGFyYW1ldGVycxIRCglwaG9uZV9udW0YASABKAkSEQoJbWFpbF9hZGRy",
          "GAIgASgJEhMKC3ZlcmlmeV9jb2RlGAMgASgJIj8KF0NNRF9VbmJpbmRfYV9Q",
          "YXJhbWV0ZXJzEhEKCXBob25lX251bRgBIAEoCRIRCgltYWlsX2FkZHIYAiAB",
          "KAkiTgojQ01EX0dldF9QYXJ0b2Z1c2VyaW5mb19yX1BhcmFtZXRlcnMSJwoI",
          "cmVxX3BhcnQYASABKA4yFS5HZXRfUGFydF9PZl9Vc2VyaW5mbyJLCiNDTURf",
          "R2V0X1BhcnRvZnVzZXJpbmZvX2FfUGFyYW1ldGVycxIkCgpjbGFzc19pbmZv",
          "GAEgASgLMhAuVXNlcl9DbGFzc19JbmZvIkUKHUNNRF9HZXRfVXNlcmluZm9f",
          "cl9QYXJhbWV0ZXJzEg4KBnJlcV9pZBgBIAEoDRIUCgxyZXFfbmlja25hbWUY",
          "AiABKAkiQQodQ01EX0dldF9Vc2VyaW5mb19hX1BhcmFtZXRlcnMSIAoJdXNl",
          "cl9saXN0GAEgAygLMg0uQThfVXNlcl9JbmZvIkoKIENNRF9VcGRhdGVfVXNl",
          "cmluZm9fcl9QYXJhbWV0ZXJzEiYKD3VwZGF0ZV91c2VyaW5mbxgBIAEoCzIN",
          "LkE4X1VzZXJfSW5mbyJLCiBDTURfVXBkYXRlX1VzZXJpbmZvX2FfUGFyYW1l",
          "dGVycxInChB1cGRhdGVkX3VzZXJpbmZvGAEgASgLMg0uQThfVXNlcl9JbmZv",
          "IjcKJUNNRF9HZXRfRGlzcGxheV9Vc2VyaW5mb19yX1BhcmFtZXRlcnMSDgoG",
          "cmVxX2lkGAEgASgNImsKJUNNRF9HZXRfRGlzcGxheV9Vc2VyaW5mb19hX1Bh",
          "cmFtZXRlcnMSLwoQZGlzcGFseV91c2VyaW5mbxgBIAEoCzIVLkE4X1VzZXJf",
          "RGlzcGxheV9JbmZvEhEKCXVzZXJfdHlwZRgCIAEoDSJECh1DTURfQ3JlYXRl",
          "X0NsYXNzX3JfUGFyYW1ldGVycxIjCgtjcmVhdGVfaW5mbxgBIAEoCzIOLkE4",
          "X0NsYXNzX0luZm8iQwodQ01EX0NyZWF0ZV9DbGFzc19hX1BhcmFtZXRlcnMS",
          "IgoKY2xhc3NfaW5mbxgBIAEoCzIOLkE4X0NsYXNzX0luZm8iMAocQ01EX1F1",
          "aXRlX0NsYXNzX3JfUGFyYW1ldGVycxIQCghjbGFzc19pZBgBIAEoDSI1ChxD",
          "TURfUXVpdGVfQ2xhc3NfYV9QYXJhbWV0ZXJzEhUKDXF1aXRfY2xhc3NfaWQY",
          "ASABKA0iSQohQ01EX1VwZGF0ZV9DbGFzc2luZm9fcl9QYXJhbWV0ZXJzEiQK",
          "DHVwZGF0ZV9jbGFzcxgBIAEoCzIOLkE4X0NsYXNzX0luZm8iSgohQ01EX1Vw",
          "ZGF0ZV9DbGFzc2luZm9fYV9QYXJhbWV0ZXJzEiUKDXVwZGF0ZWRfY2xhc3MY",
          "ASABKAsyDi5BOF9DbGFzc19JbmZvIsQBCh5DTURfR2V0X0NsYXNzaW5mb19y",
          "X1BhcmFtZXRlcnMSFAoMcmVxX2NsYXNzX2lkGAEgASgNEhYKDnJlcV9jbGFz",
          "c19uYW1lGAIgASgJEhYKDnJlcV9jbGFzc19saXN0GAMgAygNEhQKDGF0dGVu",
          "ZF9jbGFzcxgEIAEoDRIVCg1jcmVhdGVkX2NsYXNzGAUgASgNEhUKDWFwcGxp",
          "ZWRfY2xhc3MYBiABKA0SGAoQcmVxX3Byb2plY3RfdHlwZRgHIAEoDSLMAQoe",
          "Q01EX0dldF9DbGFzc2luZm9fYV9QYXJhbWV0ZXJzEicKD2NsYXNzX2luZm9f",
          "bGlzdBgBIAMoCzIOLkE4X0NsYXNzX0luZm8SKgoSYXBwbGllZF9jbGFzc19s",
          "aXN0GAIgAygLMg4uQThfQ2xhc3NfSW5mbxIqChJjcmVhdGVkX2NsYXNzX2xp",
          "c3QYAyADKAsyDi5BOF9DbGFzc19JbmZvEikKEWF0dGVuZF9jbGFzc19saXN0",
          "GAQgAygLMg4uQThfQ2xhc3NfSW5mbyIzChtDTURfRGVsX0NsYXNzc19yX1Bh",
          "cmFtZXRlcnMSFAoMZGVsX2NsYXNzX2lkGAEgASgNIjMKG0NNRF9EZWxfQ2xh",
          "c3NzX2FfUGFyYW1ldGVycxIUCgxkZWxfY2xhc3NfaWQYASABKA0iZwogQ01E",
          "X1JlY29tbWFuZF9DbGFzc19yX1BhcmFtZXRlcnMSEQoJcmVxX2NvdW50GAEg",
          "ASgNEjAKEHJlcV9wcm9qZWN0X3R5cGUYByABKA4yFi5Qcm9qZWN0X0xhbmd1",
          "YWdlX1R5cGUiSwogQ01EX1JlY29tbWFuZF9DbGFzc19hX1BhcmFtZXRlcnMS",
          "JwoPY2xhc3NfaW5mb19saXN0GAEgAygLMg4uQThfQ2xhc3NfSW5mbyJFCiFD",
          "TURfQWRkX0NsYXNzX01lbWJlcl9yX1BhcmFtZXRlcnMSDgoGYWRkX2lkGAEg",
          "ASgNEhAKCGNsYXNzX2lkGAIgASgNIkcKIUNNRF9BZGRfQ2xhc3NfTWVtYmVy",
          "X2FfUGFyYW1ldGVycxIQCghhZGRlZF9pZBgBIAEoDRIQCghjbGFzc19pZBgC",
          "IAEoDSJJCiFDTURfRGVsX0NsYXNzX01lbWJlcl9yX1BhcmFtZXRlcnMSEgoK",
          "cmVxX2RlbF9pZBgBIAEoDRIQCghjbGFzc19pZBgCIAEoDSJHCiFDTURfRGVs",
          "X0NsYXNzX01lbWJlcl9hX1BhcmFtZXRlcnMSEAoIZGVsZWRfaWQYASABKA0S",
          "EAoIY2xhc3NfaWQYAiABKA0iRgogQ01EX0NsYXNzaW5mb19VcGRhdGVkX1Bh",
          "cmFtZXRlcnMSIgoKY2xhc3NfaW5mbxgBIAEoCzIOLkE4X0NsYXNzX0luZm8i",
          "NAocQ01EX0NsYXNzX0RlbGV0ZWRfUGFyYW1ldGVycxIUCgxkZWxfY2xhc3Nf",
          "aWQYASABKA0iXAofQ01EX0NsYXNzX01lbWJlcl9BZGRfUGFyYW1ldGVycxIn",
          "CghhZGRfaW5mbxgBIAEoCzIVLkE4X1VzZXJfRGlzcGxheV9JbmZvEhAKCGNs",
          "YXNzX2lkGAIgASgNIkcKIUNNRF9DbGFzc19NZW1iZXJfTGVhdmVfUGFyYW1l",
          "dGVycxIQCghsZWF2ZV9pZBgBIAEoDRIQCghjbGFzc19pZBgCIAEoDSJSChxD",
          "TURfQ3JlYXRlX1Rhc2tfcl9QYXJhbWV0ZXJzEhAKCGNsYXNzX2lkGAEgASgN",
          "EiAKCXRhc2tfaW5mbxgCIAEoCzINLkE4X1Rhc2tfSW5mbyJSChxDTURfQ3Jl",
          "YXRlX1Rhc2tfYV9QYXJhbWV0ZXJzEhAKCGNsYXNzX2lkGAEgASgNEiAKCXRh",
          "c2tfaW5mbxgCIAEoCzINLkE4X1Rhc2tfSW5mbyJSChxDTURfVXBkYXRlX1Rh",
          "c2tfcl9QYXJhbWV0ZXJzEhAKCGNsYXNzX2lkGAEgASgNEiAKCXRhc2tfaW5m",
          "bxgCIAEoCzINLkE4X1Rhc2tfSW5mbyJSChxDTURfVXBkYXRlX1Rhc2tfYV9Q",
          "YXJhbWV0ZXJzEhAKCGNsYXNzX2lkGAEgASgNEiAKCXRhc2tfaW5mbxgCIAEo",
          "CzINLkE4X1Rhc2tfSW5mbyI+ChlDTURfRGVsX1Rhc2tfcl9QYXJhbWV0ZXJz",
          "EhAKCGNsYXNzX2lkGAEgASgNEg8KB3Rhc2tfaWQYAiABKA0iPgoZQ01EX0Rl",
          "bF9UYXNrX2FfUGFyYW1ldGVycxIQCghjbGFzc19pZBgBIAEoDRIPCgd0YXNr",
          "X2lkGAIgASgNIm8KHENNRF9TdWJtaXRfVGFza19yX1BhcmFtZXRlcnMSEAoI",
          "Y2xhc3NfaWQYASABKA0SDwoHdGFza19pZBgCIAEoDRIsCgtzdWJtaXRfdGFz",
          "axgDIAEoCzIXLkE4X1N0dWRlbnRfU3VibWl0X1Rhc2sibwocQ01EX1N1Ym1p",
          "dF9UYXNrX2FfUGFyYW1ldGVycxIQCghjbGFzc19pZBgBIAEoDRIPCgd0YXNr",
          "X2lkGAIgASgNEiwKC3N1Ym1pdF90YXNrGAMgASgLMhcuQThfU3R1ZGVudF9T",
          "dWJtaXRfVGFzayJoChpDTURfR3JhZGVfVGFza19yX1BhcmFtZXRlchIQCghj",
          "bGFzc19pZBgBIAEoDRIPCgd0YXNrX2lkGAIgASgNEhEKCXN1Ym1pdF9pZBgD",
          "IAEoDRIUCgxncmFkZV9zdHJpbmcYBCABKAkiaAoaQ01EX0dyYWRlX1Rhc2tf",
          "YV9QYXJhbWV0ZXISEAoIY2xhc3NfaWQYASABKA0SDwoHdGFza19pZBgCIAEo",
          "DRIRCglzdWJtaXRfaWQYAyABKA0SFAoMZ3JhZGVfc3RyaW5nGAQgASgJIkIK",
          "HUNNRF9HZXRfVGFza19JbmZvX3JfUGFyYW1ldGVyEhAKCGNsYXNzX2lkGAEg",
          "ASgNEg8KB3Rhc2tfaWQYAiABKA0iUwodQ01EX0dldF9UYXNrX0luZm9fYV9Q",
          "YXJhbWV0ZXISEAoIY2xhc3NfaWQYASABKA0SIAoJdGFza19saXN0GAIgAygL",
          "Mg0uQThfVGFza19JbmZvIlEKG0NNRF9UYXNrX0NyZWF0ZWRfUGFyYW1ldGVy",
          "cxIQCghjbGFzc19pZBgBIAEoDRIgCgl0YXNrX2luZm8YAiABKAsyDS5BOF9U",
          "YXNrX0luZm8iUQobQ01EX1Rhc2tfVXBkYXRlZF9QYXJhbWV0ZXJzEhAKCGNs",
          "YXNzX2lkGAEgASgNEiAKCXRhc2tfaW5mbxgCIAEoCzINLkE4X1Rhc2tfSW5m",
          "byJAChtDTURfVGFza19EZWxldGVkX1BhcmFtZXRlcnMSEAoIY2xhc3NfaWQY",
          "ASABKA0SDwoHdGFza19pZBgCIAEoDSJvChxDTURfVGFza19TdWJtaXRlZF9Q",
          "YXJhbWV0ZXJzEhAKCGNsYXNzX2lkGAEgASgNEg8KB3Rhc2tfaWQYAiABKA0S",
          "LAoLc3VibWl0X3Rhc2sYAyABKAsyFy5BOF9TdHVkZW50X1N1Ym1pdF9UYXNr",
          "ImgKGkNNRF9UYXNrX0dyYWRlZF9QYXJhbWV0ZXJzEhAKCGNsYXNzX2lkGAEg",
          "ASgNEg8KB3Rhc2tfaWQYAiABKA0SEQoJc3VibWl0X2lkGAMgASgNEhQKDGdy",
          "YWRlX3N0cmluZxgEIAEoCSJTChtDTURfRGVsX1N1Ym1pdF9yX1BhcmFtZXRl",
          "cnMSEAoIY2xhc3NfaWQYASABKA0SDwoHdGFza19pZBgCIAEoDRIRCglzdWJt",
          "aXRfaWQYAyABKA0iUwobQ01EX0RlbF9TdWJtaXRfYV9QYXJhbWV0ZXJzEhAK",
          "CGNsYXNzX2lkGAEgASgNEg8KB3Rhc2tfaWQYAiABKA0SEQoJc3VibWl0X2lk",
          "GAMgASgNIlUKHUNNRF9TdWJtaXRfRGVsZXRlZF9QYXJhbWV0ZXJzEhAKCGNs",
          "YXNzX2lkGAEgASgNEg8KB3Rhc2tfaWQYAiABKA0SEQoJc3VibWl0X2lkGAMg",
          "ASgNItcBCiNDTURfTW9kaWZ5X1Rhc2tfQXR0YWNoX3JfUGFyYW1ldGVycxIQ",
          "CghjbGFzc19pZBgBIAEoDRIPCgd0YXNrX2lkGAIgASgNEkkKC21vZGlmeV9p",
          "bmZvGAMgAygLMjQuQ01EX01vZGlmeV9UYXNrX0F0dGFjaF9yX1BhcmFtZXRl",
          "cnMuTW9kaWZ5SW5mb0VudHJ5GkIKD01vZGlmeUluZm9FbnRyeRILCgNrZXkY",
          "ASABKA0SHgoFdmFsdWUYAiABKAsyDy5LOF9BdHRhY2hfVW5pdDoCOAEi1wEK",
          "I0NNRF9Nb2RpZnlfVGFza19BdHRhY2hfYV9QYXJhbWV0ZXJzEhAKCGNsYXNz",
          "X2lkGAEgASgNEg8KB3Rhc2tfaWQYAiABKA0SSQoLbW9kaWZ5X2luZm8YAyAD",
          "KAsyNC5DTURfTW9kaWZ5X1Rhc2tfQXR0YWNoX2FfUGFyYW1ldGVycy5Nb2Rp",
          "ZnlJbmZvRW50cnkaQgoPTW9kaWZ5SW5mb0VudHJ5EgsKA2tleRgBIAEoDRIe",
          "CgV2YWx1ZRgCIAEoCzIPLks4X0F0dGFjaF9Vbml0OgI4ASJZCiBDTURfRGVs",
          "X1Rhc2tfQXR0YWNoX3JfUGFyYW1ldGVycxIQCghjbGFzc19pZBgBIAEoDRIP",
          "Cgd0YXNrX2lkGAIgASgNEhIKCmF0dGFjaF9pZHMYAyADKA0iWQogQ01EX0Rl",
          "bF9UYXNrX0F0dGFjaF9hX1BhcmFtZXRlcnMSEAoIY2xhc3NfaWQYASABKA0S",
          "DwoHdGFza19pZBgCIAEoDRISCgphdHRhY2hfaWRzGAMgAygNImgKIENNRF9B",
          "ZGRfVGFza19BdHRhY2hfcl9QYXJhbWV0ZXJzEhAKCGNsYXNzX2lkGAEgASgN",
          "Eg8KB3Rhc2tfaWQYAiABKA0SIQoIYWRkX2luZm8YBCADKAsyDy5LOF9BdHRh",
          "Y2hfVW5pdCLIAQogQ01EX0FkZF9UYXNrX0F0dGFjaF9hX1BhcmFtZXRlcnMS",
          "EAoIY2xhc3NfaWQYASABKA0SDwoHdGFza19pZBgCIAEoDRJACghhZGRfaW5m",
          "bxgEIAMoCzIuLkNNRF9BZGRfVGFza19BdHRhY2hfYV9QYXJhbWV0ZXJzLkFk",
          "ZEluZm9FbnRyeRo/CgxBZGRJbmZvRW50cnkSCwoDa2V5GAEgASgNEh4KBXZh",
          "bHVlGAIgASgLMg8uSzhfQXR0YWNoX1VuaXQ6AjgBIkgKHUNNRF9HZXRfTWFp",
          "bGxpc3Rfcl9QYXJhbWV0ZXJzEhQKDHJlcXVlc3RfdHlwZRgBIAEoDRIRCglz",
          "ZW50X21haWwYAiABKA0iTAodQ01EX0dldF9NYWlsbGlzdF9hX1BhcmFtZXRl",
          "cnMSGAoJbWFpbF9saXN0GAEgAygLMgUuTWFpbBIRCglzZW50X21haWwYAiAB",
          "KA0iLQoaQ01EX1JlYWRfbWFpbF9yX1BhcmFtZXRlcnMSDwoHbWFpbF9pZBgB",
          "IAEoBCItChpDTURfUmVhZF9NYWlsX2FfUGFyYW1ldGVycxIPCgdtYWlsX2lk",
          "GAEgASgEIi0KGUNNRF9EZWxfTWFpbF9yX1BhcmFtZXRlcnMSEAoIbWFpbF9p",
          "ZHMYASADKAQiLQoZQ01EX0RlbF9NYWlsX2FfUGFyYW1ldGVycxIQCghtYWls",
          "X2lkcxgBIAMoBCI2ChpDTURfU2VuZF9NYWlsX3JfUGFyYW1ldGVycxIYCglz",
          "ZW5kX21haWwYASABKAsyBS5NYWlsIjYKGkNNRF9TZW5kX01haWxfYV9QYXJh",
          "bWV0ZXJzEhgKCXNlbnRfbWFpbBgBIAEoCzIFLk1haWwiOQoeQ01EX05ld19N",
          "YWlsX05vdGlmeV9QYXJhbWV0ZXJzEhcKCG5ld19tYWlsGAEgASgLMgUuTWFp",
          "bCJfCg5HQl9BdHRhY2hfSW5mbxIYChBhdHRhY2hfdXJsX2ltYWdlGAEgAygJ",
          "EhgKEGF0dGFjaF91cmxfdmlkZW8YAiADKAkSGQoRYXR0YWNoX3VybF9jb3Vy",
          "c2UYAyADKAki3AUKCUdhbWVCb2FyZBINCgVnYl9pZBgBIAEoDRIPCgdnYl9u",
          "YW1lGAIgASgJEhYKDmdiX2Rlc2NyaXB0aW9uGAMgASgJEhYKDmdiX3Njcmlw",
          "dF9zaG93GAQgASgNEhkKEWdiX2Rvd25sb2FkX2NvdW50GAUgASgNEhQKDGdi",
          "X2NyZWF0ZV9pZBgGIAEoDRIWCg5nYl9jcmVhdGVfdGltZRgHIAEoBBITCgtn",
          "Yl9zZW5jZV9pZBgIIAEoDRIwCgxnYl9saWtlX2xpc3QYCSADKAsyGi5HYW1l",
          "Qm9hcmQuR2JMaWtlTGlzdEVudHJ5EjQKDmdiX2Fuc3dlcl9saXN0GAogAygL",
          "MhwuR2FtZUJvYXJkLkdiQW5zd2VyTGlzdEVudHJ5EhEKCXByb2pfcGF0aBgL",
          "IAEoCRIbChNnYl9jcmVhdGVyX25pY2tuYW1lGAwgASgJEg8KB2diX3R5cGUY",
          "DSABKA0SJwoOZ2JfYXR0YWNoX2luZm8YDiABKAsyDy5HQl9BdHRhY2hfSW5m",
          "bxIVCg1nYl9wYXJhbWV0ZXJzGA8gASgJEh4KFmdiX2FsbG93X3JlcGVhdF9h",
          "bnN3ZXIYECABKAgSGAoQZ2JfbWF4X2Fuc3dlcl9pZBgRIAEoDRI4ChhnYl9w",
          "cm9qZWN0X2xhbmd1YWdlX3R5cGUYEiABKA4yFi5Qcm9qZWN0X0xhbmd1YWdl",
          "X1R5cGUSFgoOZ2JfdXBkYXRlX3RpbWUYEyABKAQSKwoSZ2JfYXR0YWNoX2lu",
          "Zm9fbmV3GBQgASgLMg8uSzhfQXR0YWNoX0luZm8aPwoPR2JMaWtlTGlzdEVu",
          "dHJ5EgsKA2tleRgBIAEoDRIbCgV2YWx1ZRgCIAEoCzIMLkdCTGlrZV9JbmZv",
          "OgI4ARo+ChFHYkFuc3dlckxpc3RFbnRyeRILCgNrZXkYASABKA0SGAoFdmFs",
          "dWUYAiABKAsyCS5HQkFuc3dlcjoCOAEi9AIKIUNNRF9DcmVhdGVfR2FtZWJv",
          "YXJkX3JfUGFyYW1ldGVycxIPCgdnYl9uYW1lGAEgASgJEhYKDmdiX3Njcmlw",
          "dF9zaG93GAIgASgNEhMKC2diX3NlbmNlX2lkGAMgASgNEhYKDmdiX2Rlc2Ny",
          "aXB0aW9uGAQgASgJEhUKDWdiX3NhdmVkX3BhdGgYBiABKAkSJwoOZ2JfYXR0",
          "YWNoX2luZm8YByABKAsyDy5HQl9BdHRhY2hfSW5mbxIVCg1nYl9wYXJhbWV0",
          "ZXJzGAggASgJEh4KFmdiX2FsbG93X3JlcGVhdF9hbnN3ZXIYCSABKAgSOAoY",
          "Z2JfcHJvamVjdF9sYW5ndWFnZV90eXBlGAogASgOMhYuUHJvamVjdF9MYW5n",
          "dWFnZV9UeXBlEhsKCGdiX2ZpbGVzGAsgASgLMgkuRmlsZUxpc3QSKwoSZ2Jf",
          "YXR0YWNoX2luZm9fbmV3GAwgASgLMg8uSzhfQXR0YWNoX0luZm8iiQEKIUNN",
          "RF9DcmVhdGVfR2FtZWJvYXJkX2FfUGFyYW1ldGVycxIPCgdnYl9uYW1lGAEg",
          "ASgJEhYKDmdiX3NjcmlwdF9zaG93GAIgASgNEg0KBWdiX2lkGAsgASgNEg8K",
          "B2diX3BhdGgYDCABKAkSGwoHZ2JfaW5mbxgNIAEoCzIKLkdhbWVCb2FyZCLU",
          "AQohQ01EX01vZGlmeV9HYW1lYm9hcmRfcl9QYXJhbWV0ZXJzEg0KBWdiX2lk",
          "GAEgASgNEhYKDmdiX3NjcmlwdF9zaG93GAIgASgNEicKDmdiX2F0dGFjaF9p",
          "bmZvGAQgASgLMg8uR0JfQXR0YWNoX0luZm8SFQoNZ2JfcGFyYW1ldGVycxgF",
          "IAEoCRIbCghnYl9maWxlcxgGIAEoCzIJLkZpbGVMaXN0EisKEmdiX2F0dGFj",
          "aF9pbmZvX25ldxgHIAEoCzIPLks4X0F0dGFjaF9JbmZvIjIKIUNNRF9Nb2Rp",
          "ZnlfR2FtZWJvYXJkX2FfUGFyYW1ldGVycxINCgVnYl9pZBgBIAEoDSIvCh5D",
          "TURfRGVsX0dhbWVib2FyZF9yX1BhcmFtZXRlcnMSDQoFZ2JfaWQYASABKA0i",
          "LwoeQ01EX0RlbF9HYW1lYm9hcmRfYV9QYXJhbWV0ZXJzEg0KBWdiX2lkGAEg",
          "ASgNIi8KHkNNRF9HZXRfR2FtZWJvYXJkX3JfUGFyYW1ldGVycxINCgVnYl9p",
          "ZBgBIAEoDSI9Ch5DTURfR2V0X0dhbWVib2FyZF9hX1BhcmFtZXRlcnMSGwoH",
          "Z2JfaW5mbxgBIAEoCzIKLkdhbWVCb2FyZCLDAQoiQ01EX0dldF9HYW1lYm9h",
          "cmRsaXN0X3JfUGFyYW1ldGVycxIfCglzb3J0X3R5cGUYASABKA4yDC5HQlNv",
          "cnRfVHlwZRITCgtzaG93X3NjcmlwdBgCIAEoDRIRCglzdGFydF9wb3MYAyAB",
          "KA0SEwoLbGltaXRfY291bnQYBCABKA0SDAoEZGVzYxgFIAEoDRIxChFyZXFf",
          "bGFuZ3VhZ2VfdHlwZRgGIAEoDjIWLlByb2plY3RfTGFuZ3VhZ2VfVHlwZSJB",
          "CiJDTURfR2V0X0dhbWVib2FyZGxpc3RfYV9QYXJhbWV0ZXJzEhsKB2diX2xp",
          "c3QYASADKAsyCi5HYW1lQm9hcmQicgohQ01EX0Fuc3dlcl9HYW1lYm9hcmRf",
          "cl9QYXJhbWVyZXJzEg0KBWdiX2lkGAEgASgNEiEKDmdiX2Fuc3dlcl9pbmZv",
          "GAcgASgLMgkuR0JBbnN3ZXISGwoIZ2JfZmlsZXMYCCABKAsyCS5GaWxlTGlz",
          "dCJVCiFDTURfQW5zd2VyX0dhbWVib2FyZF9hX1BhcmFtZXJlcnMSDQoFZ2Jf",
          "aWQYASABKA0SIQoOZ2JfYW5zd2VyX2luZm8YAiABKAsyCS5HQkFuc3dlciJU",
          "Ch9DTURfTGlrZV9HYW1lYm9hcmRfcl9QYXJhbWV0ZXJzEg0KBWdiX2lkGAEg",
          "ASgNEg8KB2diX2xpa2UYAiABKAUSEQoJYW5zd2VyX2lkGAMgASgNIlQKH0NN",
          "RF9MaWtlX0dhbWVib2FyZF9hX1BhcmFtZXRlcnMSDQoFZ2JfaWQYASABKA0S",
          "DwoHZ2JfbGlrZRgCIAEoBRIRCglhbnN3ZXJfaWQYAyABKA0iNgojQ01EX0Rv",
          "d25sb2FkX0dhbWVib2FyZF9yX1BhcmFtZXRlcnMSDwoHZ2JfcGF0aBgBIAEo",
          "CSIlCiNDTURfRG93bmxvYWRfR2FtZWJvYXJkX2FfUGFyYW1ldGVycyJWCiBD",
          "TURfR3JhZGVfR2FtZWJvYXJkX3JfUGFyYW1ldGVycxINCgVnYl9pZBgBIAEo",
          "DRIRCglhbnN3ZXJfaWQYAiABKA0SEAoIZ2Jfc2NvcmUYAyABKAUiVgogQ01E",
          "X0dyYWRlX0dhbWVib2FyZF9hX1BhcmFtZXRlcnMSDQoFZ2JfaWQYASABKA0S",
          "EQoJYW5zd2VyX2lkGAIgASgNEhAKCGdiX3Njb3JlGAMgASgFIkkKJUNNRF9E",
          "ZWxfR2FtZWJvYXJkX0Fuc3dlcl9yX1BhcmFtZXRlcnMSDQoFZ2JfaWQYASAB",
          "KA0SEQoJYW5zd2VyX2lkGAIgASgNIkkKJUNNRF9EZWxfR2FtZWJvYXJkX0Fu",
          "c3dlcl9hX1BhcmFtZXRlcnMSDQoFZ2JfaWQYASABKA0SEQoJYW5zd2VyX2lk",
          "GAIgASgNIiMKIUNNRF9HZXRfVXNlcl9TZXR0aW5nX3JfUGFyYW1ldGVycyI4",
          "CiFDTURfR2V0X1VzZXJfU2V0dGluZ19hX1BhcmFtZXRlcnMSEwoLanNvbl9z",
          "dHJpbmcYASABKAkiOwokQ01EX1VwZGF0ZV9Vc2VyX1NldHRpbmdfcl9QYXJh",
          "bWV0ZXJzEhMKC2pzb25fc3RyaW5nGAEgASgJIjsKJENNRF9VcGRhdGVfVXNl",
          "cl9TZXR0aW5nX2FfUGFyYW1ldGVycxITCgtqc29uX3N0cmluZxgBIAEoCSJ9",
          "CglSYW5rX1VuaXQSMAoRdXNlcl9kaXNwbGF5X2luZm8YASABKAsyFS5BOF9V",
          "c2VyX0Rpc3BsYXlfSW5mbxIPCgdyYW5rX2lkGAIgASgNEhIKCnJhbmtfc2Nv",
          "cmUYAyABKAUSGQoRcmFua19zYW1wbGVfY291bnQYBCABKA0iYwodQ01EX0dl",
          "dF9SYW5rbGlzdF9yX1BhcmFtZXRlcnMSDQoFZ2JfaWQYASABKA0SDQoFcGtf",
          "aWQYAiABKA0SEQoJY291cnNlX2lkGAMgASgNEhEKCXBlcmlvZF9pZBgEIAEo",
          "DSKPAQodQ01EX0dldF9SYW5rbGlzdF9hX1BhcmFtZXRlcnMSMAoIcmVxX2lu",
          "Zm8YASABKAsyHi5DTURfR2V0X1JhbmtsaXN0X3JfUGFyYW1ldGVycxIdCgly",
          "YW5rX2xpc3QYAiADKAsyCi5SYW5rX1VuaXQSHQoJc2VsZl9pbmZvGAMgASgL",
          "MgouUmFua19Vbml0IoMBCglQS19SZXN1bHQSHQoVY2hhbmxsZW5nZXJfYW5z",
          "d2VyX2lkGAEgASgNEhkKEWNoYW5sbGVuZ2VyX3Njb3JlGAIgASgFEhMKC2Fj",
          "Y2VwdGVyX2lkGAMgASgNEhYKDmFjY2VwdGVyX3Njb3JlGAQgASgFEg8KB3Br",
          "X3RpbWUYBSABKAQiDQoLUEtMaWtlX0luZm8isgMKCFBLQW5zd2VyEhYKDnBr",
          "X3NjcmlwdF9zaG93GAEgASgNEhYKDmRvd25sb2FkX2NvdW50GAIgASgNEhEK",
          "CXByb2pfcGF0aBgDIAEoCRITCgthbnN3ZXJfdGltZRgEIAEoBBITCgthbnN3",
          "ZXJfbmFtZRgFIAEoCRIvCgxwa19saWtlX2xpc3QYBiADKAsyGS5QS0Fuc3dl",
          "ci5Qa0xpa2VMaXN0RW50cnkSEQoJYW5zd2VyX2lkGAcgASgNEiIKDnBrX3Jl",
          "c3VsdF9saXN0GAggAygLMgouUEtfUmVzdWx0EhQKDHBrX3dpbl9jb3VudBgJ",
          "IAEoDRIVCg1wa19sb3N0X2NvdW50GAogASgNEhUKDXBrX2RyYXdfY291bnQY",
          "CyABKA0SFgoOYW5zd2VyX3VzZXJfaWQYDCABKA0SFwoPYW5zd2VyX25pY2tu",
          "YW1lGA0gASgJEhsKE2Fuc3dlcl9wcm9qZWN0X3R5cGUYDiABKA0aPwoPUGtM",
          "aWtlTGlzdEVudHJ5EgsKA2tleRgBIAEoDRIbCgV2YWx1ZRgCIAEoCzIMLlBL",
          "TGlrZV9JbmZvOgI4ASJfCg5QS19BdHRhY2hfSW5mbxIYChBhdHRhY2hfdXJs",
          "X2ltYWdlGAEgAygJEhgKEGF0dGFjaF91cmxfdmlkZW8YAiADKAkSGQoRYXR0",
          "YWNoX3VybF9jb3Vyc2UYAyADKAkiswUKAlBLEg0KBXBrX2lkGAEgASgNEg8K",
          "B3BrX25hbWUYAiABKAkSFgoOcGtfZGVzY3JpcHRpb24YAyABKAkSFgoOcGtf",
          "c2NyaXB0X3Nob3cYBCABKA0SGQoRcGtfZG93bmxvYWRfY291bnQYBSABKA0S",
          "FAoMcGtfY3JlYXRlX2lkGAYgASgNEhYKDnBrX2NyZWF0ZV90aW1lGAcgASgE",
          "EhMKC3BrX3NlbmNlX2lkGAggASgNEikKDHBrX2xpa2VfbGlzdBgJIAMoCzIT",
          "LlBLLlBrTGlrZUxpc3RFbnRyeRItCg5wa19hbnN3ZXJfbGlzdBgKIAMoCzIV",
          "LlBLLlBrQW5zd2VyTGlzdEVudHJ5EhEKCXByb2pfcGF0aBgLIAEoCRIVCg1w",
          "a19wYXJhbWV0ZXJzGAwgASgJEh4KFnBrX2FsbG93X3JlcGVhdF9hbnN3ZXIY",
          "DSABKA0SJwoOcGtfYXR0YWNoX2luZm8YDiABKAsyDy5QS19BdHRhY2hfSW5m",
          "bxIbChNwa19jcmVhdGVyX25pY2tuYW1lGA8gASgJEhUKDXBrX21heF9hbnN3",
          "ZXIYECABKA0SOAoYcGtfcHJvamVjdF9sYW5ndWFnZV90eXBlGBEgASgOMhYu",
          "UHJvamVjdF9MYW5ndWFnZV9UeXBlEhYKDnBrX3VwZGF0ZV90aW1lGBIgASgE",
          "EisKEnBrX2F0dGFjaF9pbmZvX25ldxgTIAEoCzIPLks4X0F0dGFjaF9JbmZv",
          "Gj8KD1BrTGlrZUxpc3RFbnRyeRILCgNrZXkYASABKA0SGwoFdmFsdWUYAiAB",
          "KAsyDC5QS0xpa2VfSW5mbzoCOAEaPgoRUGtBbnN3ZXJMaXN0RW50cnkSCwoD",
          "a2V5GAEgASgNEhgKBXZhbHVlGAIgASgLMgkuUEtBbnN3ZXI6AjgBItYCChpD",
          "TURfQ3JlYXRlX1BLX3JfUGFyYW1ldGVycxIPCgdwa19uYW1lGAEgASgJEhYK",
          "DnBrX3NjcmlwdF9zaG93GAIgASgNEhMKC3BrX3NlbmNlX2lkGAMgASgNEhYK",
          "DnBrX2Rlc2NyaXB0aW9uGAQgASgJEhUKDXBrX3BhcmFtZXRlcnMYBiABKAkS",
          "HgoWcGtfYWxsb3dfcmVwZWF0X2Fuc3dlchgHIAEoDRInCg5wa19hdHRhY2hf",
          "aW5mbxgIIAEoCzIPLlBLX0F0dGFjaF9JbmZvEjgKGHBrX3Byb2plY3RfbGFu",
          "Z3VhZ2VfdHlwZRgJIAEoDjIWLlByb2plY3RfTGFuZ3VhZ2VfVHlwZRIbCghw",
          "a19maWxlcxgKIAEoCzIJLkZpbGVMaXN0EisKEnBrX2F0dGFjaF9pbmZvX25l",
          "dxgLIAEoCzIPLks4X0F0dGFjaF9JbmZvIjIKGkNNRF9DcmVhdGVfUEtfYV9Q",
          "YXJhbWV0ZXJzEhQKB3BrX2luZm8YASABKAsyAy5QSyKBAQoaQ01EX01vZGlm",
          "eV9QS19yX1BhcmFtZXRlcnMSDQoFcGtfaWQYASABKA0SJwoOcGtfYXR0YWNo",
          "X2luZm8YAiABKAsyDy5QS19BdHRhY2hfSW5mbxIrChJwa19hdHRhY2hfaW5m",
          "b19uZXcYAyABKAsyDy5LOF9BdHRhY2hfSW5mbyKBAQoaQ01EX01vZGlmeV9Q",
          "S19hX1BhcmFtZXRlcnMSDQoFcGtfaWQYASABKA0SJwoOcGtfYXR0YWNoX2lu",
          "Zm8YAiABKAsyDy5QS19BdHRhY2hfSW5mbxIrChJwa19hdHRhY2hfaW5mb19u",
          "ZXcYAyABKAsyDy5LOF9BdHRhY2hfSW5mbyIoChdDTURfRGVsX1BLX3JfUGFy",
          "YW1ldGVycxINCgVwa19pZBgBIAEoDSIoChdDTURfRGVsX1BLX2FfUGFyYW1l",
          "dGVycxINCgVwa19pZBgBIAEoDSIoChdDTURfR2V0X1BLX3JfUGFyYW1ldGVy",
          "cxINCgVwa19pZBgBIAEoDSIvChdDTURfR2V0X1BLX2FfUGFyYW1ldGVycxIU",
          "Cgdwa19pbmZvGAEgASgLMgMuUEsivAEKG0NNRF9HZXRfUEtMaXN0X3JfUGFy",
          "YW1ldGVycxIfCglzb3J0X3R5cGUYASABKA4yDC5QS1NvcnRfVHlwZRITCgtz",
          "aG93X3NjcmlwdBgCIAEoDRIRCglzdGFydF9wb3MYAyABKA0SEwoLbGltaXRf",
          "Y291bnQYBCABKA0SDAoEZGVzYxgFIAEoDRIxChFyZXFfbGFuZ3VhZ2VfdHlw",
          "ZRgGIAEoDjIWLlByb2plY3RfTGFuZ3VhZ2VfVHlwZSIzChtDTURfR2V0X1BL",
          "TGlzdF9hX1BhcmFtZXRlcnMSFAoHcGtfbGlzdBgBIAMoCzIDLlBLImsKGkNN",
          "RF9BbnN3ZXJfUEtfcl9QYXJhbWV0ZXJzEg0KBXBrX2lkGAEgASgNEiEKDnBr",
          "X2Fuc3dlcl9pbmZvGAcgASgLMgkuUEtBbnN3ZXISGwoIcGtfZmlsZXMYCCAB",
          "KAsyCS5GaWxlTGlzdCJOChpDTURfQW5zd2VyX1BLX2FfUGFyYW1ldGVycxIN",
          "CgVwa19pZBgBIAEoDRIhCg5wa19hbnN3ZXJfaW5mbxgCIAEoCzIJLlBLQW5z",
          "d2VyIj8KGENNRF9MaWtlX1BLX3JfUGFyYW1ldGVycxINCgVwa19pZBgBIAEo",
          "DRIUCgxwa19hbnN3ZXJfaWQYAiABKA0iPwoYQ01EX0xpa2VfUEtfYV9QYXJh",
          "bWV0ZXJzEg0KBXBrX2lkGAEgASgNEhQKDHBrX2Fuc3dlcl9pZBgCIAEoDSIv",
          "ChxDTURfRG93bmxvYWRfUEtfcl9QYXJhbWV0ZXJzEg8KB3BrX3BhdGgYASAB",
          "KAkiHgocQ01EX0Rvd25sb2FkX1BLX2FfUGFyYW1ldGVycyJIChNDTURfUEtf",
          "cl9QYXJhbWV0ZXJzEg0KBXBrX2lkGAEgASgNEiIKDnBrX3Jlc3VsdF9pbmZv",
          "GAIgASgLMgouUEtfUmVzdWx0IkgKE0NNRF9QS19hX1BhcmFtZXRlcnMSDQoF",
          "cGtfaWQYASABKA0SIgoOcGtfcmVzdWx0X2luZm8YAiABKAsyCi5QS19SZXN1",
          "bHQiRQoeQ01EX0RlbF9QS19BbnN3ZXJfcl9QYXJhbWV0ZXJzEg0KBXBrX2lk",
          "GAEgASgNEhQKDHBrX2Fuc3dlcl9pZBgCIAEoDSJFCh5DTURfRGVsX1BLX0Fu",
          "c3dlcl9hX1BhcmFtZXRlcnMSDQoFcGtfaWQYASABKA0SFAoMcGtfYW5zd2Vy",
          "X2lkGAIgASgNIkcKDlRyb3BoeV9TZXR0aW5nEhsKE3Ryb3BoeV9qc29uX3Nl",
          "dHRpbmcYASABKAkSGAoQdHJvcGh5X21pbl9zY29yZRgCIAEoBSK2AQoQVHJv",
          "cGhpZXNfU2V0dGluZxIzChpjb3Vyc2VfZ29sZF90cm9waHlfc2V0dGluZxgB",
          "IAEoCzIPLlRyb3BoeV9TZXR0aW5nEjYKHWNvdXJzZV9zaWxpdmVyX3Ryb3Bo",
          "eV9zZXR0aW5nGAIgASgLMg8uVHJvcGh5X1NldHRpbmcSNQocY291cnNlX2Jy",
          "b256ZV90cm9waHlfc2V0dGluZxgDIAEoCzIPLlRyb3BoeV9TZXR0aW5nIjcK",
          "E0NlcnRpZmljYXRlX1NldHRpbmcSIAoYY2VydGlmaWNhdGVfanNvbl9zZXR0",
          "aW5nGAEgASgJIsQBChRDb3Vyc2VfSG9ub3JfU2V0dGluZxIRCgljb3Vyc2Vf",
          "aWQYASABKA0SKwoQY291cnNlX3JhY2VfdHlwZRgCIAEoDjIRLkNvdXJzZV9S",
          "YWNlX1R5cGUSMgoXY291cnNlX3Ryb3BoaWVzX3NldHRpbmcYAyABKAsyES5U",
          "cm9waGllc19TZXR0aW5nEjgKGmNvdXJzZV9jZXJ0aWZpY2F0ZV9zZXR0aW5n",
          "GAQgASgLMhQuQ2VydGlmaWNhdGVfU2V0dGluZyLLAQoQUGVyaW9kX0l0ZW1f",
          "SW5mbxIPCgdpdGVtX2lkGAEgASgNEhgKEGl0ZW1fZGVzY3JpcHRpb24YAiAB",
          "KAkSEQoJaXRlbV90eXBlGAMgASgNEhAKCGl0ZW1fdXJsGAQgASgJEhsKB2di",
          "X2luZm8YBiABKAsyCi5HYW1lQm9hcmQSEQoJaXRlbV9uYW1lGAcgASgJEiEK",
          "GWl0ZW1fY29tcGxldGVkX3VzZXJfY291bnQYCCABKA0SFAoMcHJvamVjdF9w",
          "YXRoGAkgASgJImAKF1BlcmlvZF9GaW5pc2hfQ29uZGl0aW9uEhcKD3RocmVl",
          "c3Rhcl9zY29yZRgBIAEoDRIYChBkb3VibGVzdGFyX3Njb3JlGAIgASgNEhIK",
          "CnBhc3Nfc2NvcmUYAyABKA0i5wMKC1BlcmlvZF9JbmZvEhEKCXBlcmlvZF9p",
          "ZBgBIAEoDRITCgtwZXJpb2RfbmFtZRgCIAEoCRIaChJwZXJpb2RfZGVzY3Jp",
          "cHRpb24YAyABKAkSMwoMcGVyaW9kX2l0ZW1zGAQgAygLMh0uUGVyaW9kX0lu",
          "Zm8uUGVyaW9kSXRlbXNFbnRyeRI0ChJwZXJpb2RfZmluc2lzaF9jb24YBSAB",
          "KAsyGC5QZXJpb2RfRmluaXNoX0NvbmRpdGlvbhIgChhwZXJpb2RfaXRlbV9k",
          "aXNwbGF5X2xpc3QYBiADKA0SFQoNbWF4X3BlcmlvZF9pZBgHIAEoDRIbChN1",
          "bmxvY2tlZF91c2VyX2NvdW50GAkgASgNEiMKG3BlcmlvZF9jb21wbGV0ZWRf",
          "dXNlcl9jb3VudBgKIAEoDRIaChJwZXJpb2RfdG90YWxfc2NvcmUYCyABKA0S",
          "GQoRcGVyaW9kX3RvdGFsX3N0YXIYDCABKA0SGwoTcGVyaW9kX2F2ZXJhZ2Vf",
          "YmFzZRgNIAEoDRITCgtwZXJpb2RfdHlwZRgOIAEoDRpFChBQZXJpb2RJdGVt",
          "c0VudHJ5EgsKA2tleRgBIAEoDRIgCgV2YWx1ZRgCIAEoCzIRLlBlcmlvZF9J",
          "dGVtX0luZm86AjgBIpkGCgtDb3Vyc2VfSW5mbxIRCgljb3Vyc2VfaWQYASAB",
          "KA0SJQoNY291cnNlX3N0YXR1cxgCIAEoDjIOLkNvdXJzZV9TdGF0dXMSEwoL",
          "Y291cnNlX2ljb24YAyABKA0SEwoLY291cnNlX25hbWUYBCABKAkSGgoSY291",
          "cnNlX2Rlc2NyaXB0aW9uGAUgASgJEh0KFWNvdXJzZV9jcmVhdGVyX3VzZXJp",
          "ZBgGIAEoDRIfChdjb3Vyc2VfY3JlYXRlcl9uaWNrbmFtZRgHIAEoCRISCgpw",
          "YXNzX3Njb3JlGAggASgFEhAKCGpzb25fY2ZnGAkgASgJEjEKC3BlcmlvZF9s",
          "aXN0GAogAygLMhwuQ291cnNlX0luZm8uUGVyaW9kTGlzdEVudHJ5EhQKDGNv",
          "dXJzZV9wcmljZRgLIAEoDRIbChNjb3Vyc2VfcHVibGlzaF90aW1lGAwgASgE",
          "Eh4KFmNvdXJzZV9jb3Zlcl9pbWFnZV91cmwYDSABKAkSGwoTcGVyaW9kX2Rp",
          "c3BsYXlfbGlzdBgOIAMoDRIgChhjb3Vyc2VfYXR0ZW5kX3VzZXJfY291bnQY",
          "ECABKA0SIQoLY291cnNlX3R5cGUYESABKA4yDC5Db3Vyc2VfdHlwZRIZChFj",
          "b3Vyc2Vfc3RhcnRfdGltZRgSIAEoBBIXCg9jb3Vyc2VfZW5kX3RpbWUYEyAB",
          "KAQSMwoUY291cnNlX2hvbm9yX3NldHRpbmcYFCABKAsyFS5Db3Vyc2VfSG9u",
          "b3JfU2V0dGluZxI8Chxjb3Vyc2VfcHJvamVjdF9sYW5ndWFnZV90eXBlGBUg",
          "ASgOMhYuUHJvamVjdF9MYW5ndWFnZV9UeXBlEhoKEmNvdXJzZV91cGRhdGVf",
          "dGltZRgWIAEoBBIgChhjb3Vyc2VfYWxsb3dfZG93bmxvYWRfZ2IYFyABKAgS",
          "FgoOY291cnNlX2diX3R5cGUYGCABKA0aPwoPUGVyaW9kTGlzdEVudHJ5EgsK",
          "A2tleRgBIAEoDRIbCgV2YWx1ZRgCIAEoCzIMLlBlcmlvZF9JbmZvOgI4ASJD",
          "Ch5DTURfQ3JlYXRlX0NvdXJzZV9yX1BhcmFtZXRlcnMSIQoLY3JlYXRlX2lu",
          "Zm8YASABKAsyDC5Db3Vyc2VfSW5mbyJDCh5DTURfQ3JlYXRlX0NvdXJzZV9h",
          "X1BhcmFtZXRlcnMSIQoLY291cnNlX2luZm8YASABKAsyDC5Db3Vyc2VfSW5m",
          "byJDCh5DTURfTW9kaWZ5X0NvdXJzZV9yX1BhcmFtZXRlcnMSIQoLbW9kaWZ5",
          "X2luZm8YASABKAsyDC5Db3Vyc2VfSW5mbyJDCh5DTURfTW9kaWZ5X0NvdXJz",
          "ZV9hX1BhcmFtZXRlcnMSIQoLY291cnNlX2luZm8YASABKAsyDC5Db3Vyc2Vf",
          "SW5mbyIwChtDTURfRGVsX0NvdXJzZV9yX1BhcmFtZXRlcnMSEQoJY291cnNl",
          "X2lkGAEgASgNIjAKG0NNRF9EZWxfQ291cnNlX2FfUGFyYW1ldGVycxIRCglj",
          "b3Vyc2VfaWQYASABKA0ivAEKIENNRF9HZXRfQ291cnNlX0xpc3Rfcl9QYXJh",
          "bWV0ZXJzEiQKCHJlcV90eXBlGAEgASgOMhIuR2V0Q291cnNlTGlzdFR5cGUS",
          "EAoIcmVxX25hbWUYAiABKAkSJQoPcmVxX2NvdXJzZV90eXBlGAMgASgOMgwu",
          "Q291cnNlX3R5cGUSOQoZcmVxX3Byb2plY3RfbGFuZ3VhZ2VfdHlwZRgEIAEo",
          "DjIWLlByb2plY3RfTGFuZ3VhZ2VfVHlwZSJECiBDTURfR2V0X0NvdXJzZV9M",
          "aXN0X2FfUGFyYW1ldGVycxIgCgpjb3VzZV9saXN0GAEgAygLMgwuQ291cnNl",
          "X0luZm8iUwobQ01EX0FkZF9QZXJpb2Rfcl9QYXJhbWV0ZXJzEhEKCWNvdXJz",
          "ZV9pZBgBIAEoDRIhCgtwZXJpb2RfaW5mbxgCIAEoCzIMLlBlcmlvZF9JbmZv",
          "IlMKG0NNRF9BZGRfUGVyaW9kX2FfUGFyYW1ldGVycxIRCgljb3Vyc2VfaWQY",
          "ASABKA0SIQoLcGVyaW9kX2luZm8YAiABKAsyDC5QZXJpb2RfSW5mbyJWCh5D",
          "TURfTW9kaWZ5X1BlcmlvZF9yX1BhcmFtZXRlcnMSEQoJY291cnNlX2lkGAEg",
          "ASgNEiEKC3BlcmlvZF9pbmZvGAIgASgLMgwuUGVyaW9kX0luZm8iVgoeQ01E",
          "X01vZGlmeV9QZXJpb2RfYV9QYXJhbWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEo",
          "DRIhCgtwZXJpb2RfaW5mbxgCIAEoCzIMLlBlcmlvZF9JbmZvIkMKG0NNRF9E",
          "ZWxfUGVyaW9kX3JfUGFyYW1ldGVycxIRCgljb3Vyc2VfaWQYASABKA0SEQoJ",
          "cGVyaW9kX2lkGAIgASgNIkMKG0NNRF9EZWxfUGVyaW9kX2FfUGFyYW1ldGVy",
          "cxIRCgljb3Vyc2VfaWQYASABKA0SEQoJcGVyaW9kX2lkGAIgASgNIjQKH0NN",
          "RF9BcHByb3ZlX0NvdXJzZV9yX1BhcmFtZXRlcnMSEQoJY291cnNlX2lkGAEg",
          "ASgNIjQKH0NNRF9BcHByb3ZlX0NvdXJzZV9hX1BhcmFtZXRlcnMSEQoJY291",
          "cnNlX2lkGAEgASgNIo0BCiJDTURfU2V0X0NvdXJzZV9TdGF0dXNfcl9QYXJh",
          "bWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEoDRIlCg1jb3Vyc2Vfc3RhdHVzGAIg",
          "ASgOMg4uQ291cnNlX1N0YXR1cxIXCg9jb3Vyc2VfcGFzc3dvcmQYAyABKAkS",
          "FAoMY291cnNlX3ByaWNlGAQgASgNIoEBCiJDTURfU2V0X0NvdXJzZV9TdGF0",
          "dXNfYV9QYXJhbWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEoDRIlCg1jb3Vyc2Vf",
          "c3RhdHVzGAIgASgOMg4uQ291cnNlX1N0YXR1cxIhCgtjb3Vyc2VfaW5mbxgD",
          "IAEoCzIMLkNvdXJzZV9JbmZvIqkBCiJDTURfQW5zd2VyX1BlcmlvZGl0ZW1f",
          "cl9QYXJhbWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEoDRIRCglwZXJpb2RfaWQY",
          "AiABKA0SFQoNcGVyaW9kaXRlbV9pZBgDIAEoDRIlChJwZXJpb2RfYW5zd2Vy",
          "X2luZm8YBSABKAsyCS5HQkFuc3dlchIfCgxwZXJpb2RfZmlsZXMYBiABKAsy",
          "CS5GaWxlTGlzdCKIAQoiQ01EX0Fuc3dlcl9QZXJpb2RpdGVtX2FfUGFyYW1l",
          "dGVycxIRCgljb3Vyc2VfaWQYASABKA0SEQoJcGVyaW9kX2lkGAIgASgNEhUK",
          "DXBlcmlvZGl0ZW1faWQYAyABKA0SJQoScGVyaW9kX2Fuc3dlcl9pbmZvGAQg",
          "ASgLMgkuR0JBbnN3ZXIilQEKH0NNRF9BZGRfUGVyaW9kaXRlbV9yX1BhcmFt",
          "ZXRlcnMSEQoJY291cnNlX2lkGAEgASgNEhEKCXBlcmlvZF9pZBgCIAEoDRIr",
          "ChBwZXJpb2RfaXRlbV9pbmZvGAMgASgLMhEuUGVyaW9kX0l0ZW1fSW5mbxIf",
          "CgxwZXJpb2RfZmlsZXMYBSABKAsyCS5GaWxlTGlzdCJ0Ch9DTURfQWRkX1Bl",
          "cmlvZGl0ZW1fYV9QYXJhbWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEoDRIRCglw",
          "ZXJpb2RfaWQYAiABKA0SKwoQcGVyaW9kX2l0ZW1faW5mbxgDIAEoCzIRLlBl",
          "cmlvZF9JdGVtX0luZm8imAEKIkNNRF9Nb2RpZnlfUGVyaW9kaXRlbV9yX1Bh",
          "cmFtZXRlcnMSEQoJY291cnNlX2lkGAEgASgNEhEKCXBlcmlvZF9pZBgCIAEo",
          "DRIrChBwZXJpb2RfaXRlbV9pbmZvGAMgASgLMhEuUGVyaW9kX0l0ZW1fSW5m",
          "bxIfCgxwZXJpb2RfZmlsZXMYBSABKAsyCS5GaWxlTGlzdCKYAQoiQ01EX01v",
          "ZGlmeV9QZXJpb2RpdGVtX2FfUGFyYW1ldGVycxIRCgljb3Vyc2VfaWQYASAB",
          "KA0SEQoJcGVyaW9kX2lkGAIgASgNEisKEHBlcmlvZF9pdGVtX2luZm8YAyAB",
          "KAsyES5QZXJpb2RfSXRlbV9JbmZvEh8KDHBlcmlvZF9maWxlcxgFIAEoCzIJ",
          "LkZpbGVMaXN0Il4KH0NNRF9EZWxfUGVyaW9kaXRlbV9yX1BhcmFtZXRlcnMS",
          "EQoJY291cnNlX2lkGAEgASgNEhEKCXBlcmlvZF9pZBgCIAEoDRIVCg1wZXJp",
          "b2RpdGVtX2lkGAMgASgNIl4KH0NNRF9EZWxfUGVyaW9kaXRlbV9hX1BhcmFt",
          "ZXRlcnMSEQoJY291cnNlX2lkGAEgASgNEhEKCXBlcmlvZF9pZBgCIAEoDRIV",
          "Cg1wZXJpb2RpdGVtX2lkGAMgASgNIpgBCiFDTURfU2NvcmVfUGVyaW9kaXRl",
          "bV9yX1BhcmFtZXRlcnMSEQoJY291cnNlX2lkGAEgASgNEhEKCXBlcmlvZF9p",
          "ZBgCIAEoDRIVCg1wZXJpb2RpdGVtX2lkGAMgASgNEhwKFHBlcmlvZGl0ZW1f",
          "YW5zd2VyX2lkGAQgASgNEhgKEHBlcmlvZGl0ZW1fc2NvcmUYBSABKAUimAEK",
          "IUNNRF9TY29yZV9QZXJpb2RpdGVtX2FfUGFyYW1ldGVycxIRCgljb3Vyc2Vf",
          "aWQYASABKA0SEQoJcGVyaW9kX2lkGAIgASgNEhUKDXBlcmlvZGl0ZW1faWQY",
          "AyABKA0SHAoUcGVyaW9kaXRlbV9hbnN3ZXJfaWQYBCABKA0SGAoQcGVyaW9k",
          "aXRlbV9zY29yZRgFIAEoBSJJChtDTURfQnV5X0NvdXJzZV9yX1BhcmFtZXRl",
          "cnMSEQoJY291cnNlX2lkGAEgASgNEhcKD2NvdXJzZV9wYXNzd29yZBgCIAEo",
          "CSIwChtDTURfQnV5X0NvdXJzZV9hX1BhcmFtZXRlcnMSEQoJY291cnNlX2lk",
          "GAEgASgNIn8KJUNNRF9TZXRfUGVyaW9kaXRlbV9TdGF0dXNfcl9QYXJhbXRl",
          "cnMSEQoJY291cnNlX2lkGAEgASgNEhEKCXBlcmlvZF9pZBgCIAEoDRIVCg1w",
          "ZXJpb2RpdGVtX2lkGAMgASgNEhkKEXBlcmlvZGl0ZW1fc3RhdHVzGAQgASgN",
          "In8KJUNNRF9TZXRfUGVyaW9kaXRlbV9TdGF0dXNfYV9QYXJhbXRlcnMSEQoJ",
          "Y291cnNlX2lkGAEgASgNEhEKCXBlcmlvZF9pZBgCIAEoDRIVCg1wZXJpb2Rp",
          "dGVtX2lkGAMgASgNEhkKEXBlcmlvZGl0ZW1fc3RhdHVzGAQgASgNIjkKJENN",
          "RF9HZXRfQ291cnNlX1Bhc3N3b3JkX3JfUGFyYW1ldGVycxIRCgljb3Vyc2Vf",
          "aWQYASABKA0iUgokQ01EX0dldF9Db3Vyc2VfUGFzc3dvcmRfYV9QYXJhbWV0",
          "ZXJzEhEKCWNvdXJzZV9pZBgBIAEoDRIXCg9jb3Vyc2VfcGFzc3dvcmQYAiAB",
          "KAkigwEKJkNNRF9EZWxfUGVyaW9kaXRlbV9BbnN3ZXJfcl9QYXJhbWV0ZXJz",
          "EhEKCWNvdXJzZV9pZBgBIAEoDRIRCglwZXJpb2RfaWQYAiABKA0SFQoNcGVy",
          "aW9kaXRlbV9pZBgDIAEoDRIcChRwZXJpb2RpdGVtX2Fuc3dlcl9pZBgEIAEo",
          "DSKDAQomQ01EX0RlbF9QZXJpb2RpdGVtX0Fuc3dlcl9hX1BhcmFtZXRlcnMS",
          "EQoJY291cnNlX2lkGAEgASgNEhEKCXBlcmlvZF9pZBgCIAEoDRIVCg1wZXJp",
          "b2RpdGVtX2lkGAMgASgNEhwKFHBlcmlvZGl0ZW1fYW5zd2VyX2lkGAQgASgN",
          "Ik8KKkNNRF9Db3Vyc2VfU3RhdHVzX0NoYW5nZV9Ob3RpZnlfUGFyYW1ldGVy",
          "cxIhCgtjb3Vyc2VfaW5mbxgBIAEoCzIMLkNvdXJzZV9JbmZvIskBChBVc2Vy",
          "X1Ryb3BoeV9JbmZvEhIKCmF3YXJkX3RpbWUYASABKAQSIgoMYXdhcmRfdHJv",
          "cGh5GAIgASgOMgwuVHJvcGh5X1R5cGUSEQoJbmV3X3N0YXRlGAMgASgIEicK",
          "DnRyb3BoeV9zZXR0aW5nGAQgASgLMg8uVHJvcGh5X1NldHRpbmcSFAoMY291",
          "cnNlX3Njb3JlGAUgASgFEisKEGNvdXJzZV9yYWNlX3R5cGUYBiABKA4yES5D",
          "b3Vyc2VfUmFjZV9UeXBlInEKFVVzZXJfQ2VydGlmaWNhdGVfSW5mbxISCgph",
          "d2FyZF90aW1lGAEgASgEEhEKCW5ld19zdGF0ZRgCIAEoCBIxChNjZXJ0aWZp",
          "Y2F0ZV9zZXR0aW5nGAMgASgLMhQuQ2VydGlmaWNhdGVfU2V0dGluZyKoAgoP",
          "SG9ub3JfV2FsbF9JbmZvEjkKDXVzZXJfdHJvcGhpZXMYASADKAsyIi5Ib25v",
          "cl9XYWxsX0luZm8uVXNlclRyb3BoaWVzRW50cnkSQQoRdXNlcl9jZXJ0aWZp",
          "Y2F0ZXMYAiADKAsyJi5Ib25vcl9XYWxsX0luZm8uVXNlckNlcnRpZmljYXRl",
          "c0VudHJ5GkYKEVVzZXJUcm9waGllc0VudHJ5EgsKA2tleRgBIAEoDRIgCgV2",
          "YWx1ZRgCIAEoCzIRLlVzZXJfVHJvcGh5X0luZm86AjgBGk8KFVVzZXJDZXJ0",
          "aWZpY2F0ZXNFbnRyeRILCgNrZXkYASABKA0SJQoFdmFsdWUYAiABKAsyFi5V",
          "c2VyX0NlcnRpZmljYXRlX0luZm86AjgBIjAKG0NNRF9FbmRfQ291cnNlX3Jf",
          "UGFyYW1ldGVycxIRCgljb3Vyc2VfaWQYASABKA0iMAobQ01EX0VuZF9Db3Vy",
          "c2VfYV9QYXJhbWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEoDSIgCh5DTURfR2V0",
          "X0hvbm9yd2FsbF9yX1BhcmFtZXRlcnMiSgoeQ01EX0dldF9Ib25vcndhbGxf",
          "YV9QYXJhbWV0ZXJzEigKDmhvbm9yd2FsbF9pbmZvGAEgASgLMhAuSG9ub3Jf",
          "V2FsbF9JbmZvIiQKIkNNRF9HZXRfTmV3X0hvbm9yd2FsbF9yX1BhcmFtZXRl",
          "cnMiTgoiQ01EX0dldF9OZXdfSG9ub3J3YWxsX2FfUGFyYW1ldGVycxIoCg5o",
          "b25vcndhbGxfaW5mbxgBIAEoCzIQLkhvbm9yX1dhbGxfSW5mbyJMCidDTURf",
          "VXBkYXRlX0hvbm9yd2FsbF9TdGF0ZV9yX1BhcmFtZXRlcnMSEQoJY291cnNl",
          "X2lkGAEgASgNEg4KBnRyb3BoeRgCIAEoDSJMCidDTURfVXBkYXRlX0hvbm9y",
          "d2FsbF9TdGF0ZV9hX1BhcmFtZXRlcnMSEQoJY291cnNlX2lkGAEgASgNEg4K",
          "BnRyb3BoeRgCIAEoDSKFAQoPSG9ub3JfUmFua19Vbml0EjAKEXVzZXJfZGlz",
          "cGxheV9pbmZvGAEgASgLMhUuQThfVXNlcl9EaXNwbGF5X0luZm8SDwoHcmFu",
          "a19pZBgCIAEoDRIUCgx0cm9waHlfY291bnQYAyABKA0SGQoRY2VydGlmaWNh",
          "dGVfY291bnQYBCABKA0iNwojQ01EX0dldF9Ib25vcndhbGxfUmFua19yX1Bh",
          "cmFtZXRlcnMSEAoIcmVxX3R5cGUYASABKA0ibwojQ01EX0dldF9Ib25vcndh",
          "bGxfUmFua19hX1BhcmFtZXRlcnMSIwoJcmFua19saXN0GAEgAygLMhAuSG9u",
          "b3JfUmFua19Vbml0EiMKCXNlbGZfaW5mbxgCIAEoCzIQLkhvbm9yX1Jhbmtf",
          "VW5pdCKZAQoqQ01EX1NldF9Db3Vyc2VfVHJvcGh5X1NldHRpbmdfcl9QYXJh",
          "bWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEoDRIrChBjb3Vyc2VfcmFjZV90eXBl",
          "GAIgASgOMhEuQ291cnNlX1JhY2VfVHlwZRIrChB0cm9waGllc19zZXR0aW5n",
          "GAMgASgLMhEuVHJvcGhpZXNfU2V0dGluZyKZAQoqQ01EX1NldF9Db3Vyc2Vf",
          "VHJvcGh5X1NldHRpbmdfYV9QYXJhbWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEo",
          "DRIrChBjb3Vyc2VfcmFjZV90eXBlGAIgASgOMhEuQ291cnNlX1JhY2VfVHlw",
          "ZRIrChB0cm9waGllc19zZXR0aW5nGAMgASgLMhEuVHJvcGhpZXNfU2V0dGlu",
          "ZyI/CipDTURfR2V0X0NvdXJzZV9Ucm9waHlfU2V0dGluZ19yX1BhcmFtZXRl",
          "cnMSEQoJY291cnNlX2lkGAEgASgNIpkBCipDTURfR2V0X0NvdXJzZV9Ucm9w",
          "aHlfU2V0dGluZ19hX1BhcmFtZXRlcnMSEQoJY291cnNlX2lkGAEgASgNEisK",
          "EGNvdXJzZV9yYWNlX3R5cGUYAiABKA4yES5Db3Vyc2VfUmFjZV9UeXBlEisK",
          "EHRyb3BoaWVzX3NldHRpbmcYAyABKAsyES5Ucm9waGllc19TZXR0aW5nIn4K",
          "L0NNRF9TZXRfQ291cnNlX0NlcnRpZmljYXRlX1NldHRpbmdfcl9QYXJhbWV0",
          "ZXJzEhEKCWNvdXJzZV9pZBgBIAEoDRI4Chpjb3Vyc2VfY2VydGlmaWNhdGVf",
          "c2V0dGluZxgCIAEoCzIULkNlcnRpZmljYXRlX1NldHRpbmcifgovQ01EX1Nl",
          "dF9Db3Vyc2VfQ2VydGlmaWNhdGVfU2V0dGluZ19hX1BhcmFtZXRlcnMSEQoJ",
          "Y291cnNlX2lkGAEgASgNEjgKGmNvdXJzZV9jZXJ0aWZpY2F0ZV9zZXR0aW5n",
          "GAIgASgLMhQuQ2VydGlmaWNhdGVfU2V0dGluZyJECi9DTURfR2V0X0NvdXJz",
          "ZV9DZXJ0aWZpY2F0ZV9TZXR0aW5nX3JfUGFyYW1ldGVycxIRCgljb3Vyc2Vf",
          "aWQYASABKA0ifgovQ01EX0dldF9Db3Vyc2VfQ2VydGlmaWNhdGVfU2V0dGlu",
          "Z19hX1BhcmFtZXRlcnMSEQoJY291cnNlX2lkGAEgASgNEjgKGmNvdXJzZV9j",
          "ZXJ0aWZpY2F0ZV9zZXR0aW5nGAIgASgLMhQuQ2VydGlmaWNhdGVfU2V0dGlu",
          "ZyI/CipDTURfRGVsX0NvdXJzZV9Ucm9waHlfU2V0dGluZ19yX1BhcmFtZXRl",
          "cnMSEQoJY291cnNlX2lkGAEgASgNIj8KKkNNRF9EZWxfQ291cnNlX1Ryb3Bo",
          "eV9TZXR0aW5nX2FfUGFyYW1ldGVycxIRCgljb3Vyc2VfaWQYASABKA0iRAov",
          "Q01EX0RlbF9Db3Vyc2VfQ2VydGlmaWNhdGVfU2V0dGluZ19yX1BhcmFtZXRl",
          "cnMSEQoJY291cnNlX2lkGAEgASgNIkQKL0NNRF9EZWxfQ291cnNlX0NlcnRp",
          "ZmljYXRlX1NldHRpbmdfYV9QYXJhbWV0ZXJzEhEKCWNvdXJzZV9pZBgBIAEo",
          "DSJLCh9DTURfTmV3X0hvbm9yX05vdGlmeV9QYXJhbWV0ZXJzEigKDm5ld19o",
          "b25vcl9pbmZvGAEgASgLMhAuSG9ub3JfV2FsbF9JbmZvIuwBChBVc2VyX1No",
          "YXJlZF9JbmZvEhEKCXNoYXJlZF9pZBgBIAEoDRIRCgljcmVhdGVfaWQYAiAB",
          "KA0SFwoPY3JlYXRlX25pY2tuYW1lGAMgASgJEhMKC3NoYXJlZF9uYW1lGAQg",
          "ASgJEhcKD3NoYXJlZF9kZXNjcmlwdBgFIAEoCRIhCgtzaGFyZWRfdHlwZRgG",
          "IAEoDjIMLlNoYXJlZF9UeXBlEhMKC2NyZWF0ZV90aW1lGAcgASgEEhMKC3Vw",
          "ZGF0ZV90aW1lGAggASgEEh4KC3NoYXJlZF9kYXRhGAkgASgLMgkuRmlsZUxp",
          "c3Qi1gEKI0NNRF9TaGFyZWREYXRhX1B1Ymxpc2hfcl9QYXJhbWV0ZXJzEiEK",
          "C3NoYXJlZF90eXBlGAEgASgOMgwuU2hhcmVkX1R5cGUSJQoNc2hhcmVkX3N0",
          "YXR1cxgCIAEoDjIOLlNoYXJlZF9TdGF0dXMSEwoLc2hhcmVkX25hbWUYAyAB",
          "KAkSFwoPc2hhcmVkX2Rlc2NyaXB0GAQgASgJEhcKD3NoYXJlZF9wYXNzd29y",
          "ZBgFIAEoCRIeCgtzaGFyZWRfZGF0YRgGIAEoCzIJLkZpbGVMaXN0IoEBCiND",
          "TURfU2hhcmVkRGF0YV9QdWJsaXNoX2FfUGFyYW1ldGVycxITCgtzaGFyZWRf",
          "cGF0aBgBIAEoCRIlCg1zaGFyZWRfc3RhdHVzGAIgASgOMg4uU2hhcmVkX1N0",
          "YXR1cxIeCgtzaGFyZWRfZGF0YRgDIAEoCzIJLkZpbGVMaXN0IpkBCiJDTURf",
          "U2hhcmVkRGF0YV9VcGRhdGVfcl9QYXJhbWV0ZXJzEhMKC3NoYXJlZF9wYXRo",
          "GAEgASgJEiUKDXNoYXJlZF9zdGF0dXMYAiABKA4yDi5TaGFyZWRfU3RhdHVz",
          "Eh4KC3VwZGF0ZV9kYXRhGAMgASgLMgkuRmlsZUxpc3QSFwoPc2hhcmVkX3Bh",
          "c3N3b3JkGAQgASgJIoABCiJDTURfU2hhcmVkRGF0YV9VcGRhdGVfYV9QYXJh",
          "bWV0ZXJzEhMKC3NoYXJlZF9wYXRoGAEgASgJEiUKDXNoYXJlZF9zdGF0dXMY",
          "AiABKA4yDi5TaGFyZWRfU3RhdHVzEh4KC3NoYXJlZF9kYXRhGAMgASgLMgku",
          "RmlsZUxpc3QicAofQ01EX1NoYXJlZERhdGFfRGVsX3JfUGFyYW1ldGVycxIQ",
          "CghyZXFfcGF0aBgBIAEoCRIiCgpyZXFfc3RhdHVzGAIgASgOMg4uU2hhcmVk",
          "X1N0YXR1cxIXCg9zaGFyZWRfcGFzc3dvcmQYAyABKAkiVwofQ01EX1NoYXJl",
          "ZERhdGFfRGVsX2FfUGFyYW1ldGVycxIQCghyZXFfcGF0aBgBIAEoCRIiCgpy",
          "ZXFfc3RhdHVzGAIgASgOMg4uU2hhcmVkX1N0YXR1cyKDAQokQ01EX1NoYXJl",
          "ZERhdGFfRG93bmxvYWRfcl9QYXJhbWV0ZXJzEhAKCHJlcV9wYXRoGAEgASgJ",
          "EiIKCnJlcV9zdGF0dXMYAiABKA4yDi5TaGFyZWRfU3RhdHVzEhAKCHBhc3N3",
          "b3JkGAMgASgJEhMKC3NhdmVhc19wYXRoGAQgASgJIpcBCiRDTURfU2hhcmVk",
          "RGF0YV9Eb3dubG9hZF9hX1BhcmFtZXRlcnMSEwoLc2hhcmVkX3BhdGgYASAB",
          "KAkSJQoNc2hhcmVkX3N0YXR1cxgCIAEoDjIOLlNoYXJlZF9TdGF0dXMSHgoL",
          "c2hhcmVkX2RhdGEYAyABKAsyCS5GaWxlTGlzdBITCgtzYXZlYXNfcGF0aBgE",
          "IAEoCSJlCiNDTURfU2hhcmVkRGF0YV9HZXRsaXN0X3JfUGFyYW1ldGVycxIl",
          "Cg1zaGFyZWRfc3RhdHVzGAEgASgOMg4uU2hhcmVkX1N0YXR1cxIXCg9yZXFf",
          "c2hhcmVkX25hbWUYAiABKAkibAojQ01EX1NoYXJlZERhdGFfR2V0bGlzdF9h",
          "X1BhcmFtZXRlcnMSJQoNc2hhcmVkX3N0YXR1cxgBIAEoDjIOLlNoYXJlZF9T",
          "dGF0dXMSHgoLc2hhcmVkX2RhdGEYAiABKAsyCS5GaWxlTGlzdCJ7CiVDTURf",
          "U2hhcmVkRGF0YV9DcmVhdGVEaXJfcl9QYXJhbWV0ZXJzEhIKCmNyZWF0ZV9k",
          "aXIYASABKAkSJQoNc2hhcmVkX3N0YXR1cxgCIAEoDjIOLlNoYXJlZF9TdGF0",
          "dXMSFwoPc2hhcmVkX3Bhc3N3b3JkGAMgASgJImIKJUNNRF9TaGFyZWREYXRh",
          "X0NyZWF0ZURpcl9hX1BhcmFtZXRlcnMSEgoKY3JlYXRlX2RpchgBIAEoCRIl",
          "Cg1zaGFyZWRfc3RhdHVzGAIgASgOMg4uU2hhcmVkX1N0YXR1cyJxCiRDTURf",
          "U2hhcmVkRGF0YV9DaGVja19QV19yX1BhcmFtZXRlcnMSJQoNc2hhcmVkX3N0",
          "YXR1cxgBIAEoDjIOLlNoYXJlZF9TdGF0dXMSEAoIcmVxX3BhdGgYAiABKAkS",
          "EAoIcGFzc3dvcmQYAyABKAkidQokQ01EX1NoYXJlZERhdGFfQ2hlY2tfUFdf",
          "YV9QYXJhbWV0ZXJzEiUKDXNoYXJlZF9zdGF0dXMYASABKA4yDi5TaGFyZWRf",
          "U3RhdHVzEhAKCHJlcV9wYXRoGAIgASgJEhQKDGNoZWNrX3Jlc3VsdBgDIAEo",
          "DSrpAQoSRmlsZUxpc3RfUm9vdF9UeXBlEg8KC3NlbGZfZ3JhcGh5EAASDwoL",
          "c2VsZl9weXRob24QARIWChJ0YXNrX3N5c3RlbV9ncmFwaHkQChIWChJ0YXNr",
          "X3N5c3RlbV9weXRob24QCxIYChR0YXNrX3RlbXBsYXRlX2dyYXBoeRAUEhgK",
          "FHRhc2tfdGVtcGxhdGVfcHl0aG9uEBUSEgoOc2VsZl9nYl9ncmFwaHkQHhIS",
          "Cg5zZWxmX2diX3B5dGhvbhAfEhYKEmNsYXNzX3Byb2plY3Rfcm9vdBBkEg0K",
          "CXRhc2tfY29tbRBlKjYKCU1haWxfRmxhZxIMCghtYWlsX25ldxAAEg0KCW1h",
          "aWxfcmVhZBABEgwKCG1haWxfZGVsEAIqpAEKCU1haWxfVHlwZRIMCghtYWls",
          "X2FsbBAAEg0KCW1haWxfY29tbRABEg8KC21haWxfcmV3YXJkEAISEwoPbWFp",
          "bF9mcmllbmRfcmVxEAQSGwoXbWFpbF9mcmllbmRfaW50ZXJhY3RpdmUQCBIN",
          "CgltYWlsX3RhZ3MQEBISCg5tYWlsX2NsYXNzX3JlcRAgEhQKEG1haWxfbGVh",
          "dmVfY2xhc3MQQCqyAgoJVXNlcl9UeXBlEhUKEXVzZXJfdHlwZV9zdHVkZW50",
          "EAASFQoRdXNlcl90eXBlX3RlYWNoZXIQARITCg91c2VyX3R5cGVfYWRtaW4Q",
          "AhIWChJ1c2VyX3R5cGVfYXBwcm92ZXIQBBIUChB1c2VyX3R5cGVfcHl0aG9u",
          "EAgSFwoTdXNlcl90eXBlX2dhbWVib2FyZBAQEhAKDHVzZXJfdHlwZV9nbRAg",
          "EhAKDHVzZXJfdHlwZV9hchBAEhgKE3VzZXJfdHlwZV9wYXRyaWFyY2gQgAES",
          "FgoRdXNlcl90eXBlX2NoYW5uZWwQgAISFQoQdXNlcl90eXBlX3NjaG9vbBCA",
          "BBIaChV1c2VyX3R5cGVfYWNjb3VudF9tZ3IQgAgSEgoNdXNlcl9zdG9yZV9n",
          "bRCAECo8CgtDb3Vyc2VfdHlwZRIXChNjb3Vyc2VfdHlwZV9kZWZhdWx0EAAS",
          "FAoQY291cnNlX3R5cGVfcmFjZRABKkEKD0VuZF9Db3Vyc2VfVHlwZRIPCgtF",
          "Q1Rfbm90X2VuZBAAEg4KCkVDVF9ub3JtYWwQARINCglFQ1RfZm9yY2UQAiqi",
          "NAoKQ29tbWFuZF9JRBINCgljbWRfZW1wdHkQABINCgljbWRfcmVnX3IQARIN",
          "CgljbWRfcmVnX2EQAhIXChNjbWRfYWNjb3VudF9sb2dpbl9yEAMSFwoTY21k",
          "X2FjY291bnRfbG9naW5fYRAEEhAKDGNtZF9sb2dvdXRfchAFEhAKDGNtZF9s",
          "b2dvdXRfYRAGEh8KG2NtZF9nZXRfdmVyaWZpY2F0aW9uX2NvZGVfchAHEh8K",
          "G2NtZF9nZXRfdmVyaWZpY2F0aW9uX2NvZGVfYRAIEhgKFGNtZF9yZXNldF9w",
          "YXNzd29yZF9yEAkSGAoUY21kX3Jlc2V0X3Bhc3N3b3JkX2EQChIdChljbWRf",
          "dXNlX2FjdGl2YXRpb25fY29kZV9yEAsSHQoZY21kX3VzZV9hY3RpdmF0aW9u",
          "X2NvZGVfYRAMEhEKDWNtZF93ZWJfcmVnX3IQDRIRCg1jbWRfd2ViX3JlZ19h",
          "EA4SGQoVY21kX2NoYW5nZV9uaWNrbmFtZV9yEA8SGQoVY21kX2NoYW5nZV9u",
          "aWNrbmFtZV9hEBASDwoLY21kX3JiaW5kX3IQERIPCgtjbWRfcmJpbmRfYRAS",
          "EhkKFWNtZF9tb2RpZnlfcGFzc3dvcmRfchATEhkKFWNtZF9tb2RpZnlfcGFz",
          "c3dvcmRfYRAUEhQKEGNtZF9hZGRfc2hhcmVkX3IQFRIUChBjbWRfYWRkX3No",
          "YXJlZF9hEBYSFwoTY21kX21vZGlmeV9zaGFyZWRfchAXEhcKE2NtZF9tb2Rp",
          "Znlfc2hhcmVkX2EQGBIUChBjbWRfZGVsX3NoYXJlZF9yEBkSFAoQY21kX2Rl",
          "bF9zaGFyZWRfYRAaEhkKFWNtZF9nZXRfc2hhcmVkX2xpc3RfchAbEhkKFWNt",
          "ZF9nZXRfc2hhcmVkX2xpc3RfYRAcEhsKF2NtZF9jb2luc19jaGFuZ2Vfbm90",
          "aWZ5EB4SFgoSY21kX2dldF9zcnZfdGltZV9yEB8SFgoSY21kX2dldF9zcnZf",
          "dGltZV9hECASFAoQY21kX2J1eV9hcl9vYmpfchAhEhQKEGNtZF9idXlfYXJf",
          "b2JqX2EQIhIQCgxjbWRfdW5iaW5kX3IQIxIQCgxjbWRfdW5iaW5kX2EQJBIc",
          "ChhjbWRfZ2V0X3BhcnRvZnVzZXJpbmZvX3IQJRIcChhjbWRfZ2V0X3BhcnRv",
          "ZnVzZXJpbmZvX2EQJhIWChJjbWRfZ2V0X3VzZXJpbmZvX3IQZRIWChJjbWRf",
          "Z2V0X3VzZXJpbmZvX2EQZhIZChVjbWRfdXBkYXRlX3VzZXJpbmZvX3IQZxIZ",
          "ChVjbWRfdXBkYXRlX3VzZXJpbmZvX2EQaBIaChZjbWRfZ2V0X3VzZXJfc2V0",
          "dGluZ19yEGkSGgoWY21kX2dldF91c2VyX3NldHRpbmdfYRBqEh0KGWNtZF91",
          "cGRhdGVfdXNlcl9zZXR0aW5nX3IQaxIdChljbWRfdXBkYXRlX3VzZXJfc2V0",
          "dGluZ19hEGwSFgoSY21kX2dldF9yYW5rbGlzdF9yEG0SFgoSY21kX2dldF9y",
          "YW5rbGlzdF9hEG4SHgoaY21kX2dldF9kaXNwbGF5X3VzZXJpbmZvX3IQbxIe",
          "ChpjbWRfZ2V0X2Rpc3BsYXlfdXNlcmluZm9fYRBwEhcKEmNtZF9jcmVhdGVf",
          "Y2xhc3NfchDJARIXChJjbWRfY3JlYXRlX2NsYXNzX2EQygESFgoRY21kX3F1",
          "aXRlX2NsYXNzX3IQzQESFgoRY21kX3F1aXRlX2NsYXNzX2EQzgESGwoWY21k",
          "X3VwZGF0ZV9jbGFzc2luZm9fchDPARIbChZjbWRfdXBkYXRlX2NsYXNzaW5m",
          "b19hENABEhgKE2NtZF9nZXRfY2xhc3NpbmZvX3IQ0QESGAoTY21kX2dldF9j",
          "bGFzc2luZm9fYRDSARIUCg9jbWRfZGVsX2NsYXNzX3IQ0wESFAoPY21kX2Rl",
          "bF9jbGFzc19hENQBEhoKFWNtZF9yZWNvbW1hbmRfY2xhc3NfchDVARIaChVj",
          "bWRfcmVjb21tYW5kX2NsYXNzX2EQ1gESGwoWY21kX2FkZF9jbGFzc19tZW1i",
          "ZXJfchDXARIbChZjbWRfYWRkX2NsYXNzX21lbWJlcl9hENgBEhsKFmNtZF9k",
          "ZWxfY2xhc3NfbWVtYmVyX3IQ2QESGwoWY21kX2RlbF9jbGFzc19tZW1iZXJf",
          "YRDaARIaChVjbWRfY2xhc3NpbmZvX3VwZGF0ZWQQ3AESFgoRY21kX2NsYXNz",
          "X2RlbGV0ZWQQ3gESGQoUY21kX2NsYXNzX21lbWJlcl9hZGQQ4AESGwoWY21k",
          "X2NsYXNzX21lbWJlcl9sZWF2ZRDiARIWChFjbWRfY3JlYXRlX3Rhc2tfchD7",
          "ARIWChFjbWRfY3JlYXRlX3Rhc2tfYRD8ARIWChFjbWRfdXBkYXRlX3Rhc2tf",
          "chD9ARIWChFjbWRfdXBkYXRlX3Rhc2tfYRD+ARITCg5jbWRfZGVsX3Rhc2tf",
          "chD/ARITCg5jbWRfZGVsX3Rhc2tfYRCAAhIWChFjbWRfc3VibWl0X3Rhc2tf",
          "chCBAhIWChFjbWRfc3VibWl0X3Rhc2tfYRCCAhIVChBjbWRfZ3JhZGVfdGFz",
          "a19yEIMCEhUKEGNtZF9ncmFkZV90YXNrX2EQhAISGAoTY21kX2dldF90YXNr",
          "X2luZm9fchCFAhIYChNjbWRfZ2V0X3Rhc2tfaW5mb19hEIYCEhUKEGNtZF90",
          "YXNrX2NyZWF0ZWQQiAISFQoQY21kX3Rhc2tfdXBkYXRlZBCKAhIVChBjbWRf",
          "dGFza19kZWxldGVkEIwCEhYKEWNtZF90YXNrX3N1Ym1pdGVkEI4CEhQKD2Nt",
          "ZF90YXNrX2dyYWRlZBCQAhIVChBjbWRfZGVsX3N1Ym1pdF9yEJECEhUKEGNt",
          "ZF9kZWxfc3VibWl0X2EQkgISFwoSY21kX3N1Ym1pdF9kZWxldGVkEJQCEh0K",
          "GGNtZF9tb2RpZnlfdGFza19hdHRhY2hfchCVAhIdChhjbWRfbW9kaWZ5X3Rh",
          "c2tfYXR0YWNoX2EQlgISGgoVY21kX2RlbF90YXNrX2F0dGFjaF9yEJcCEhoK",
          "FWNtZF9kZWxfdGFza19hdHRhY2hfYRCYAhIaChVjbWRfYWRkX3Rhc2tfYXR0",
          "YWNoX3IQmQISGgoVY21kX2FkZF90YXNrX2F0dGFjaF9hEJoCEhUKEGNtZF9h",
          "ZGRfZnJpZW5kX3IQrQISFQoQY21kX2FkZF9mcmllbmRfYRCuAhIXChJjbWRf",
          "Z2V0X21haWxsaXN0X3IQkQMSFwoSY21kX2dldF9tYWlsbGlzdF9hEJIDEhQK",
          "D2NtZF9yZWFkX21haWxfchCTAxIUCg9jbWRfcmVhZF9tYWlsX2EQlAMSEwoO",
          "Y21kX2RlbF9tYWlsX3IQlQMSEwoOY21kX2RlbF9tYWlsX2EQlgMSFAoPY21k",
          "X3NlbmRfbWFpbF9yEJcDEhQKD2NtZF9zZW5kX21haWxfYRCYAxIYChNjbWRf",
          "bmV3X21haWxfbm90aWZ5EJoDEhsKFmNtZF9jcmVhdGVfZ2FtZWJvYXJkX3IQ",
          "9QMSGwoWY21kX2NyZWF0ZV9nYW1lYm9hcmRfYRD2AxIbChZjbWRfbW9kaWZ5",
          "X2dhbWVib2FyZF9yEPcDEhsKFmNtZF9tb2RpZnlfZ2FtZWJvYXJkX2EQ+AMS",
          "GAoTY21kX2RlbF9nYW1lYm9hcmRfchD5AxIYChNjbWRfZGVsX2dhbWVib2Fy",
          "ZF9hEPoDEhgKE2NtZF9nZXRfZ2FtZWJvYXJkX3IQ+wMSGAoTY21kX2dldF9n",
          "YW1lYm9hcmRfYRD8AxIcChdjbWRfZ2V0X2dhbWVib2FyZGxpc3RfchD9AxIc",
          "ChdjbWRfZ2V0X2dhbWVib2FyZGxpc3RfYRD+AxIbChZjbWRfYW5zd2VyX2dh",
          "bWVib2FyZF9yEP8DEhsKFmNtZF9hbnN3ZXJfZ2FtZWJvYXJkX2EQgAQSGQoU",
          "Y21kX2xpa2VfZ2FtZWJvYXJkX3IQgQQSGQoUY21kX2xpa2VfZ2FtZWJvYXJk",
          "X2EQggQSHQoYY21kX2Rvd25sb2FkX2dhbWVib2FyZF9yEIMEEh0KGGNtZF9k",
          "b3dubG9hZF9nYW1lYm9hcmRfYRCEBBIaChVjbWRfZ3JhZGVfZ2FtZWJvYXJk",
          "X3IQhQQSGgoVY21kX2dyYWRlX2dhbWVib2FyZF9hEIYEEh8KGmNtZF9kZWxf",
          "Z2FtZWJvYXJkX2Fuc3dlcl9yEIcEEh8KGmNtZF9kZWxfZ2FtZWJvYXJkX2Fu",
          "c3dlcl9hEIgEEhQKD2NtZF9jcmVhdGVfcGtfchDZBBIUCg9jbWRfY3JlYXRl",
          "X3BrX2EQ2gQSFAoPY21kX21vZGlmeV9wa19yENsEEhQKD2NtZF9tb2RpZnlf",
          "cGtfYRDcBBIRCgxjbWRfZGVsX3BrX3IQ3QQSEQoMY21kX2RlbF9wa19hEN4E",
          "EhEKDGNtZF9nZXRfcGtfchDfBBIRCgxjbWRfZ2V0X3BrX2EQ4AQSFQoQY21k",
          "X2dldF9wa2xpc3RfchDhBBIVChBjbWRfZ2V0X3BrbGlzdF9hEOIEEhQKD2Nt",
          "ZF9hbnN3ZXJfcGtfchDjBBIUCg9jbWRfYW5zd2VyX3BrX2EQ5AQSEgoNY21k",
          "X2xpa2VfcGtfchDlBBISCg1jbWRfbGlrZV9wa19hEOYEEhYKEWNtZF9kb3du",
          "bG9hZF9wa19yEOcEEhYKEWNtZF9kb3dubG9hZF9wa19hEOgEEg0KCGNtZF9w",
          "a19yEOkEEg0KCGNtZF9wa19hEOoEEhgKE2NtZF9kZWxfcGtfYW5zd2VyX3IQ",
          "6wQSGAoTY21kX2RlbF9wa19hbnN3ZXJfYRDsBBIYChNjbWRfY3JlYXRlX2Nv",
          "dXJzZV9yEL0FEhgKE2NtZF9jcmVhdGVfY291cnNlX2EQvgUSGAoTY21kX21v",
          "ZGlmeV9jb3Vyc2VfchC/BRIYChNjbWRfbW9kaWZ5X2NvdXJzZV9hEMAFEhUK",
          "EGNtZF9kZWxfY291cnNlX3IQwQUSFQoQY21kX2RlbF9jb3Vyc2VfYRDCBRIa",
          "ChVjbWRfZ2V0X2NvdXJzZV9saXN0X3IQwwUSGgoVY21kX2dldF9jb3Vyc2Vf",
          "bGlzdF9hEMQFEhUKEGNtZF9hZGRfcGVyaW9kX3IQxQUSFQoQY21kX2FkZF9w",
          "ZXJpb2RfYRDGBRIYChNjbWRfbW9kaWZ5X3BlcmlvZF9yEMcFEhgKE2NtZF9t",
          "b2RpZnlfcGVyaW9kX2EQyAUSFQoQY21kX2RlbF9wZXJpb2RfchDJBRIVChBj",
          "bWRfZGVsX3BlcmlvZF9hEMoFEhkKFGNtZF9hcHByb3ZlX2NvdXJzZV9yEMsF",
          "EhkKFGNtZF9hcHByb3ZlX2NvdXJzZV9hEMwFEhwKF2NtZF9zZXRfY291cnNl",
          "X3N0YXR1c19yEM0FEhwKF2NtZF9zZXRfY291cnNlX3N0YXR1c19hEM4FEhwK",
          "F2NtZF9hbnN3ZXJfcGVyaW9kaXRlbV9yEM8FEhwKF2NtZF9hbnN3ZXJfcGVy",
          "aW9kaXRlbV9hENAFEhkKFGNtZF9hZGRfcGVyaW9kaXRlbV9yENEFEhkKFGNt",
          "ZF9hZGRfcGVyaW9kaXRlbV9hENIFEhwKF2NtZF9tb2RpZnlfcGVyaW9kaXRl",
          "bV9yENMFEhwKF2NtZF9tb2RpZnlfcGVyaW9kaXRlbV9hENQFEhkKFGNtZF9k",
          "ZWxfcGVyaW9kaXRlbV9yENUFEhkKFGNtZF9kZWxfcGVyaW9kaXRlbV9hENYF",
          "EhsKFmNtZF9zY29yZV9wZXJpb2RpdGVtX3IQ1wUSGwoWY21kX3Njb3JlX3Bl",
          "cmlvZGl0ZW1fYRDYBRIVChBjbWRfYnV5X2NvdXJzZV9yENkFEhUKEGNtZF9i",
          "dXlfY291cnNlX2EQ2gUSHwoaY21kX3NldF9wZXJvZGl0ZW1fc3RhdHVzX3IQ",
          "2wUSHwoaY21kX3NldF9wZXJvZGl0ZW1fc3RhdHVzX2EQ3AUSHgoZY21kX2dl",
          "dF9jb3Vyc2VfcGFzc3dvcmRfchDdBRIeChljbWRfZ2V0X2NvdXJzZV9wYXNz",
          "d29yZF9hEN4FEiAKG2NtZF9kZWxfcGVyaW9kaXRlbV9hbnN3ZXJfchDfBRIg",
          "ChtjbWRfZGVsX3BlcmlvZGl0ZW1fYW5zd2VyX2EQ4AUSJAofY21kX2NvdXJz",
          "ZV9zdGF0dXNfY2hhbmdlX25vdGlmeRDiBRIVChBjbWRfZW5kX2NvdXJzZV9y",
          "EOMFEhUKEGNtZF9lbmRfY291cnNlX2EQ5AUSGAoTY21kX2dldF9ob25vcndh",
          "bGxfchChBhIYChNjbWRfZ2V0X2hvbm9yd2FsbF9hEKIGEhwKF2NtZF9nZXRf",
          "bmV3X2hvbm9yd2FsbF9yEKMGEhwKF2NtZF9nZXRfbmV3X2hvbm9yd2FsbF9h",
          "EKQGEiEKHGNtZF91cGRhdGVfaG9ub3J3YWxsX3N0YXRlX3IQpQYSIQocY21k",
          "X3VwZGF0ZV9ob25vcndhbGxfc3RhdGVfYRCmBhIdChhjbWRfZ2V0X2hvbm9y",
          "d2FsbF9yYW5rX3IQpwYSHQoYY21kX2dldF9ob25vcndhbGxfcmFua19hEKgG",
          "EiQKH2NtZF9zZXRfY291cnNlX3Ryb3BoeV9zZXR0aW5nX3IQ0wYSJAofY21k",
          "X3NldF9jb3Vyc2VfdHJvcGh5X3NldHRpbmdfYRDUBhIkCh9jbWRfZ2V0X2Nv",
          "dXJzZV90cm9waHlfc2V0dGluZ19yENUGEiQKH2NtZF9nZXRfY291cnNlX3Ry",
          "b3BoeV9zZXR0aW5nX2EQ1gYSKQokY21kX3NldF9jb3Vyc2VfY2VydGlmaWNh",
          "dGVfc2V0dGluZ19yENcGEikKJGNtZF9zZXRfY291cnNlX2NlcnRpZmljYXRl",
          "X3NldHRpbmdfYRDYBhIpCiRjbWRfZ2V0X2NvdXJzZV9jZXJ0aWZpY2F0ZV9z",
          "ZXR0aW5nX3IQ2QYSKQokY21kX2dldF9jb3Vyc2VfY2VydGlmaWNhdGVfc2V0",
          "dGluZ19hENoGEiQKH2NtZF9kZWxfY291cnNlX3Ryb3BoeV9zZXR0aW5nX3IQ",
          "2wYSJAofY21kX2RlbF9jb3Vyc2VfdHJvcGh5X3NldHRpbmdfYRDcBhIpCiRj",
          "bWRfZGVsX2NvdXJzZV9jZXJ0aWZpY2F0ZV9zZXR0aW5nX3IQ3QYSKQokY21k",
          "X2RlbF9jb3Vyc2VfY2VydGlmaWNhdGVfc2V0dGluZ19hEN4GEhkKFGNtZF9u",
          "ZXdfaG9ub3Jfbm90aWZ5EOAGEh8KGmNtZF9tb2RpZnlfdW5pcXVlX2F0dGFj",
          "aF9yEIUHEh8KGmNtZF9tb2RpZnlfdW5pcXVlX2F0dGFjaF9hEIYHEhwKF2Nt",
          "ZF9kZWxfdW5pcXVlX2F0dGFjaF9yEIcHEhwKF2NtZF9kZWxfdW5pcXVlX2F0",
          "dGFjaF9hEIgHEhwKF2NtZF9hZGRfdW5pcXVlX2F0dGFjaF9yEIkHEhwKF2Nt",
          "ZF9hZGRfdW5pcXVlX2F0dGFjaF9hEIoHEhwKF2NtZF9nZXRfdW5pcXVlX2F0",
          "dGFjaF9yEIsHEhwKF2NtZF9nZXRfdW5pcXVlX2F0dGFjaF9hEIwHEhcKEmNt",
          "ZF9jcmVhdGVfdG9waWNfchC3BxIXChJjbWRfY3JlYXRlX3RvcGljX2EQuAcS",
          "FwoSY21kX21vZGlmeV90b3BpY19yELkHEhcKEmNtZF9tb2RpZnlfdG9waWNf",
          "YRC6BxIUCg9jbWRfZGVsX3RvcGljX3IQuwcSFAoPY21kX2RlbF90b3BpY19h",
          "ELwHEhkKFGNtZF9nZXRfdG9waWNfbGlzdF9yEL0HEhkKFGNtZF9nZXRfdG9w",
          "aWNfbGlzdF9hEL4HEhgKE2NtZF9hcHByb3ZlX3RvcGljX3IQvwcSGAoTY21k",
          "X2FwcHJvdmVfdG9waWNfYRDABxIbChZjbWRfc2V0X3RvcGljX3N0YXR1c19y",
          "EMEHEhsKFmNtZF9zZXRfdG9waWNfc3RhdHVzX2EQwgcSFAoPY21kX2J1eV90",
          "b3BpY19yEMMHEhQKD2NtZF9idXlfdG9waWNfYRDEBxIdChhjbWRfZ2V0X3Rv",
          "cGljX3Bhc3N3b3JkX3IQxQcSHQoYY21kX2dldF90b3BpY19wYXNzd29yZF9h",
          "EMYHEiMKHmNtZF90b3BpY19zdGF0dXNfY2hhbmdlX25vdGlmeRDIBxIZChRj",
          "bWRfZG93bmxvYWRfdG9waWNfchDJBxIZChRjbWRfZG93bmxvYWRfdG9waWNf",
          "YRDKBxIdChhjbWRfc2hhcmVkZGF0YV9wdWJsaXNoX3IQ6QcSHQoYY21kX3No",
          "YXJlZGRhdGFfcHVibGlzaF9hEOoHEhwKF2NtZF9zaGFyZWRkYXRhX3VwZGF0",
          "ZV9yEOsHEhwKF2NtZF9zaGFyZWRkYXRhX3VwZGF0ZV9hEOwHEhkKFGNtZF9z",
          "aGFyZWRkYXRhX2RlbF9yEO0HEhkKFGNtZF9zaGFyZWRkYXRhX2RlbF9hEO4H",
          "Eh4KGWNtZF9zaGFyZWRkYXRhX2Rvd25sb2FkX3IQ7wcSHgoZY21kX3NoYXJl",
          "ZGRhdGFfZG93bmxvYWRfYRDwBxIdChhjbWRfc2hhcmVkZGF0YV9nZXRsaXN0",
          "X3IQ8QcSHQoYY21kX3NoYXJlZGRhdGFfZ2V0bGlzdF9hEPIHEh8KGmNtZF9z",
          "aGFyZWRkYXRhX2NyZWF0ZWRpcl9yEPMHEh8KGmNtZF9zaGFyZWRkYXRhX2Ny",
          "ZWF0ZWRpcl9hEPQHEh4KGWNtZF9zaGF0ZWRkYXRhX2NoZWNrX3B3X3IQ9QcS",
          "HgoZY21kX3NoYXRlZGRhdGFfY2hlY2tfcHdfYRD2ByqmCgoOQ29tbWFuZF9S",
          "ZXN1bHQSEAoMY21kX25vX2Vycm9yEAASFgoSY21kX3JlZ19uYW1lX2V4aXN0",
          "EAESEgoOY21kX2F1dGhfZXJyb3IQAhIWChJjbWRfdXNlcl9ub3RfZm91bmQQ",
          "AxIXChNjbWRfcGFyYW1ldGVyX2Vycm9yEAQSEgoOY21kX3JlZ19hbHJlYWQQ",
          "BRIcChhjbWRfY2xhc3NfYWxyZWFkX2NyZWF0ZWQQBhIXChNjbWRfY2xhc3Nf",
          "bm90X2ZvdW5kEAcSGwoXY21kX3Rhc2tfYWxyZWFkX2NyZWF0ZWQQCBIWChJj",
          "bWRfdGFza19ub3RfZm91bmQQCRIZChVjbWRfY2xhc3Nfbm90X3RlYWNoZXIQ",
          "ChIVChFjbWRfbmV0d29ya19lcnJvchALEhoKFmNtZF9jbGFzc19hcHBseV9h",
          "bHJlYWQQDBIZChVjbWRfdXNlcl9ub3RfaW5fY2xhc3MQDRIZChVjbWRfY2xh",
          "c3Nfbm90X3N0dWRlbnQQDhIbChdjbWRfY2xhc3Nfam9pbmVkX2FscmVhZBAP",
          "EhoKFmNtZF9zdWJtaXRpZF9ub3RfZm91bmQQEBIXChNjbWRfY29pbl9ub3Rf",
          "ZW5vdWdoEBESFQoRY21kX25vX3Blcm1pc3Npb24QEhIYChRjbWRfc3VibWl0",
          "X2hhc19ncmFkZRATEhgKFGNtZF9zdWJtaXRfbm90X2ZvdW5kEBQSFgoSY21k",
          "X3Bhc3N3b3JkX3dyb25nEBUSGwoXY21kX2NlbGxwaG9uZV9udW1fZXJyb3IQ",
          "ZRIbChdjbWRfY2VsbHBob25lX251bV9leGlzdBBmEhkKFWNtZF9pbnZpdGVf",
          "Y29kZV9lcnJvchBnEh8KG2NtZF92ZXJpZmljYXRpb25fY29kZV9lcnJvchBo",
          "EhEKDWNtZF9zbXNfZXJyb3IQaRIXChNjbWRfYWNjb3VudF9leHBpcmVkEGoS",
          "IgoeY21kX3Jlc2V0X3Bhc3N3b3JkX2NvdW50X2xpbWl0EGsSFgoSY21kX2Vt",
          "YWxhZGRyX2V4aXN0EGwSHwoaY21kX2dhbWVib2FyZF9jcmVhdGVfZXJyb3IQ",
          "yAESFgoRY21kX2diX25hbWVfZXJyb3IQyQESGQoUY21kX2diX3NyY19ub3Rf",
          "Zm91bmQQygESFgoRY21kX2diX25hbWVfZXhpc3QQywESGgoVY21kX2diX25h",
          "bWVfbm90X2ZvdW5kEMwBEiMKHmNtZF9nYl9ub3RfYWxsb3dfcmVwZWF0X2Fu",
          "c3dlchDNARIVChBjbWRfZ2Jfbm90X2ZvdW5kEM4BEhgKE2NtZF9wa19jcmVh",
          "dGVfZXJyb3IQrAISFgoRY21kX3BrX25hbWVfZXJyb3IQrQISGQoUY21kX3Br",
          "X3NyY19ub3RfZm91bmQQrgISFgoRY21kX3BrX25hbWVfZXhpc3QQrwISGgoV",
          "Y21kX3BrX25hbWVfbm90X2ZvdW5kELACEhUKEGNtZF9wa19ub3RfZm91bmQQ",
          "sQISIwoeY21kX3BrX25vdF9hbGxvd19yZXBlYXRfYW5zd2VyELICEhkKFGNt",
          "ZF9jb3Vyc2Vfbm90X2ZvdW5kEJADEh4KGWNtZF9jb3Vyc2VfcGFzc3dvcmRf",
          "d3JvbmcQkQMSGQoUY21kX2F0dGFjaF9ub3RfZm91bmQQwgMSGAoTY21kX3Rv",
          "cGljX25vdF9mb3VuZBD0AxIdChhjbWRfdG9waWNfcGFzc3dvcmRfd3JvbmcQ",
          "9QMqKwoOR2V0U2hhcmVkX1R5cGUSDAoIZ2V0X3NlbGYQABILCgdnZXRfYWxs",
          "EAEqKgoUR2V0X1BhcnRfT2ZfVXNlcmluZm8SEgoOQ2xhc3NpbmZvX1BhcnQQ",
          "ACpvCgtHQlNvcnRfVHlwZRILCgdTVF9Ob25lEAASCwoHU1RfRGF0YRABEgwK",
          "CFNUX1NlbmNlEAISCwoHU1RfTmFtZRAEEg8KC1NUX0Rvd25sb2FkEAgSDQoJ",
          "U1RfQW5zd2VyEBASCwoHU1RfTGlrZRAgKoQBCgtQS1NvcnRfVHlwZRIOCgpQ",
          "S19TVF9Ob25lEAASDgoKUEtfU1RfRGF0YRABEg8KC1BLX1NUX1NlbmNlEAIS",
          "DgoKUEtfU1RfTmFtZRAEEhIKDlBLX1NUX0Rvd25sb2FkEAgSEAoMUEtfU1Rf",
          "QW5zd2VyEBASDgoKUEtfU1RfTGlrZRAgKk4KEENvdXJzZV9SYWNlX1R5cGUS",
          "DAoIQ1JUX05vbmUQABIUChBDUlRfUmFua2VkX01hdGNoEAESFgoSQ1JUX1Jl",
          "Z3VsYXJfU2Vhc29uEAIqcQoQUGVyaW9kX0l0ZW1fVHlwZRIMCghpdGVtX2Rv",
          "YxAAEg4KCml0ZW1faW1hZ2UQARIOCgppdGVtX3ZpZGVvEAISCwoHaXRlbV9n",
          "YhADEhAKDGl0ZW1fcHJvamVjdBAEEhAKDGl0ZW1fZ2JfcGxheRAFKukBCg1D",
          "b3Vyc2VfU3RhdHVzEhgKFGNvdXJzZV9zdGF0dXNfY29tbWl0EAASGQoVY291",
          "cnNlX3N0YXR1c19wcmV2aWV3EAESGQoVY291cnNlX3N0YXR1c19wdWJsaXNo",
          "EAISFgoSY291cnNlX3N0YXR1c190ZXN0EAMSIQodY291cnNlX3N0YXR1c193",
          "YWl0Zm9yX3B1Ymxpc2gQBBIcChhjb3Vyc2Vfc3RhdHVzX3Rlc3RfY2xvc2UQ",
          "CBIYChRjb3Vyc2Vfc3RhdHVzX2Nsb3NlZBAJEhUKEWNvdXJzZV9zdGF0dXNf",
          "ZGVsEAoqzAMKEUdldENvdXJzZUxpc3RUeXBlEhIKDmdldF9jb3Vyc2VfYWxs",
          "EAASFQoRZ2V0X2NvdXJzZV9teXNlbGYQARIYChRnZXRfY291cnNlX3B1Ymxp",
          "c2hlZBACEhUKEWdldF9jb3Vyc2VfcmV2aWV3EAQSFQoRZ2V0X2NvdXJzZV9i",
          "eW5hbWUQCBITCg9nZXRfY291cnNlX3Rlc3QQEBIVChFnZXRfY291cnNlX2Ns",
          "b3NlZBAgEh0KGWdldF9jb3Vyc2Vfd2FpdGZvcnB1Ymxpc2gQQBIgChtnZXRf",
          "Y291cnNlX215c2VsZl9wdWJsaXNoZWQQgAESIAobZ2V0X2NvdXJzZV9wdWJs",
          "aXNoZWRfbXlzZWxmEIACEiAKG2dldF9jb3Vyc2VfcHVibGlzaGVkX2pvaW5l",
          "ZBCABBIVChBnZXRfY291cnNlX2RyYWZ0EIAIEh4KGWdldF9jb3Vyc2VfaW52",
          "aXRlZF9teXNlbGYQgBASHgoZZ2V0X2NvdXJzZV9pbnZpdGVkX2pvaW5lZBCA",
          "IBIdChhnZXRfY291cnNlX3B1Ymxpc2hlZF9uZXcQgEASHQoXZ2V0X2NvdXJz",
          "ZV90ZXN0X2hpc3RvcnkQgIACKkUKC1Ryb3BoeV9UeXBlEgsKB1RUX05vbmUQ",
          "ABILCgdUVF9Hb2xkEAESDQoJVFRfU2lsdmVyEAISDQoJVFRfQnJvbnplEAMq",
          "UwoQR2V0SG9ub3J3YWxsVHlwZRIOCgpHSFRfVHJvcGh5EAASEwoPR0hUX0Nl",
          "cnRpZmljYXRlEAESDQoJR0hUX0NsYXNzEAISCwoHR0hUX0FMTBAEKhwKC1No",
          "YXJlZF9UeXBlEg0KCXNoYXJlZF9nYhAAKloKDVNoYXJlZF9TdGF0dXMSGAoU",
          "U2hhcmVkX1N0YXR1c19QdWJsaWMQABIYChRTaGFyZWRfU3RhdHVzX0ludml0",
          "ZRABEhUKEVNoYXJlZF9TdGF0dXNfRGVsEApiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::TopicReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::FileList_Root_Type), typeof(global::Mail_Flag), typeof(global::Mail_Type), typeof(global::User_Type), typeof(global::Course_type), typeof(global::End_Course_Type), typeof(global::Command_ID), typeof(global::Command_Result), typeof(global::GetShared_Type), typeof(global::Get_Part_Of_Userinfo), typeof(global::GBSort_Type), typeof(global::PKSort_Type), typeof(global::Course_Race_Type), typeof(global::Period_Item_Type), typeof(global::Course_Status), typeof(global::GetCourseListType), typeof(global::Trophy_Type), typeof(global::GetHonorwallType), typeof(global::Shared_Type), typeof(global::Shared_Status), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MultiFileList), global::MultiFileList.Parser, new[]{ "FileLists" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetProjectListReq_V3), global::GetProjectListReq_V3.Parser, new[]{ "ReqRoot" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UploadFileList_V3), global::UploadFileList_V3.Parser, new[]{ "ListRoot", "Files", "ProjectTag" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DownloadDirt_V3), global::DownloadDirt_V3.Parser, new[]{ "ProjectFullpath", "SaveAsGraphyProjectName", "SaveAsPythonProjectName", "SaveAsGraphyGbName", "SaveAsPythonGbName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CopyDir_V3), global::CopyDir_V3.Parser, new[]{ "ProjectSrc", "DesRoot", "DesName", "DesTag" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DelDir_V3), global::DelDir_V3.Parser, new[]{ "ProjectFullpath", "DelPaths" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Mail), global::Mail.Parser, new[]{ "MailId", "SenderId", "ReceiverId", "SenderName", "Title", "Content", "Attachment", "ExpiredTime", "MailFlag", "CreateTime", "MailType", "Extension", "ReceiverName", "IconId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_User_Display_Info), global::A8_User_Display_Info.Parser, new[]{ "UserId", "UserNickname", "UserInconId", "UserOnline" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Student_Submit_Task), global::A8_Student_Submit_Task.Parser, new[]{ "SubmitId", "ProjectName", "TaskGrade", "SubmittedTime", "UpdateTime", "SubmitProjectType", "SubmitAttachInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Task_Submit_Info), global::A8_Task_Submit_Info.Parser, new[]{ "SubmittedTask" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Task_Info), global::A8_Task_Info.Parser, new[]{ "TaskId", "TaskName", "CreaterId", "TaskDescription", "TaskProgramName", "TaskCreateTime", "TaskUpdateTime", "TaskSubmitInfo", "TaskProjectType", "TaskAttachInfoNew", "TaskNotAllowSubmit" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Class_Member_Info), global::A8_Class_Member_Info.Parser, new[]{ "MemberList" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Class_Task_List), global::A8_Class_Task_List.Parser, new[]{ "TaskList" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Class_Info), global::A8_Class_Info.Parser, new[]{ "ClassId", "ClassName", "TeacherId", "MemberInfo", "ClassDescription", "ClassInconId", "ClassCreateTime", "ClassUpdateTime", "ClassStatus", "ClassProjectType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Class_Detail), global::User_Class_Detail.Parser, new[]{ "JoinedTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Class_Info), global::User_Class_Info.Parser, new[]{ "UserAttendClassMapNew", "UserCreateClassMapNew", "UserAppliedClassesNew" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Ext_Info), global::User_Ext_Info.Parser, new[]{ "CellphoneNum", "ResetPasswordCount", "LastResetPasswordTime", "WebToken", "MailAddr" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_PeriodItem_Info), global::User_PeriodItem_Info.Parser, new[]{ "ItemStatus", "ItemScore" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Period_Info), global::User_Period_Info.Parser, new[]{ "UserPerioditemList", "PeriodStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Period_Info_List), global::User_Period_Info_List.Parser, new[]{ "UserAttendPeriodList", "CourseStatus", "CourseType", "CourseAttendTime" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Course_Info), global::User_Course_Info.Parser, new[]{ "UserCreateCourseMap", "UserAttendCourseMap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Buy_Lesson_Info), global::A8_Buy_Lesson_Info.Parser, new[]{ "BuyLessons" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Purchase_Info), global::A8_Purchase_Info.Parser, new[]{ "Coins" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_Buy_ArObjs_Info), global::A8_Buy_ArObjs_Info.Parser, new[]{ "BuyArObjs" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::A8_User_Info), global::A8_User_Info.Parser, new[]{ "UserId", "UserNickname", "UserInconId", "UserClassInfo", "UserType", "UserOnline", "UserExpiredTime", "UserExtInfo", "UserBuyLessons", "UserCourseInfo", "UserPurchaseInfo", "UserBuyArObjs", "UserTopicInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD), global::CMD.Parser, new[]{ "CmdId", "CmdParameters", "CmdResult", "UserToken", "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Reg_r_Parameters), global::CMD_Reg_r_Parameters.Parser, new[]{ "AccountId", "AccountName", "AccountPass", "AccountType", "AccountUnique", "DeviceInfo", "UserNickname", "UserIconId", "UserType", "CellphoneNum", "InviteCode", "VerificationCode", "MailAddr", "BuyLessons", "ActiveDays", "UserChannel" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Reg_a_Parameters), global::CMD_Reg_a_Parameters.Parser, new[]{ "AccountId", "RoleId", "AccountToken", "UserNickname" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Account_Login_r_Parameters), global::CMD_Account_Login_r_Parameters.Parser, new[]{ "AccountName", "AccountPass", "AccountId", "LoginType", "DeviceInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Account_Login_a_Parameters), global::CMD_Account_Login_a_Parameters.Parser, new[]{ "AccountId", "AccountToken", "UserInfo", "LoginType", "SrvTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Logout_r_Parameters), global::CMD_Logout_r_Parameters.Parser, new[]{ "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Logout_a_Parameters), global::CMD_Logout_a_Parameters.Parser, new[]{ "UserId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Verification_Code_r_Parameters), global::CMD_Get_Verification_Code_r_Parameters.Parser, new[]{ "CellphoneNum", "VcType", "InviteCode", "StrToken", "UserChannel" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Verification_Code_a_Parameters), global::CMD_Get_Verification_Code_a_Parameters.Parser, new[]{ "CellphoneNum", "VerificationCode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Reset_Password_r_Parameters), global::CMD_Reset_Password_r_Parameters.Parser, new[]{ "NewPassword", "VerificationCode", "CellphoneNum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Reset_Password_a_Parameters), global::CMD_Reset_Password_a_Parameters.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Use_Activation_Code_r_Parameters), global::CMD_Use_Activation_Code_r_Parameters.Parser, new[]{ "ActivationCode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Use_Activation_Code_a_Parameters), global::CMD_Use_Activation_Code_a_Parameters.Parser, new[]{ "UserType", "ExpiredTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Change_Nickname_r_Parameters), global::CMD_Change_Nickname_r_Parameters.Parser, new[]{ "NewNickname" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Change_Nickname_a_Parameters), global::CMD_Change_Nickname_a_Parameters.Parser, new[]{ "NewNickname" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Rbind_r_Parameters), global::CMD_Rbind_r_Parameters.Parser, new[]{ "PhoneNum", "MailAddr", "VerifyCode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Rbind_a_Parameters), global::CMD_Rbind_a_Parameters.Parser, new[]{ "PhoneNum", "MailAddr" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Password_r_Parameters), global::CMD_Modify_Password_r_Parameters.Parser, new[]{ "NewPassword", "OldPassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Password_a_Parameters), global::CMD_Modify_Password_a_Parameters.Parser, new[]{ "NewPassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Shared_r_Parameters), global::CMD_Add_Shared_r_Parameters.Parser, new[]{ "SharedOpts" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Shared_Info), global::Shared_Info.Parser, new[]{ "SharedId", "SharedOpts", "CreateId", "CreateNickname" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Shared_a_Parameters), global::CMD_Add_Shared_a_Parameters.Parser, new[]{ "SharedId", "SharedOpts" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Shared_r_Parameters), global::CMD_Modify_Shared_r_Parameters.Parser, new[]{ "SharedId", "SharedOpts" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Shared_a_Parameters), global::CMD_Modify_Shared_a_Parameters.Parser, new[]{ "SharedId", "SharedOpts" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Shared_r_Parameters), global::CMD_Del_Shared_r_Parameters.Parser, new[]{ "SharedId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Shared_a_Parameters), global::CMD_Del_Shared_a_Parameters.Parser, new[]{ "SharedId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Shared_List_r_Parameters), global::CMD_Get_Shared_List_r_Parameters.Parser, new[]{ "ReqType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Shared_List_a_Parameters), global::CMD_Get_Shared_List_a_Parameters.Parser, new[]{ "SharedList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Coins_Change_Notify_Parameters), global::CMD_Coins_Change_Notify_Parameters.Parser, new[]{ "CoinsDelta", "Coins" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Srv_Time_r_Parameters), global::CMD_Get_Srv_Time_r_Parameters.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Srv_Time_a_Parameters), global::CMD_Get_Srv_Time_a_Parameters.Parser, new[]{ "SrvTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Buy_Ar_Obj_r_Parameters), global::CMD_Buy_Ar_Obj_r_Parameters.Parser, new[]{ "ReqBuyArObjId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Buy_Ar_Obj_a_Parameters), global::CMD_Buy_Ar_Obj_a_Parameters.Parser, new[]{ "ArObjId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Unbind_r_Parameters), global::CMD_Unbind_r_Parameters.Parser, new[]{ "PhoneNum", "MailAddr", "VerifyCode" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Unbind_a_Parameters), global::CMD_Unbind_a_Parameters.Parser, new[]{ "PhoneNum", "MailAddr" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Partofuserinfo_r_Parameters), global::CMD_Get_Partofuserinfo_r_Parameters.Parser, new[]{ "ReqPart" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Partofuserinfo_a_Parameters), global::CMD_Get_Partofuserinfo_a_Parameters.Parser, new[]{ "ClassInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Userinfo_r_Parameters), global::CMD_Get_Userinfo_r_Parameters.Parser, new[]{ "ReqId", "ReqNickname" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Userinfo_a_Parameters), global::CMD_Get_Userinfo_a_Parameters.Parser, new[]{ "UserList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_Userinfo_r_Parameters), global::CMD_Update_Userinfo_r_Parameters.Parser, new[]{ "UpdateUserinfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_Userinfo_a_Parameters), global::CMD_Update_Userinfo_a_Parameters.Parser, new[]{ "UpdatedUserinfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Display_Userinfo_r_Parameters), global::CMD_Get_Display_Userinfo_r_Parameters.Parser, new[]{ "ReqId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Display_Userinfo_a_Parameters), global::CMD_Get_Display_Userinfo_a_Parameters.Parser, new[]{ "DispalyUserinfo", "UserType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Class_r_Parameters), global::CMD_Create_Class_r_Parameters.Parser, new[]{ "CreateInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Class_a_Parameters), global::CMD_Create_Class_a_Parameters.Parser, new[]{ "ClassInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Quite_Class_r_Parameters), global::CMD_Quite_Class_r_Parameters.Parser, new[]{ "ClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Quite_Class_a_Parameters), global::CMD_Quite_Class_a_Parameters.Parser, new[]{ "QuitClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_Classinfo_r_Parameters), global::CMD_Update_Classinfo_r_Parameters.Parser, new[]{ "UpdateClass" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_Classinfo_a_Parameters), global::CMD_Update_Classinfo_a_Parameters.Parser, new[]{ "UpdatedClass" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Classinfo_r_Parameters), global::CMD_Get_Classinfo_r_Parameters.Parser, new[]{ "ReqClassId", "ReqClassName", "ReqClassList", "AttendClass", "CreatedClass", "AppliedClass", "ReqProjectType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Classinfo_a_Parameters), global::CMD_Get_Classinfo_a_Parameters.Parser, new[]{ "ClassInfoList", "AppliedClassList", "CreatedClassList", "AttendClassList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Classs_r_Parameters), global::CMD_Del_Classs_r_Parameters.Parser, new[]{ "DelClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Classs_a_Parameters), global::CMD_Del_Classs_a_Parameters.Parser, new[]{ "DelClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Recommand_Class_r_Parameters), global::CMD_Recommand_Class_r_Parameters.Parser, new[]{ "ReqCount", "ReqProjectType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Recommand_Class_a_Parameters), global::CMD_Recommand_Class_a_Parameters.Parser, new[]{ "ClassInfoList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Class_Member_r_Parameters), global::CMD_Add_Class_Member_r_Parameters.Parser, new[]{ "AddId", "ClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Class_Member_a_Parameters), global::CMD_Add_Class_Member_a_Parameters.Parser, new[]{ "AddedId", "ClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Class_Member_r_Parameters), global::CMD_Del_Class_Member_r_Parameters.Parser, new[]{ "ReqDelId", "ClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Class_Member_a_Parameters), global::CMD_Del_Class_Member_a_Parameters.Parser, new[]{ "DeledId", "ClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Classinfo_Updated_Parameters), global::CMD_Classinfo_Updated_Parameters.Parser, new[]{ "ClassInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Class_Deleted_Parameters), global::CMD_Class_Deleted_Parameters.Parser, new[]{ "DelClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Class_Member_Add_Parameters), global::CMD_Class_Member_Add_Parameters.Parser, new[]{ "AddInfo", "ClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Class_Member_Leave_Parameters), global::CMD_Class_Member_Leave_Parameters.Parser, new[]{ "LeaveId", "ClassId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Task_r_Parameters), global::CMD_Create_Task_r_Parameters.Parser, new[]{ "ClassId", "TaskInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Task_a_Parameters), global::CMD_Create_Task_a_Parameters.Parser, new[]{ "ClassId", "TaskInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_Task_r_Parameters), global::CMD_Update_Task_r_Parameters.Parser, new[]{ "ClassId", "TaskInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_Task_a_Parameters), global::CMD_Update_Task_a_Parameters.Parser, new[]{ "ClassId", "TaskInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Task_r_Parameters), global::CMD_Del_Task_r_Parameters.Parser, new[]{ "ClassId", "TaskId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Task_a_Parameters), global::CMD_Del_Task_a_Parameters.Parser, new[]{ "ClassId", "TaskId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Submit_Task_r_Parameters), global::CMD_Submit_Task_r_Parameters.Parser, new[]{ "ClassId", "TaskId", "SubmitTask" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Submit_Task_a_Parameters), global::CMD_Submit_Task_a_Parameters.Parser, new[]{ "ClassId", "TaskId", "SubmitTask" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Grade_Task_r_Parameter), global::CMD_Grade_Task_r_Parameter.Parser, new[]{ "ClassId", "TaskId", "SubmitId", "GradeString" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Grade_Task_a_Parameter), global::CMD_Grade_Task_a_Parameter.Parser, new[]{ "ClassId", "TaskId", "SubmitId", "GradeString" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Task_Info_r_Parameter), global::CMD_Get_Task_Info_r_Parameter.Parser, new[]{ "ClassId", "TaskId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Task_Info_a_Parameter), global::CMD_Get_Task_Info_a_Parameter.Parser, new[]{ "ClassId", "TaskList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Task_Created_Parameters), global::CMD_Task_Created_Parameters.Parser, new[]{ "ClassId", "TaskInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Task_Updated_Parameters), global::CMD_Task_Updated_Parameters.Parser, new[]{ "ClassId", "TaskInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Task_Deleted_Parameters), global::CMD_Task_Deleted_Parameters.Parser, new[]{ "ClassId", "TaskId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Task_Submited_Parameters), global::CMD_Task_Submited_Parameters.Parser, new[]{ "ClassId", "TaskId", "SubmitTask" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Task_Graded_Parameters), global::CMD_Task_Graded_Parameters.Parser, new[]{ "ClassId", "TaskId", "SubmitId", "GradeString" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Submit_r_Parameters), global::CMD_Del_Submit_r_Parameters.Parser, new[]{ "ClassId", "TaskId", "SubmitId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Submit_a_Parameters), global::CMD_Del_Submit_a_Parameters.Parser, new[]{ "ClassId", "TaskId", "SubmitId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Submit_Deleted_Parameters), global::CMD_Submit_Deleted_Parameters.Parser, new[]{ "ClassId", "TaskId", "SubmitId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Task_Attach_r_Parameters), global::CMD_Modify_Task_Attach_r_Parameters.Parser, new[]{ "ClassId", "TaskId", "ModifyInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Task_Attach_a_Parameters), global::CMD_Modify_Task_Attach_a_Parameters.Parser, new[]{ "ClassId", "TaskId", "ModifyInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Task_Attach_r_Parameters), global::CMD_Del_Task_Attach_r_Parameters.Parser, new[]{ "ClassId", "TaskId", "AttachIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Task_Attach_a_Parameters), global::CMD_Del_Task_Attach_a_Parameters.Parser, new[]{ "ClassId", "TaskId", "AttachIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Task_Attach_r_Parameters), global::CMD_Add_Task_Attach_r_Parameters.Parser, new[]{ "ClassId", "TaskId", "AddInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Task_Attach_a_Parameters), global::CMD_Add_Task_Attach_a_Parameters.Parser, new[]{ "ClassId", "TaskId", "AddInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Maillist_r_Parameters), global::CMD_Get_Maillist_r_Parameters.Parser, new[]{ "RequestType", "SentMail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Maillist_a_Parameters), global::CMD_Get_Maillist_a_Parameters.Parser, new[]{ "MailList", "SentMail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Read_mail_r_Parameters), global::CMD_Read_mail_r_Parameters.Parser, new[]{ "MailId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Read_Mail_a_Parameters), global::CMD_Read_Mail_a_Parameters.Parser, new[]{ "MailId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Mail_r_Parameters), global::CMD_Del_Mail_r_Parameters.Parser, new[]{ "MailIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Mail_a_Parameters), global::CMD_Del_Mail_a_Parameters.Parser, new[]{ "MailIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Send_Mail_r_Parameters), global::CMD_Send_Mail_r_Parameters.Parser, new[]{ "SendMail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Send_Mail_a_Parameters), global::CMD_Send_Mail_a_Parameters.Parser, new[]{ "SentMail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_New_Mail_Notify_Parameters), global::CMD_New_Mail_Notify_Parameters.Parser, new[]{ "NewMail" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GB_Attach_Info), global::GB_Attach_Info.Parser, new[]{ "AttachUrlImage", "AttachUrlVideo", "AttachUrlCourse" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameBoard), global::GameBoard.Parser, new[]{ "GbId", "GbName", "GbDescription", "GbScriptShow", "GbDownloadCount", "GbCreateId", "GbCreateTime", "GbSenceId", "GbLikeList", "GbAnswerList", "ProjPath", "GbCreaterNickname", "GbType", "GbAttachInfo", "GbParameters", "GbAllowRepeatAnswer", "GbMaxAnswerId", "GbProjectLanguageType", "GbUpdateTime", "GbAttachInfoNew" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Gameboard_r_Parameters), global::CMD_Create_Gameboard_r_Parameters.Parser, new[]{ "GbName", "GbScriptShow", "GbSenceId", "GbDescription", "GbSavedPath", "GbAttachInfo", "GbParameters", "GbAllowRepeatAnswer", "GbProjectLanguageType", "GbFiles", "GbAttachInfoNew" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Gameboard_a_Parameters), global::CMD_Create_Gameboard_a_Parameters.Parser, new[]{ "GbName", "GbScriptShow", "GbId", "GbPath", "GbInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Gameboard_r_Parameters), global::CMD_Modify_Gameboard_r_Parameters.Parser, new[]{ "GbId", "GbScriptShow", "GbAttachInfo", "GbParameters", "GbFiles", "GbAttachInfoNew" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Gameboard_a_Parameters), global::CMD_Modify_Gameboard_a_Parameters.Parser, new[]{ "GbId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Gameboard_r_Parameters), global::CMD_Del_Gameboard_r_Parameters.Parser, new[]{ "GbId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Gameboard_a_Parameters), global::CMD_Del_Gameboard_a_Parameters.Parser, new[]{ "GbId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Gameboard_r_Parameters), global::CMD_Get_Gameboard_r_Parameters.Parser, new[]{ "GbId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Gameboard_a_Parameters), global::CMD_Get_Gameboard_a_Parameters.Parser, new[]{ "GbInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Gameboardlist_r_Parameters), global::CMD_Get_Gameboardlist_r_Parameters.Parser, new[]{ "SortType", "ShowScript", "StartPos", "LimitCount", "Desc", "ReqLanguageType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Gameboardlist_a_Parameters), global::CMD_Get_Gameboardlist_a_Parameters.Parser, new[]{ "GbList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Answer_Gameboard_r_Paramerers), global::CMD_Answer_Gameboard_r_Paramerers.Parser, new[]{ "GbId", "GbAnswerInfo", "GbFiles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Answer_Gameboard_a_Paramerers), global::CMD_Answer_Gameboard_a_Paramerers.Parser, new[]{ "GbId", "GbAnswerInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Like_Gameboard_r_Parameters), global::CMD_Like_Gameboard_r_Parameters.Parser, new[]{ "GbId", "GbLike", "AnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Like_Gameboard_a_Parameters), global::CMD_Like_Gameboard_a_Parameters.Parser, new[]{ "GbId", "GbLike", "AnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Download_Gameboard_r_Parameters), global::CMD_Download_Gameboard_r_Parameters.Parser, new[]{ "GbPath" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Download_Gameboard_a_Parameters), global::CMD_Download_Gameboard_a_Parameters.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Grade_Gameboard_r_Parameters), global::CMD_Grade_Gameboard_r_Parameters.Parser, new[]{ "GbId", "AnswerId", "GbScore" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Grade_Gameboard_a_Parameters), global::CMD_Grade_Gameboard_a_Parameters.Parser, new[]{ "GbId", "AnswerId", "GbScore" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Gameboard_Answer_r_Parameters), global::CMD_Del_Gameboard_Answer_r_Parameters.Parser, new[]{ "GbId", "AnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Gameboard_Answer_a_Parameters), global::CMD_Del_Gameboard_Answer_a_Parameters.Parser, new[]{ "GbId", "AnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_User_Setting_r_Parameters), global::CMD_Get_User_Setting_r_Parameters.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_User_Setting_a_Parameters), global::CMD_Get_User_Setting_a_Parameters.Parser, new[]{ "JsonString" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_User_Setting_r_Parameters), global::CMD_Update_User_Setting_r_Parameters.Parser, new[]{ "JsonString" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_User_Setting_a_Parameters), global::CMD_Update_User_Setting_a_Parameters.Parser, new[]{ "JsonString" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Rank_Unit), global::Rank_Unit.Parser, new[]{ "UserDisplayInfo", "RankId", "RankScore", "RankSampleCount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Ranklist_r_Parameters), global::CMD_Get_Ranklist_r_Parameters.Parser, new[]{ "GbId", "PkId", "CourseId", "PeriodId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Ranklist_a_Parameters), global::CMD_Get_Ranklist_a_Parameters.Parser, new[]{ "ReqInfo", "RankList", "SelfInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PK_Result), global::PK_Result.Parser, new[]{ "ChanllengerAnswerId", "ChanllengerScore", "AccepterId", "AccepterScore", "PkTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PKLike_Info), global::PKLike_Info.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PKAnswer), global::PKAnswer.Parser, new[]{ "PkScriptShow", "DownloadCount", "ProjPath", "AnswerTime", "AnswerName", "PkLikeList", "AnswerId", "PkResultList", "PkWinCount", "PkLostCount", "PkDrawCount", "AnswerUserId", "AnswerNickname", "AnswerProjectType" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::PK_Attach_Info), global::PK_Attach_Info.Parser, new[]{ "AttachUrlImage", "AttachUrlVideo", "AttachUrlCourse" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PK), global::PK.Parser, new[]{ "PkId", "PkName", "PkDescription", "PkScriptShow", "PkDownloadCount", "PkCreateId", "PkCreateTime", "PkSenceId", "PkLikeList", "PkAnswerList", "ProjPath", "PkParameters", "PkAllowRepeatAnswer", "PkAttachInfo", "PkCreaterNickname", "PkMaxAnswer", "PkProjectLanguageType", "PkUpdateTime", "PkAttachInfoNew" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_PK_r_Parameters), global::CMD_Create_PK_r_Parameters.Parser, new[]{ "PkName", "PkScriptShow", "PkSenceId", "PkDescription", "PkParameters", "PkAllowRepeatAnswer", "PkAttachInfo", "PkProjectLanguageType", "PkFiles", "PkAttachInfoNew" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_PK_a_Parameters), global::CMD_Create_PK_a_Parameters.Parser, new[]{ "PkInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_PK_r_Parameters), global::CMD_Modify_PK_r_Parameters.Parser, new[]{ "PkId", "PkAttachInfo", "PkAttachInfoNew" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_PK_a_Parameters), global::CMD_Modify_PK_a_Parameters.Parser, new[]{ "PkId", "PkAttachInfo", "PkAttachInfoNew" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_PK_r_Parameters), global::CMD_Del_PK_r_Parameters.Parser, new[]{ "PkId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_PK_a_Parameters), global::CMD_Del_PK_a_Parameters.Parser, new[]{ "PkId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_PK_r_Parameters), global::CMD_Get_PK_r_Parameters.Parser, new[]{ "PkId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_PK_a_Parameters), global::CMD_Get_PK_a_Parameters.Parser, new[]{ "PkInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_PKList_r_Parameters), global::CMD_Get_PKList_r_Parameters.Parser, new[]{ "SortType", "ShowScript", "StartPos", "LimitCount", "Desc", "ReqLanguageType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_PKList_a_Parameters), global::CMD_Get_PKList_a_Parameters.Parser, new[]{ "PkList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Answer_PK_r_Parameters), global::CMD_Answer_PK_r_Parameters.Parser, new[]{ "PkId", "PkAnswerInfo", "PkFiles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Answer_PK_a_Parameters), global::CMD_Answer_PK_a_Parameters.Parser, new[]{ "PkId", "PkAnswerInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Like_PK_r_Parameters), global::CMD_Like_PK_r_Parameters.Parser, new[]{ "PkId", "PkAnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Like_PK_a_Parameters), global::CMD_Like_PK_a_Parameters.Parser, new[]{ "PkId", "PkAnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Download_PK_r_Parameters), global::CMD_Download_PK_r_Parameters.Parser, new[]{ "PkPath" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Download_PK_a_Parameters), global::CMD_Download_PK_a_Parameters.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_PK_r_Parameters), global::CMD_PK_r_Parameters.Parser, new[]{ "PkId", "PkResultInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_PK_a_Parameters), global::CMD_PK_a_Parameters.Parser, new[]{ "PkId", "PkResultInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_PK_Answer_r_Parameters), global::CMD_Del_PK_Answer_r_Parameters.Parser, new[]{ "PkId", "PkAnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_PK_Answer_a_Parameters), global::CMD_Del_PK_Answer_a_Parameters.Parser, new[]{ "PkId", "PkAnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Trophy_Setting), global::Trophy_Setting.Parser, new[]{ "TrophyJsonSetting", "TrophyMinScore" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Trophies_Setting), global::Trophies_Setting.Parser, new[]{ "CourseGoldTrophySetting", "CourseSiliverTrophySetting", "CourseBronzeTrophySetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Certificate_Setting), global::Certificate_Setting.Parser, new[]{ "CertificateJsonSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Course_Honor_Setting), global::Course_Honor_Setting.Parser, new[]{ "CourseId", "CourseRaceType", "CourseTrophiesSetting", "CourseCertificateSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Period_Item_Info), global::Period_Item_Info.Parser, new[]{ "ItemId", "ItemDescription", "ItemType", "ItemUrl", "GbInfo", "ItemName", "ItemCompletedUserCount", "ProjectPath" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Period_Finish_Condition), global::Period_Finish_Condition.Parser, new[]{ "ThreestarScore", "DoublestarScore", "PassScore" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Period_Info), global::Period_Info.Parser, new[]{ "PeriodId", "PeriodName", "PeriodDescription", "PeriodItems", "PeriodFinsishCon", "PeriodItemDisplayList", "MaxPeriodId", "UnlockedUserCount", "PeriodCompletedUserCount", "PeriodTotalScore", "PeriodTotalStar", "PeriodAverageBase", "PeriodType" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::Course_Info), global::Course_Info.Parser, new[]{ "CourseId", "CourseStatus", "CourseIcon", "CourseName", "CourseDescription", "CourseCreaterUserid", "CourseCreaterNickname", "PassScore", "JsonCfg", "PeriodList", "CoursePrice", "CoursePublishTime", "CourseCoverImageUrl", "PeriodDisplayList", "CourseAttendUserCount", "CourseType", "CourseStartTime", "CourseEndTime", "CourseHonorSetting", "CourseProjectLanguageType", "CourseUpdateTime", "CourseAllowDownloadGb", "CourseGbType" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Course_r_Parameters), global::CMD_Create_Course_r_Parameters.Parser, new[]{ "CreateInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Course_a_Parameters), global::CMD_Create_Course_a_Parameters.Parser, new[]{ "CourseInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Course_r_Parameters), global::CMD_Modify_Course_r_Parameters.Parser, new[]{ "ModifyInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Course_a_Parameters), global::CMD_Modify_Course_a_Parameters.Parser, new[]{ "CourseInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Course_r_Parameters), global::CMD_Del_Course_r_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Course_a_Parameters), global::CMD_Del_Course_a_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Course_List_r_Parameters), global::CMD_Get_Course_List_r_Parameters.Parser, new[]{ "ReqType", "ReqName", "ReqCourseType", "ReqProjectLanguageType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Course_List_a_Parameters), global::CMD_Get_Course_List_a_Parameters.Parser, new[]{ "CouseList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Period_r_Parameters), global::CMD_Add_Period_r_Parameters.Parser, new[]{ "CourseId", "PeriodInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Period_a_Parameters), global::CMD_Add_Period_a_Parameters.Parser, new[]{ "CourseId", "PeriodInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Period_r_Parameters), global::CMD_Modify_Period_r_Parameters.Parser, new[]{ "CourseId", "PeriodInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Period_a_Parameters), global::CMD_Modify_Period_a_Parameters.Parser, new[]{ "CourseId", "PeriodInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Period_r_Parameters), global::CMD_Del_Period_r_Parameters.Parser, new[]{ "CourseId", "PeriodId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Period_a_Parameters), global::CMD_Del_Period_a_Parameters.Parser, new[]{ "CourseId", "PeriodId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Approve_Course_r_Parameters), global::CMD_Approve_Course_r_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Approve_Course_a_Parameters), global::CMD_Approve_Course_a_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Course_Status_r_Parameters), global::CMD_Set_Course_Status_r_Parameters.Parser, new[]{ "CourseId", "CourseStatus", "CoursePassword", "CoursePrice" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Course_Status_a_Parameters), global::CMD_Set_Course_Status_a_Parameters.Parser, new[]{ "CourseId", "CourseStatus", "CourseInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Answer_Perioditem_r_Parameters), global::CMD_Answer_Perioditem_r_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId", "PeriodAnswerInfo", "PeriodFiles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Answer_Perioditem_a_Parameters), global::CMD_Answer_Perioditem_a_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId", "PeriodAnswerInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Perioditem_r_Parameters), global::CMD_Add_Perioditem_r_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PeriodItemInfo", "PeriodFiles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Perioditem_a_Parameters), global::CMD_Add_Perioditem_a_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PeriodItemInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Perioditem_r_Parameters), global::CMD_Modify_Perioditem_r_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PeriodItemInfo", "PeriodFiles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Perioditem_a_Parameters), global::CMD_Modify_Perioditem_a_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PeriodItemInfo", "PeriodFiles" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Perioditem_r_Parameters), global::CMD_Del_Perioditem_r_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Perioditem_a_Parameters), global::CMD_Del_Perioditem_a_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Score_Perioditem_r_Parameters), global::CMD_Score_Perioditem_r_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId", "PerioditemAnswerId", "PerioditemScore" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Score_Perioditem_a_Parameters), global::CMD_Score_Perioditem_a_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId", "PerioditemAnswerId", "PerioditemScore" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Buy_Course_r_Parameters), global::CMD_Buy_Course_r_Parameters.Parser, new[]{ "CourseId", "CoursePassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Buy_Course_a_Parameters), global::CMD_Buy_Course_a_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Perioditem_Status_r_Paramters), global::CMD_Set_Perioditem_Status_r_Paramters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId", "PerioditemStatus" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Perioditem_Status_a_Paramters), global::CMD_Set_Perioditem_Status_a_Paramters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId", "PerioditemStatus" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Course_Password_r_Parameters), global::CMD_Get_Course_Password_r_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Course_Password_a_Parameters), global::CMD_Get_Course_Password_a_Parameters.Parser, new[]{ "CourseId", "CoursePassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Perioditem_Answer_r_Parameters), global::CMD_Del_Perioditem_Answer_r_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId", "PerioditemAnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Perioditem_Answer_a_Parameters), global::CMD_Del_Perioditem_Answer_a_Parameters.Parser, new[]{ "CourseId", "PeriodId", "PerioditemId", "PerioditemAnswerId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Course_Status_Change_Notify_Parameters), global::CMD_Course_Status_Change_Notify_Parameters.Parser, new[]{ "CourseInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Trophy_Info), global::User_Trophy_Info.Parser, new[]{ "AwardTime", "AwardTrophy", "NewState", "TrophySetting", "CourseScore", "CourseRaceType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Certificate_Info), global::User_Certificate_Info.Parser, new[]{ "AwardTime", "NewState", "CertificateSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Honor_Wall_Info), global::Honor_Wall_Info.Parser, new[]{ "UserTrophies", "UserCertificates" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_End_Course_r_Parameters), global::CMD_End_Course_r_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_End_Course_a_Parameters), global::CMD_End_Course_a_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Honorwall_r_Parameters), global::CMD_Get_Honorwall_r_Parameters.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Honorwall_a_Parameters), global::CMD_Get_Honorwall_a_Parameters.Parser, new[]{ "HonorwallInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_New_Honorwall_r_Parameters), global::CMD_Get_New_Honorwall_r_Parameters.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_New_Honorwall_a_Parameters), global::CMD_Get_New_Honorwall_a_Parameters.Parser, new[]{ "HonorwallInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_Honorwall_State_r_Parameters), global::CMD_Update_Honorwall_State_r_Parameters.Parser, new[]{ "CourseId", "Trophy" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Update_Honorwall_State_a_Parameters), global::CMD_Update_Honorwall_State_a_Parameters.Parser, new[]{ "CourseId", "Trophy" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Honor_Rank_Unit), global::Honor_Rank_Unit.Parser, new[]{ "UserDisplayInfo", "RankId", "TrophyCount", "CertificateCount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Honorwall_Rank_r_Parameters), global::CMD_Get_Honorwall_Rank_r_Parameters.Parser, new[]{ "ReqType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Honorwall_Rank_a_Parameters), global::CMD_Get_Honorwall_Rank_a_Parameters.Parser, new[]{ "RankList", "SelfInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Course_Trophy_Setting_r_Parameters), global::CMD_Set_Course_Trophy_Setting_r_Parameters.Parser, new[]{ "CourseId", "CourseRaceType", "TrophiesSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Course_Trophy_Setting_a_Parameters), global::CMD_Set_Course_Trophy_Setting_a_Parameters.Parser, new[]{ "CourseId", "CourseRaceType", "TrophiesSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Course_Trophy_Setting_r_Parameters), global::CMD_Get_Course_Trophy_Setting_r_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Course_Trophy_Setting_a_Parameters), global::CMD_Get_Course_Trophy_Setting_a_Parameters.Parser, new[]{ "CourseId", "CourseRaceType", "TrophiesSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Course_Certificate_Setting_r_Parameters), global::CMD_Set_Course_Certificate_Setting_r_Parameters.Parser, new[]{ "CourseId", "CourseCertificateSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Course_Certificate_Setting_a_Parameters), global::CMD_Set_Course_Certificate_Setting_a_Parameters.Parser, new[]{ "CourseId", "CourseCertificateSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Course_Certificate_Setting_r_Parameters), global::CMD_Get_Course_Certificate_Setting_r_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Course_Certificate_Setting_a_Parameters), global::CMD_Get_Course_Certificate_Setting_a_Parameters.Parser, new[]{ "CourseId", "CourseCertificateSetting" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Course_Trophy_Setting_r_Parameters), global::CMD_Del_Course_Trophy_Setting_r_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Course_Trophy_Setting_a_Parameters), global::CMD_Del_Course_Trophy_Setting_a_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Course_Certificate_Setting_r_Parameters), global::CMD_Del_Course_Certificate_Setting_r_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Course_Certificate_Setting_a_Parameters), global::CMD_Del_Course_Certificate_Setting_a_Parameters.Parser, new[]{ "CourseId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_New_Honor_Notify_Parameters), global::CMD_New_Honor_Notify_Parameters.Parser, new[]{ "NewHonorInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Shared_Info), global::User_Shared_Info.Parser, new[]{ "SharedId", "CreateId", "CreateNickname", "SharedName", "SharedDescript", "SharedType", "CreateTime", "UpdateTime", "SharedData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Publish_r_Parameters), global::CMD_SharedData_Publish_r_Parameters.Parser, new[]{ "SharedType", "SharedStatus", "SharedName", "SharedDescript", "SharedPassword", "SharedData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Publish_a_Parameters), global::CMD_SharedData_Publish_a_Parameters.Parser, new[]{ "SharedPath", "SharedStatus", "SharedData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Update_r_Parameters), global::CMD_SharedData_Update_r_Parameters.Parser, new[]{ "SharedPath", "SharedStatus", "UpdateData", "SharedPassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Update_a_Parameters), global::CMD_SharedData_Update_a_Parameters.Parser, new[]{ "SharedPath", "SharedStatus", "SharedData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Del_r_Parameters), global::CMD_SharedData_Del_r_Parameters.Parser, new[]{ "ReqPath", "ReqStatus", "SharedPassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Del_a_Parameters), global::CMD_SharedData_Del_a_Parameters.Parser, new[]{ "ReqPath", "ReqStatus" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Download_r_Parameters), global::CMD_SharedData_Download_r_Parameters.Parser, new[]{ "ReqPath", "ReqStatus", "Password", "SaveasPath" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Download_a_Parameters), global::CMD_SharedData_Download_a_Parameters.Parser, new[]{ "SharedPath", "SharedStatus", "SharedData", "SaveasPath" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Getlist_r_Parameters), global::CMD_SharedData_Getlist_r_Parameters.Parser, new[]{ "SharedStatus", "ReqSharedName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Getlist_a_Parameters), global::CMD_SharedData_Getlist_a_Parameters.Parser, new[]{ "SharedStatus", "SharedData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_CreateDir_r_Parameters), global::CMD_SharedData_CreateDir_r_Parameters.Parser, new[]{ "CreateDir", "SharedStatus", "SharedPassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_CreateDir_a_Parameters), global::CMD_SharedData_CreateDir_a_Parameters.Parser, new[]{ "CreateDir", "SharedStatus" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Check_PW_r_Parameters), global::CMD_SharedData_Check_PW_r_Parameters.Parser, new[]{ "SharedStatus", "ReqPath", "Password" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_SharedData_Check_PW_a_Parameters), global::CMD_SharedData_Check_PW_a_Parameters.Parser, new[]{ "SharedStatus", "ReqPath", "CheckResult" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum FileList_Root_Type {
  /// <summary>
  /// download/saved_project_v3/graphy/{user_id}
  /// </summary>
  [pbr::OriginalName("self_graphy")] SelfGraphy = 0,
  /// <summary>
  /// download/saved_project_v3/python/{user_id}
  /// </summary>
  [pbr::OriginalName("self_python")] SelfPython = 1,
  /// <summary>
  /// download/tasktemplate_v3/graphy/system
  /// </summary>
  [pbr::OriginalName("task_system_graphy")] TaskSystemGraphy = 10,
  /// <summary>
  /// download/tasktemplate_v3/python/system
  /// </summary>
  [pbr::OriginalName("task_system_python")] TaskSystemPython = 11,
  /// <summary>
  /// download/tasktemplate_v3/graphy/{user_id}
  /// </summary>
  [pbr::OriginalName("task_template_graphy")] TaskTemplateGraphy = 20,
  /// <summary>
  /// download/tasktemplate_v3/python/{user_id}
  /// </summary>
  [pbr::OriginalName("task_template_python")] TaskTemplatePython = 21,
  /// <summary>
  /// download/saved_gb_v3/graphy/{user_id}
  /// </summary>
  [pbr::OriginalName("self_gb_graphy")] SelfGbGraphy = 30,
  /// <summary>
  /// download/saved_gb_v3/python/{user_id}
  /// </summary>
  [pbr::OriginalName("self_gb_python")] SelfGbPython = 31,
  /// <summary>
  /// download/class_v3/{class_id}/{task_id}/{user_id}
  /// </summary>
  [pbr::OriginalName("class_project_root")] ClassProjectRoot = 100,
  /// <summary>
  /// download/class_v3/{class_id}/{task_id}/{submit_id}/base64(comm)
  /// </summary>
  [pbr::OriginalName("task_comm")] TaskComm = 101,
}

public enum Mail_Flag {
  [pbr::OriginalName("mail_new")] MailNew = 0,
  [pbr::OriginalName("mail_read")] MailRead = 1,
  [pbr::OriginalName("mail_del")] MailDel = 2,
}

public enum Mail_Type {
  [pbr::OriginalName("mail_all")] MailAll = 0,
  /// <summary>
  /// 普通公告文字邮件
  /// </summary>
  [pbr::OriginalName("mail_comm")] MailComm = 1,
  /// <summary>
  /// 奖励邮件
  /// </summary>
  [pbr::OriginalName("mail_reward")] MailReward = 2,
  /// <summary>
  /// 请求加好友邮件
  /// </summary>
  [pbr::OriginalName("mail_friend_req")] MailFriendReq = 4,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("mail_friend_interactive")] MailFriendInteractive = 8,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("mail_tags")] MailTags = 16,
  [pbr::OriginalName("mail_class_req")] MailClassReq = 32,
  [pbr::OriginalName("mail_leave_class")] MailLeaveClass = 64,
}

public enum User_Type {
  [pbr::OriginalName("user_type_student")] Student = 0,
  [pbr::OriginalName("user_type_teacher")] Teacher = 1,
  [pbr::OriginalName("user_type_admin")] Admin = 2,
  [pbr::OriginalName("user_type_approver")] Approver = 4,
  [pbr::OriginalName("user_type_python")] Python = 8,
  [pbr::OriginalName("user_type_gameboard")] Gameboard = 16,
  [pbr::OriginalName("user_type_gm")] Gm = 32,
  [pbr::OriginalName("user_type_ar")] Ar = 64,
  [pbr::OriginalName("user_type_patriarch")] Patriarch = 128,
  [pbr::OriginalName("user_type_channel")] Channel = 256,
  [pbr::OriginalName("user_type_school")] School = 512,
  [pbr::OriginalName("user_type_account_mgr")] AccountMgr = 1024,
  [pbr::OriginalName("user_store_gm")] UserStoreGm = 2048,
}

public enum Course_type {
  [pbr::OriginalName("course_type_default")] Default = 0,
  [pbr::OriginalName("course_type_race")] Race = 1,
}

public enum End_Course_Type {
  [pbr::OriginalName("ECT_not_end")] EctNotEnd = 0,
  [pbr::OriginalName("ECT_normal")] EctNormal = 1,
  [pbr::OriginalName("ECT_force")] EctForce = 2,
}

public enum Command_ID {
  [pbr::OriginalName("cmd_empty")] CmdEmpty = 0,
  /// <summary>
  ///  注册
  /// </summary>
  [pbr::OriginalName("cmd_reg_r")] CmdRegR = 1,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("cmd_reg_a")] CmdRegA = 2,
  /// <summary>
  ///  登陆
  /// </summary>
  [pbr::OriginalName("cmd_account_login_r")] CmdAccountLoginR = 3,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("cmd_account_login_a")] CmdAccountLoginA = 4,
  [pbr::OriginalName("cmd_logout_r")] CmdLogoutR = 5,
  [pbr::OriginalName("cmd_logout_a")] CmdLogoutA = 6,
  [pbr::OriginalName("cmd_get_verification_code_r")] CmdGetVerificationCodeR = 7,
  [pbr::OriginalName("cmd_get_verification_code_a")] CmdGetVerificationCodeA = 8,
  [pbr::OriginalName("cmd_reset_password_r")] CmdResetPasswordR = 9,
  [pbr::OriginalName("cmd_reset_password_a")] CmdResetPasswordA = 10,
  [pbr::OriginalName("cmd_use_activation_code_r")] CmdUseActivationCodeR = 11,
  [pbr::OriginalName("cmd_use_activation_code_a")] CmdUseActivationCodeA = 12,
  [pbr::OriginalName("cmd_web_reg_r")] CmdWebRegR = 13,
  [pbr::OriginalName("cmd_web_reg_a")] CmdWebRegA = 14,
  [pbr::OriginalName("cmd_change_nickname_r")] CmdChangeNicknameR = 15,
  [pbr::OriginalName("cmd_change_nickname_a")] CmdChangeNicknameA = 16,
  [pbr::OriginalName("cmd_rbind_r")] CmdRbindR = 17,
  [pbr::OriginalName("cmd_rbind_a")] CmdRbindA = 18,
  [pbr::OriginalName("cmd_modify_password_r")] CmdModifyPasswordR = 19,
  [pbr::OriginalName("cmd_modify_password_a")] CmdModifyPasswordA = 20,
  [pbr::OriginalName("cmd_add_shared_r")] CmdAddSharedR = 21,
  [pbr::OriginalName("cmd_add_shared_a")] CmdAddSharedA = 22,
  [pbr::OriginalName("cmd_modify_shared_r")] CmdModifySharedR = 23,
  [pbr::OriginalName("cmd_modify_shared_a")] CmdModifySharedA = 24,
  [pbr::OriginalName("cmd_del_shared_r")] CmdDelSharedR = 25,
  [pbr::OriginalName("cmd_del_shared_a")] CmdDelSharedA = 26,
  [pbr::OriginalName("cmd_get_shared_list_r")] CmdGetSharedListR = 27,
  [pbr::OriginalName("cmd_get_shared_list_a")] CmdGetSharedListA = 28,
  [pbr::OriginalName("cmd_coins_change_notify")] CmdCoinsChangeNotify = 30,
  [pbr::OriginalName("cmd_get_srv_time_r")] CmdGetSrvTimeR = 31,
  [pbr::OriginalName("cmd_get_srv_time_a")] CmdGetSrvTimeA = 32,
  [pbr::OriginalName("cmd_buy_ar_obj_r")] CmdBuyArObjR = 33,
  [pbr::OriginalName("cmd_buy_ar_obj_a")] CmdBuyArObjA = 34,
  [pbr::OriginalName("cmd_unbind_r")] CmdUnbindR = 35,
  [pbr::OriginalName("cmd_unbind_a")] CmdUnbindA = 36,
  [pbr::OriginalName("cmd_get_partofuserinfo_r")] CmdGetPartofuserinfoR = 37,
  [pbr::OriginalName("cmd_get_partofuserinfo_a")] CmdGetPartofuserinfoA = 38,
  [pbr::OriginalName("cmd_get_userinfo_r")] CmdGetUserinfoR = 101,
  [pbr::OriginalName("cmd_get_userinfo_a")] CmdGetUserinfoA = 102,
  [pbr::OriginalName("cmd_update_userinfo_r")] CmdUpdateUserinfoR = 103,
  [pbr::OriginalName("cmd_update_userinfo_a")] CmdUpdateUserinfoA = 104,
  [pbr::OriginalName("cmd_get_user_setting_r")] CmdGetUserSettingR = 105,
  [pbr::OriginalName("cmd_get_user_setting_a")] CmdGetUserSettingA = 106,
  [pbr::OriginalName("cmd_update_user_setting_r")] CmdUpdateUserSettingR = 107,
  [pbr::OriginalName("cmd_update_user_setting_a")] CmdUpdateUserSettingA = 108,
  [pbr::OriginalName("cmd_get_ranklist_r")] CmdGetRanklistR = 109,
  [pbr::OriginalName("cmd_get_ranklist_a")] CmdGetRanklistA = 110,
  [pbr::OriginalName("cmd_get_display_userinfo_r")] CmdGetDisplayUserinfoR = 111,
  [pbr::OriginalName("cmd_get_display_userinfo_a")] CmdGetDisplayUserinfoA = 112,
  [pbr::OriginalName("cmd_create_class_r")] CmdCreateClassR = 201,
  [pbr::OriginalName("cmd_create_class_a")] CmdCreateClassA = 202,
  [pbr::OriginalName("cmd_quite_class_r")] CmdQuiteClassR = 205,
  [pbr::OriginalName("cmd_quite_class_a")] CmdQuiteClassA = 206,
  [pbr::OriginalName("cmd_update_classinfo_r")] CmdUpdateClassinfoR = 207,
  [pbr::OriginalName("cmd_update_classinfo_a")] CmdUpdateClassinfoA = 208,
  [pbr::OriginalName("cmd_get_classinfo_r")] CmdGetClassinfoR = 209,
  [pbr::OriginalName("cmd_get_classinfo_a")] CmdGetClassinfoA = 210,
  [pbr::OriginalName("cmd_del_class_r")] CmdDelClassR = 211,
  [pbr::OriginalName("cmd_del_class_a")] CmdDelClassA = 212,
  [pbr::OriginalName("cmd_recommand_class_r")] CmdRecommandClassR = 213,
  [pbr::OriginalName("cmd_recommand_class_a")] CmdRecommandClassA = 214,
  [pbr::OriginalName("cmd_add_class_member_r")] CmdAddClassMemberR = 215,
  [pbr::OriginalName("cmd_add_class_member_a")] CmdAddClassMemberA = 216,
  [pbr::OriginalName("cmd_del_class_member_r")] CmdDelClassMemberR = 217,
  [pbr::OriginalName("cmd_del_class_member_a")] CmdDelClassMemberA = 218,
  [pbr::OriginalName("cmd_classinfo_updated")] CmdClassinfoUpdated = 220,
  [pbr::OriginalName("cmd_class_deleted")] CmdClassDeleted = 222,
  [pbr::OriginalName("cmd_class_member_add")] CmdClassMemberAdd = 224,
  [pbr::OriginalName("cmd_class_member_leave")] CmdClassMemberLeave = 226,
  [pbr::OriginalName("cmd_create_task_r")] CmdCreateTaskR = 251,
  [pbr::OriginalName("cmd_create_task_a")] CmdCreateTaskA = 252,
  [pbr::OriginalName("cmd_update_task_r")] CmdUpdateTaskR = 253,
  [pbr::OriginalName("cmd_update_task_a")] CmdUpdateTaskA = 254,
  [pbr::OriginalName("cmd_del_task_r")] CmdDelTaskR = 255,
  [pbr::OriginalName("cmd_del_task_a")] CmdDelTaskA = 256,
  [pbr::OriginalName("cmd_submit_task_r")] CmdSubmitTaskR = 257,
  [pbr::OriginalName("cmd_submit_task_a")] CmdSubmitTaskA = 258,
  [pbr::OriginalName("cmd_grade_task_r")] CmdGradeTaskR = 259,
  [pbr::OriginalName("cmd_grade_task_a")] CmdGradeTaskA = 260,
  [pbr::OriginalName("cmd_get_task_info_r")] CmdGetTaskInfoR = 261,
  [pbr::OriginalName("cmd_get_task_info_a")] CmdGetTaskInfoA = 262,
  [pbr::OriginalName("cmd_task_created")] CmdTaskCreated = 264,
  [pbr::OriginalName("cmd_task_updated")] CmdTaskUpdated = 266,
  [pbr::OriginalName("cmd_task_deleted")] CmdTaskDeleted = 268,
  [pbr::OriginalName("cmd_task_submited")] CmdTaskSubmited = 270,
  [pbr::OriginalName("cmd_task_graded")] CmdTaskGraded = 272,
  [pbr::OriginalName("cmd_del_submit_r")] CmdDelSubmitR = 273,
  [pbr::OriginalName("cmd_del_submit_a")] CmdDelSubmitA = 274,
  [pbr::OriginalName("cmd_submit_deleted")] CmdSubmitDeleted = 276,
  [pbr::OriginalName("cmd_modify_task_attach_r")] CmdModifyTaskAttachR = 277,
  [pbr::OriginalName("cmd_modify_task_attach_a")] CmdModifyTaskAttachA = 278,
  [pbr::OriginalName("cmd_del_task_attach_r")] CmdDelTaskAttachR = 279,
  [pbr::OriginalName("cmd_del_task_attach_a")] CmdDelTaskAttachA = 280,
  [pbr::OriginalName("cmd_add_task_attach_r")] CmdAddTaskAttachR = 281,
  [pbr::OriginalName("cmd_add_task_attach_a")] CmdAddTaskAttachA = 282,
  [pbr::OriginalName("cmd_add_friend_r")] CmdAddFriendR = 301,
  [pbr::OriginalName("cmd_add_friend_a")] CmdAddFriendA = 302,
  [pbr::OriginalName("cmd_get_maillist_r")] CmdGetMaillistR = 401,
  [pbr::OriginalName("cmd_get_maillist_a")] CmdGetMaillistA = 402,
  [pbr::OriginalName("cmd_read_mail_r")] CmdReadMailR = 403,
  [pbr::OriginalName("cmd_read_mail_a")] CmdReadMailA = 404,
  [pbr::OriginalName("cmd_del_mail_r")] CmdDelMailR = 405,
  [pbr::OriginalName("cmd_del_mail_a")] CmdDelMailA = 406,
  [pbr::OriginalName("cmd_send_mail_r")] CmdSendMailR = 407,
  [pbr::OriginalName("cmd_send_mail_a")] CmdSendMailA = 408,
  [pbr::OriginalName("cmd_new_mail_notify")] CmdNewMailNotify = 410,
  [pbr::OriginalName("cmd_create_gameboard_r")] CmdCreateGameboardR = 501,
  [pbr::OriginalName("cmd_create_gameboard_a")] CmdCreateGameboardA = 502,
  [pbr::OriginalName("cmd_modify_gameboard_r")] CmdModifyGameboardR = 503,
  [pbr::OriginalName("cmd_modify_gameboard_a")] CmdModifyGameboardA = 504,
  [pbr::OriginalName("cmd_del_gameboard_r")] CmdDelGameboardR = 505,
  [pbr::OriginalName("cmd_del_gameboard_a")] CmdDelGameboardA = 506,
  [pbr::OriginalName("cmd_get_gameboard_r")] CmdGetGameboardR = 507,
  [pbr::OriginalName("cmd_get_gameboard_a")] CmdGetGameboardA = 508,
  [pbr::OriginalName("cmd_get_gameboardlist_r")] CmdGetGameboardlistR = 509,
  [pbr::OriginalName("cmd_get_gameboardlist_a")] CmdGetGameboardlistA = 510,
  [pbr::OriginalName("cmd_answer_gameboard_r")] CmdAnswerGameboardR = 511,
  [pbr::OriginalName("cmd_answer_gameboard_a")] CmdAnswerGameboardA = 512,
  [pbr::OriginalName("cmd_like_gameboard_r")] CmdLikeGameboardR = 513,
  [pbr::OriginalName("cmd_like_gameboard_a")] CmdLikeGameboardA = 514,
  /// <summary>
  /// 服务器内部命令
  /// </summary>
  [pbr::OriginalName("cmd_download_gameboard_r")] CmdDownloadGameboardR = 515,
  [pbr::OriginalName("cmd_download_gameboard_a")] CmdDownloadGameboardA = 516,
  [pbr::OriginalName("cmd_grade_gameboard_r")] CmdGradeGameboardR = 517,
  [pbr::OriginalName("cmd_grade_gameboard_a")] CmdGradeGameboardA = 518,
  [pbr::OriginalName("cmd_del_gameboard_answer_r")] CmdDelGameboardAnswerR = 519,
  [pbr::OriginalName("cmd_del_gameboard_answer_a")] CmdDelGameboardAnswerA = 520,
  [pbr::OriginalName("cmd_create_pk_r")] CmdCreatePkR = 601,
  [pbr::OriginalName("cmd_create_pk_a")] CmdCreatePkA = 602,
  [pbr::OriginalName("cmd_modify_pk_r")] CmdModifyPkR = 603,
  [pbr::OriginalName("cmd_modify_pk_a")] CmdModifyPkA = 604,
  [pbr::OriginalName("cmd_del_pk_r")] CmdDelPkR = 605,
  [pbr::OriginalName("cmd_del_pk_a")] CmdDelPkA = 606,
  [pbr::OriginalName("cmd_get_pk_r")] CmdGetPkR = 607,
  [pbr::OriginalName("cmd_get_pk_a")] CmdGetPkA = 608,
  [pbr::OriginalName("cmd_get_pklist_r")] CmdGetPklistR = 609,
  [pbr::OriginalName("cmd_get_pklist_a")] CmdGetPklistA = 610,
  [pbr::OriginalName("cmd_answer_pk_r")] CmdAnswerPkR = 611,
  [pbr::OriginalName("cmd_answer_pk_a")] CmdAnswerPkA = 612,
  [pbr::OriginalName("cmd_like_pk_r")] CmdLikePkR = 613,
  [pbr::OriginalName("cmd_like_pk_a")] CmdLikePkA = 614,
  [pbr::OriginalName("cmd_download_pk_r")] CmdDownloadPkR = 615,
  [pbr::OriginalName("cmd_download_pk_a")] CmdDownloadPkA = 616,
  [pbr::OriginalName("cmd_pk_r")] CmdPkR = 617,
  [pbr::OriginalName("cmd_pk_a")] CmdPkA = 618,
  [pbr::OriginalName("cmd_del_pk_answer_r")] CmdDelPkAnswerR = 619,
  [pbr::OriginalName("cmd_del_pk_answer_a")] CmdDelPkAnswerA = 620,
  [pbr::OriginalName("cmd_create_course_r")] CmdCreateCourseR = 701,
  [pbr::OriginalName("cmd_create_course_a")] CmdCreateCourseA = 702,
  [pbr::OriginalName("cmd_modify_course_r")] CmdModifyCourseR = 703,
  [pbr::OriginalName("cmd_modify_course_a")] CmdModifyCourseA = 704,
  [pbr::OriginalName("cmd_del_course_r")] CmdDelCourseR = 705,
  [pbr::OriginalName("cmd_del_course_a")] CmdDelCourseA = 706,
  [pbr::OriginalName("cmd_get_course_list_r")] CmdGetCourseListR = 707,
  [pbr::OriginalName("cmd_get_course_list_a")] CmdGetCourseListA = 708,
  [pbr::OriginalName("cmd_add_period_r")] CmdAddPeriodR = 709,
  [pbr::OriginalName("cmd_add_period_a")] CmdAddPeriodA = 710,
  [pbr::OriginalName("cmd_modify_period_r")] CmdModifyPeriodR = 711,
  [pbr::OriginalName("cmd_modify_period_a")] CmdModifyPeriodA = 712,
  [pbr::OriginalName("cmd_del_period_r")] CmdDelPeriodR = 713,
  [pbr::OriginalName("cmd_del_period_a")] CmdDelPeriodA = 714,
  [pbr::OriginalName("cmd_approve_course_r")] CmdApproveCourseR = 715,
  [pbr::OriginalName("cmd_approve_course_a")] CmdApproveCourseA = 716,
  [pbr::OriginalName("cmd_set_course_status_r")] CmdSetCourseStatusR = 717,
  [pbr::OriginalName("cmd_set_course_status_a")] CmdSetCourseStatusA = 718,
  [pbr::OriginalName("cmd_answer_perioditem_r")] CmdAnswerPerioditemR = 719,
  [pbr::OriginalName("cmd_answer_perioditem_a")] CmdAnswerPerioditemA = 720,
  [pbr::OriginalName("cmd_add_perioditem_r")] CmdAddPerioditemR = 721,
  [pbr::OriginalName("cmd_add_perioditem_a")] CmdAddPerioditemA = 722,
  [pbr::OriginalName("cmd_modify_perioditem_r")] CmdModifyPerioditemR = 723,
  [pbr::OriginalName("cmd_modify_perioditem_a")] CmdModifyPerioditemA = 724,
  [pbr::OriginalName("cmd_del_perioditem_r")] CmdDelPerioditemR = 725,
  [pbr::OriginalName("cmd_del_perioditem_a")] CmdDelPerioditemA = 726,
  [pbr::OriginalName("cmd_score_perioditem_r")] CmdScorePerioditemR = 727,
  [pbr::OriginalName("cmd_score_perioditem_a")] CmdScorePerioditemA = 728,
  [pbr::OriginalName("cmd_buy_course_r")] CmdBuyCourseR = 729,
  [pbr::OriginalName("cmd_buy_course_a")] CmdBuyCourseA = 730,
  [pbr::OriginalName("cmd_set_peroditem_status_r")] CmdSetPeroditemStatusR = 731,
  [pbr::OriginalName("cmd_set_peroditem_status_a")] CmdSetPeroditemStatusA = 732,
  [pbr::OriginalName("cmd_get_course_password_r")] CmdGetCoursePasswordR = 733,
  [pbr::OriginalName("cmd_get_course_password_a")] CmdGetCoursePasswordA = 734,
  [pbr::OriginalName("cmd_del_perioditem_answer_r")] CmdDelPerioditemAnswerR = 735,
  [pbr::OriginalName("cmd_del_perioditem_answer_a")] CmdDelPerioditemAnswerA = 736,
  [pbr::OriginalName("cmd_course_status_change_notify")] CmdCourseStatusChangeNotify = 738,
  [pbr::OriginalName("cmd_end_course_r")] CmdEndCourseR = 739,
  [pbr::OriginalName("cmd_end_course_a")] CmdEndCourseA = 740,
  [pbr::OriginalName("cmd_get_honorwall_r")] CmdGetHonorwallR = 801,
  [pbr::OriginalName("cmd_get_honorwall_a")] CmdGetHonorwallA = 802,
  [pbr::OriginalName("cmd_get_new_honorwall_r")] CmdGetNewHonorwallR = 803,
  [pbr::OriginalName("cmd_get_new_honorwall_a")] CmdGetNewHonorwallA = 804,
  [pbr::OriginalName("cmd_update_honorwall_state_r")] CmdUpdateHonorwallStateR = 805,
  [pbr::OriginalName("cmd_update_honorwall_state_a")] CmdUpdateHonorwallStateA = 806,
  [pbr::OriginalName("cmd_get_honorwall_rank_r")] CmdGetHonorwallRankR = 807,
  [pbr::OriginalName("cmd_get_honorwall_rank_a")] CmdGetHonorwallRankA = 808,
  [pbr::OriginalName("cmd_set_course_trophy_setting_r")] CmdSetCourseTrophySettingR = 851,
  [pbr::OriginalName("cmd_set_course_trophy_setting_a")] CmdSetCourseTrophySettingA = 852,
  [pbr::OriginalName("cmd_get_course_trophy_setting_r")] CmdGetCourseTrophySettingR = 853,
  [pbr::OriginalName("cmd_get_course_trophy_setting_a")] CmdGetCourseTrophySettingA = 854,
  [pbr::OriginalName("cmd_set_course_certificate_setting_r")] CmdSetCourseCertificateSettingR = 855,
  [pbr::OriginalName("cmd_set_course_certificate_setting_a")] CmdSetCourseCertificateSettingA = 856,
  [pbr::OriginalName("cmd_get_course_certificate_setting_r")] CmdGetCourseCertificateSettingR = 857,
  [pbr::OriginalName("cmd_get_course_certificate_setting_a")] CmdGetCourseCertificateSettingA = 858,
  [pbr::OriginalName("cmd_del_course_trophy_setting_r")] CmdDelCourseTrophySettingR = 859,
  [pbr::OriginalName("cmd_del_course_trophy_setting_a")] CmdDelCourseTrophySettingA = 860,
  [pbr::OriginalName("cmd_del_course_certificate_setting_r")] CmdDelCourseCertificateSettingR = 861,
  [pbr::OriginalName("cmd_del_course_certificate_setting_a")] CmdDelCourseCertificateSettingA = 862,
  [pbr::OriginalName("cmd_new_honor_notify")] CmdNewHonorNotify = 864,
  [pbr::OriginalName("cmd_modify_unique_attach_r")] CmdModifyUniqueAttachR = 901,
  [pbr::OriginalName("cmd_modify_unique_attach_a")] CmdModifyUniqueAttachA = 902,
  [pbr::OriginalName("cmd_del_unique_attach_r")] CmdDelUniqueAttachR = 903,
  [pbr::OriginalName("cmd_del_unique_attach_a")] CmdDelUniqueAttachA = 904,
  [pbr::OriginalName("cmd_add_unique_attach_r")] CmdAddUniqueAttachR = 905,
  [pbr::OriginalName("cmd_add_unique_attach_a")] CmdAddUniqueAttachA = 906,
  [pbr::OriginalName("cmd_get_unique_attach_r")] CmdGetUniqueAttachR = 907,
  [pbr::OriginalName("cmd_get_unique_attach_a")] CmdGetUniqueAttachA = 908,
  [pbr::OriginalName("cmd_create_topic_r")] CmdCreateTopicR = 951,
  [pbr::OriginalName("cmd_create_topic_a")] CmdCreateTopicA = 952,
  [pbr::OriginalName("cmd_modify_topic_r")] CmdModifyTopicR = 953,
  [pbr::OriginalName("cmd_modify_topic_a")] CmdModifyTopicA = 954,
  [pbr::OriginalName("cmd_del_topic_r")] CmdDelTopicR = 955,
  [pbr::OriginalName("cmd_del_topic_a")] CmdDelTopicA = 956,
  [pbr::OriginalName("cmd_get_topic_list_r")] CmdGetTopicListR = 957,
  [pbr::OriginalName("cmd_get_topic_list_a")] CmdGetTopicListA = 958,
  [pbr::OriginalName("cmd_approve_topic_r")] CmdApproveTopicR = 959,
  [pbr::OriginalName("cmd_approve_topic_a")] CmdApproveTopicA = 960,
  [pbr::OriginalName("cmd_set_topic_status_r")] CmdSetTopicStatusR = 961,
  [pbr::OriginalName("cmd_set_topic_status_a")] CmdSetTopicStatusA = 962,
  [pbr::OriginalName("cmd_buy_topic_r")] CmdBuyTopicR = 963,
  [pbr::OriginalName("cmd_buy_topic_a")] CmdBuyTopicA = 964,
  [pbr::OriginalName("cmd_get_topic_password_r")] CmdGetTopicPasswordR = 965,
  [pbr::OriginalName("cmd_get_topic_password_a")] CmdGetTopicPasswordA = 966,
  [pbr::OriginalName("cmd_topic_status_change_notify")] CmdTopicStatusChangeNotify = 968,
  [pbr::OriginalName("cmd_download_topic_r")] CmdDownloadTopicR = 969,
  [pbr::OriginalName("cmd_download_topic_a")] CmdDownloadTopicA = 970,
  [pbr::OriginalName("cmd_shareddata_publish_r")] CmdShareddataPublishR = 1001,
  [pbr::OriginalName("cmd_shareddata_publish_a")] CmdShareddataPublishA = 1002,
  [pbr::OriginalName("cmd_shareddata_update_r")] CmdShareddataUpdateR = 1003,
  [pbr::OriginalName("cmd_shareddata_update_a")] CmdShareddataUpdateA = 1004,
  [pbr::OriginalName("cmd_shareddata_del_r")] CmdShareddataDelR = 1005,
  [pbr::OriginalName("cmd_shareddata_del_a")] CmdShareddataDelA = 1006,
  [pbr::OriginalName("cmd_shareddata_download_r")] CmdShareddataDownloadR = 1007,
  [pbr::OriginalName("cmd_shareddata_download_a")] CmdShareddataDownloadA = 1008,
  [pbr::OriginalName("cmd_shareddata_getlist_r")] CmdShareddataGetlistR = 1009,
  [pbr::OriginalName("cmd_shareddata_getlist_a")] CmdShareddataGetlistA = 1010,
  [pbr::OriginalName("cmd_shareddata_createdir_r")] CmdShareddataCreatedirR = 1011,
  [pbr::OriginalName("cmd_shareddata_createdir_a")] CmdShareddataCreatedirA = 1012,
  [pbr::OriginalName("cmd_shateddata_check_pw_r")] CmdShateddataCheckPwR = 1013,
  [pbr::OriginalName("cmd_shateddata_check_pw_a")] CmdShateddataCheckPwA = 1014,
}

public enum Command_Result {
  [pbr::OriginalName("cmd_no_error")] CmdNoError = 0,
  [pbr::OriginalName("cmd_reg_name_exist")] CmdRegNameExist = 1,
  /// <summary>
  /// </summary>
  [pbr::OriginalName("cmd_auth_error")] CmdAuthError = 2,
  [pbr::OriginalName("cmd_user_not_found")] CmdUserNotFound = 3,
  [pbr::OriginalName("cmd_parameter_error")] CmdParameterError = 4,
  [pbr::OriginalName("cmd_reg_alread")] CmdRegAlread = 5,
  [pbr::OriginalName("cmd_class_alread_created")] CmdClassAlreadCreated = 6,
  [pbr::OriginalName("cmd_class_not_found")] CmdClassNotFound = 7,
  [pbr::OriginalName("cmd_task_alread_created")] CmdTaskAlreadCreated = 8,
  [pbr::OriginalName("cmd_task_not_found")] CmdTaskNotFound = 9,
  [pbr::OriginalName("cmd_class_not_teacher")] CmdClassNotTeacher = 10,
  [pbr::OriginalName("cmd_network_error")] CmdNetworkError = 11,
  [pbr::OriginalName("cmd_class_apply_alread")] CmdClassApplyAlread = 12,
  [pbr::OriginalName("cmd_user_not_in_class")] CmdUserNotInClass = 13,
  [pbr::OriginalName("cmd_class_not_student")] CmdClassNotStudent = 14,
  [pbr::OriginalName("cmd_class_joined_alread")] CmdClassJoinedAlread = 15,
  [pbr::OriginalName("cmd_submitid_not_found")] CmdSubmitidNotFound = 16,
  [pbr::OriginalName("cmd_coin_not_enough")] CmdCoinNotEnough = 17,
  [pbr::OriginalName("cmd_no_permission")] CmdNoPermission = 18,
  [pbr::OriginalName("cmd_submit_has_grade")] CmdSubmitHasGrade = 19,
  [pbr::OriginalName("cmd_submit_not_found")] CmdSubmitNotFound = 20,
  [pbr::OriginalName("cmd_password_wrong")] CmdPasswordWrong = 21,
  [pbr::OriginalName("cmd_cellphone_num_error")] CmdCellphoneNumError = 101,
  [pbr::OriginalName("cmd_cellphone_num_exist")] CmdCellphoneNumExist = 102,
  [pbr::OriginalName("cmd_invite_code_error")] CmdInviteCodeError = 103,
  [pbr::OriginalName("cmd_verification_code_error")] CmdVerificationCodeError = 104,
  [pbr::OriginalName("cmd_sms_error")] CmdSmsError = 105,
  [pbr::OriginalName("cmd_account_expired")] CmdAccountExpired = 106,
  [pbr::OriginalName("cmd_reset_password_count_limit")] CmdResetPasswordCountLimit = 107,
  [pbr::OriginalName("cmd_emaladdr_exist")] CmdEmaladdrExist = 108,
  [pbr::OriginalName("cmd_gameboard_create_error")] CmdGameboardCreateError = 200,
  [pbr::OriginalName("cmd_gb_name_error")] CmdGbNameError = 201,
  [pbr::OriginalName("cmd_gb_src_not_found")] CmdGbSrcNotFound = 202,
  [pbr::OriginalName("cmd_gb_name_exist")] CmdGbNameExist = 203,
  [pbr::OriginalName("cmd_gb_name_not_found")] CmdGbNameNotFound = 204,
  [pbr::OriginalName("cmd_gb_not_allow_repeat_answer")] CmdGbNotAllowRepeatAnswer = 205,
  [pbr::OriginalName("cmd_gb_not_found")] CmdGbNotFound = 206,
  [pbr::OriginalName("cmd_pk_create_error")] CmdPkCreateError = 300,
  [pbr::OriginalName("cmd_pk_name_error")] CmdPkNameError = 301,
  [pbr::OriginalName("cmd_pk_src_not_found")] CmdPkSrcNotFound = 302,
  [pbr::OriginalName("cmd_pk_name_exist")] CmdPkNameExist = 303,
  [pbr::OriginalName("cmd_pk_name_not_found")] CmdPkNameNotFound = 304,
  [pbr::OriginalName("cmd_pk_not_found")] CmdPkNotFound = 305,
  [pbr::OriginalName("cmd_pk_not_allow_repeat_answer")] CmdPkNotAllowRepeatAnswer = 306,
  [pbr::OriginalName("cmd_course_not_found")] CmdCourseNotFound = 400,
  [pbr::OriginalName("cmd_course_password_wrong")] CmdCoursePasswordWrong = 401,
  [pbr::OriginalName("cmd_attach_not_found")] CmdAttachNotFound = 450,
  [pbr::OriginalName("cmd_topic_not_found")] CmdTopicNotFound = 500,
  [pbr::OriginalName("cmd_topic_password_wrong")] CmdTopicPasswordWrong = 501,
}

public enum GetShared_Type {
  [pbr::OriginalName("get_self")] GetSelf = 0,
  [pbr::OriginalName("get_all")] GetAll = 1,
}

public enum Get_Part_Of_Userinfo {
  [pbr::OriginalName("Classinfo_Part")] ClassinfoPart = 0,
}

public enum GBSort_Type {
  [pbr::OriginalName("ST_None")] StNone = 0,
  [pbr::OriginalName("ST_Data")] StData = 1,
  [pbr::OriginalName("ST_Sence")] StSence = 2,
  [pbr::OriginalName("ST_Name")] StName = 4,
  [pbr::OriginalName("ST_Download")] StDownload = 8,
  [pbr::OriginalName("ST_Answer")] StAnswer = 16,
  [pbr::OriginalName("ST_Like")] StLike = 32,
}

public enum PKSort_Type {
  [pbr::OriginalName("PK_ST_None")] PkStNone = 0,
  [pbr::OriginalName("PK_ST_Data")] PkStData = 1,
  [pbr::OriginalName("PK_ST_Sence")] PkStSence = 2,
  [pbr::OriginalName("PK_ST_Name")] PkStName = 4,
  [pbr::OriginalName("PK_ST_Download")] PkStDownload = 8,
  [pbr::OriginalName("PK_ST_Answer")] PkStAnswer = 16,
  [pbr::OriginalName("PK_ST_Like")] PkStLike = 32,
}

public enum Course_Race_Type {
  [pbr::OriginalName("CRT_None")] CrtNone = 0,
  [pbr::OriginalName("CRT_Ranked_Match")] CrtRankedMatch = 1,
  [pbr::OriginalName("CRT_Regular_Season")] CrtRegularSeason = 2,
}

public enum Period_Item_Type {
  [pbr::OriginalName("item_doc")] ItemDoc = 0,
  [pbr::OriginalName("item_image")] ItemImage = 1,
  [pbr::OriginalName("item_video")] ItemVideo = 2,
  [pbr::OriginalName("item_gb")] ItemGb = 3,
  [pbr::OriginalName("item_project")] ItemProject = 4,
  [pbr::OriginalName("item_gb_play")] ItemGbPlay = 5,
}

public enum Course_Status {
  [pbr::OriginalName("course_status_commit")] Commit = 0,
  [pbr::OriginalName("course_status_preview")] Preview = 1,
  /// <summary>
  /// 发布到 公开赛
  /// </summary>
  [pbr::OriginalName("course_status_publish")] Publish = 2,
  /// <summary>
  /// 发布到 邀请赛
  /// </summary>
  [pbr::OriginalName("course_status_test")] Test = 3,
  [pbr::OriginalName("course_status_waitfor_publish")] WaitforPublish = 4,
  /// <summary>
  /// 邀请赛历史
  /// </summary>
  [pbr::OriginalName("course_status_test_close")] TestClose = 8,
  /// <summary>
  /// 公开赛历史
  /// </summary>
  [pbr::OriginalName("course_status_closed")] Closed = 9,
  [pbr::OriginalName("course_status_del")] Del = 10,
}

public enum GetCourseListType {
  [pbr::OriginalName("get_course_all")] GetCourseAll = 0,
  [pbr::OriginalName("get_course_myself")] GetCourseMyself = 1,
  /// <summary>
  /// 公开赛进行中
  /// </summary>
  [pbr::OriginalName("get_course_published")] GetCoursePublished = 2,
  [pbr::OriginalName("get_course_review")] GetCourseReview = 4,
  [pbr::OriginalName("get_course_byname")] GetCourseByname = 8,
  /// <summary>
  /// 邀请赛进行中
  /// </summary>
  [pbr::OriginalName("get_course_test")] GetCourseTest = 16,
  /// <summary>
  /// 公开赛历史
  /// </summary>
  [pbr::OriginalName("get_course_closed")] GetCourseClosed = 32,
  [pbr::OriginalName("get_course_waitforpublish")] GetCourseWaitforpublish = 64,
  [pbr::OriginalName("get_course_myself_published")] GetCourseMyselfPublished = 128,
  [pbr::OriginalName("get_course_published_myself")] GetCoursePublishedMyself = 256,
  [pbr::OriginalName("get_course_published_joined")] GetCoursePublishedJoined = 512,
  [pbr::OriginalName("get_course_draft")] GetCourseDraft = 1024,
  [pbr::OriginalName("get_course_invited_myself")] GetCourseInvitedMyself = 2048,
  [pbr::OriginalName("get_course_invited_joined")] GetCourseInvitedJoined = 4096,
  [pbr::OriginalName("get_course_published_new")] GetCoursePublishedNew = 8192,
  /// <summary>
  /// 邀请赛历史
  /// </summary>
  [pbr::OriginalName("get_course_test_history")] GetCourseTestHistory = 32768,
}

public enum Trophy_Type {
  [pbr::OriginalName("TT_None")] TtNone = 0,
  [pbr::OriginalName("TT_Gold")] TtGold = 1,
  [pbr::OriginalName("TT_Silver")] TtSilver = 2,
  [pbr::OriginalName("TT_Bronze")] TtBronze = 3,
}

public enum GetHonorwallType {
  [pbr::OriginalName("GHT_Trophy")] GhtTrophy = 0,
  [pbr::OriginalName("GHT_Certificate")] GhtCertificate = 1,
  [pbr::OriginalName("GHT_Class")] GhtClass = 2,
  [pbr::OriginalName("GHT_ALL")] GhtAll = 4,
}

public enum Shared_Type {
  [pbr::OriginalName("shared_gb")] SharedGb = 0,
}

public enum Shared_Status {
  [pbr::OriginalName("Shared_Status_Public")] Public = 0,
  [pbr::OriginalName("Shared_Status_Invite")] Invite = 1,
  [pbr::OriginalName("Shared_Status_Del")] Del = 10,
}

#endregion

#region Messages
public sealed partial class MultiFileList : pb::IMessage<MultiFileList> {
  private static readonly pb::MessageParser<MultiFileList> _parser = new pb::MessageParser<MultiFileList>(() => new MultiFileList());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MultiFileList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiFileList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiFileList(MultiFileList other) : this() {
    fileLists_ = other.fileLists_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiFileList Clone() {
    return new MultiFileList(this);
  }

  /// <summary>Field number for the "file_lists" field.</summary>
  public const int FileListsFieldNumber = 1;
  private static readonly pbc::MapField<string, global::FileList>.Codec _map_fileLists_codec
      = new pbc::MapField<string, global::FileList>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::FileList.Parser), 10);
  private readonly pbc::MapField<string, global::FileList> fileLists_ = new pbc::MapField<string, global::FileList>();
  /// <summary>
  /// tag - files
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, global::FileList> FileLists {
    get { return fileLists_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MultiFileList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MultiFileList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!FileLists.Equals(other.FileLists)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= FileLists.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    fileLists_.WriteTo(output, _map_fileLists_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += fileLists_.CalculateSize(_map_fileLists_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MultiFileList other) {
    if (other == null) {
      return;
    }
    fileLists_.Add(other.fileLists_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          fileLists_.AddEntriesFrom(input, _map_fileLists_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GetProjectListReq_V3 : pb::IMessage<GetProjectListReq_V3> {
  private static readonly pb::MessageParser<GetProjectListReq_V3> _parser = new pb::MessageParser<GetProjectListReq_V3>(() => new GetProjectListReq_V3());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetProjectListReq_V3> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectListReq_V3() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectListReq_V3(GetProjectListReq_V3 other) : this() {
    reqRoot_ = other.reqRoot_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectListReq_V3 Clone() {
    return new GetProjectListReq_V3(this);
  }

  /// <summary>Field number for the "req_root" field.</summary>
  public const int ReqRootFieldNumber = 1;
  private global::FileList_Root_Type reqRoot_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList_Root_Type ReqRoot {
    get { return reqRoot_; }
    set {
      reqRoot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetProjectListReq_V3);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetProjectListReq_V3 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqRoot != other.ReqRoot) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqRoot != 0) hash ^= ReqRoot.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqRoot != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ReqRoot);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqRoot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqRoot);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetProjectListReq_V3 other) {
    if (other == null) {
      return;
    }
    if (other.ReqRoot != 0) {
      ReqRoot = other.ReqRoot;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          reqRoot_ = (global::FileList_Root_Type) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class UploadFileList_V3 : pb::IMessage<UploadFileList_V3> {
  private static readonly pb::MessageParser<UploadFileList_V3> _parser = new pb::MessageParser<UploadFileList_V3>(() => new UploadFileList_V3());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UploadFileList_V3> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadFileList_V3() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadFileList_V3(UploadFileList_V3 other) : this() {
    listRoot_ = other.listRoot_;
    Files = other.files_ != null ? other.Files.Clone() : null;
    projectTag_ = other.projectTag_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadFileList_V3 Clone() {
    return new UploadFileList_V3(this);
  }

  /// <summary>Field number for the "list_root" field.</summary>
  public const int ListRootFieldNumber = 1;
  private global::FileList_Root_Type listRoot_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList_Root_Type ListRoot {
    get { return listRoot_; }
    set {
      listRoot_ = value;
    }
  }

  /// <summary>Field number for the "files" field.</summary>
  public const int FilesFieldNumber = 2;
  private global::FileList files_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList Files {
    get { return files_; }
    set {
      files_ = value;
    }
  }

  /// <summary>Field number for the "project_tag" field.</summary>
  public const int ProjectTagFieldNumber = 3;
  private string projectTag_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectTag {
    get { return projectTag_; }
    set {
      projectTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UploadFileList_V3);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UploadFileList_V3 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ListRoot != other.ListRoot) return false;
    if (!object.Equals(Files, other.Files)) return false;
    if (ProjectTag != other.ProjectTag) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ListRoot != 0) hash ^= ListRoot.GetHashCode();
    if (files_ != null) hash ^= Files.GetHashCode();
    if (ProjectTag.Length != 0) hash ^= ProjectTag.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ListRoot != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ListRoot);
    }
    if (files_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Files);
    }
    if (ProjectTag.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ProjectTag);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ListRoot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ListRoot);
    }
    if (files_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Files);
    }
    if (ProjectTag.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectTag);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UploadFileList_V3 other) {
    if (other == null) {
      return;
    }
    if (other.ListRoot != 0) {
      ListRoot = other.ListRoot;
    }
    if (other.files_ != null) {
      if (files_ == null) {
        files_ = new global::FileList();
      }
      Files.MergeFrom(other.Files);
    }
    if (other.ProjectTag.Length != 0) {
      ProjectTag = other.ProjectTag;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          listRoot_ = (global::FileList_Root_Type) input.ReadEnum();
          break;
        }
        case 18: {
          if (files_ == null) {
            files_ = new global::FileList();
          }
          input.ReadMessage(files_);
          break;
        }
        case 26: {
          ProjectTag = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class DownloadDirt_V3 : pb::IMessage<DownloadDirt_V3> {
  private static readonly pb::MessageParser<DownloadDirt_V3> _parser = new pb::MessageParser<DownloadDirt_V3>(() => new DownloadDirt_V3());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DownloadDirt_V3> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadDirt_V3() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadDirt_V3(DownloadDirt_V3 other) : this() {
    projectFullpath_ = other.projectFullpath_;
    saveAsGraphyProjectName_ = other.saveAsGraphyProjectName_;
    saveAsPythonProjectName_ = other.saveAsPythonProjectName_;
    saveAsGraphyGbName_ = other.saveAsGraphyGbName_;
    saveAsPythonGbName_ = other.saveAsPythonGbName_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadDirt_V3 Clone() {
    return new DownloadDirt_V3(this);
  }

  /// <summary>Field number for the "project_fullpath" field.</summary>
  public const int ProjectFullpathFieldNumber = 1;
  private string projectFullpath_ = "";
  /// <summary>
  /// download/xxx...xxx/base64(project_name)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectFullpath {
    get { return projectFullpath_; }
    set {
      projectFullpath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "save_as_graphy_project_name" field.</summary>
  public const int SaveAsGraphyProjectNameFieldNumber = 3;
  private string saveAsGraphyProjectName_ = "";
  /// <summary>
  ///  save to self project directory
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SaveAsGraphyProjectName {
    get { return saveAsGraphyProjectName_; }
    set {
      saveAsGraphyProjectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "save_as_python_project_name" field.</summary>
  public const int SaveAsPythonProjectNameFieldNumber = 4;
  private string saveAsPythonProjectName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SaveAsPythonProjectName {
    get { return saveAsPythonProjectName_; }
    set {
      saveAsPythonProjectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "save_as_graphy_gb_name" field.</summary>
  public const int SaveAsGraphyGbNameFieldNumber = 5;
  private string saveAsGraphyGbName_ = "";
  /// <summary>
  ///  save to self gb directory
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SaveAsGraphyGbName {
    get { return saveAsGraphyGbName_; }
    set {
      saveAsGraphyGbName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "save_as_python_gb_name" field.</summary>
  public const int SaveAsPythonGbNameFieldNumber = 6;
  private string saveAsPythonGbName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SaveAsPythonGbName {
    get { return saveAsPythonGbName_; }
    set {
      saveAsPythonGbName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DownloadDirt_V3);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DownloadDirt_V3 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProjectFullpath != other.ProjectFullpath) return false;
    if (SaveAsGraphyProjectName != other.SaveAsGraphyProjectName) return false;
    if (SaveAsPythonProjectName != other.SaveAsPythonProjectName) return false;
    if (SaveAsGraphyGbName != other.SaveAsGraphyGbName) return false;
    if (SaveAsPythonGbName != other.SaveAsPythonGbName) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProjectFullpath.Length != 0) hash ^= ProjectFullpath.GetHashCode();
    if (SaveAsGraphyProjectName.Length != 0) hash ^= SaveAsGraphyProjectName.GetHashCode();
    if (SaveAsPythonProjectName.Length != 0) hash ^= SaveAsPythonProjectName.GetHashCode();
    if (SaveAsGraphyGbName.Length != 0) hash ^= SaveAsGraphyGbName.GetHashCode();
    if (SaveAsPythonGbName.Length != 0) hash ^= SaveAsPythonGbName.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProjectFullpath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ProjectFullpath);
    }
    if (SaveAsGraphyProjectName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(SaveAsGraphyProjectName);
    }
    if (SaveAsPythonProjectName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(SaveAsPythonProjectName);
    }
    if (SaveAsGraphyGbName.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(SaveAsGraphyGbName);
    }
    if (SaveAsPythonGbName.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(SaveAsPythonGbName);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProjectFullpath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectFullpath);
    }
    if (SaveAsGraphyProjectName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SaveAsGraphyProjectName);
    }
    if (SaveAsPythonProjectName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SaveAsPythonProjectName);
    }
    if (SaveAsGraphyGbName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SaveAsGraphyGbName);
    }
    if (SaveAsPythonGbName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SaveAsPythonGbName);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DownloadDirt_V3 other) {
    if (other == null) {
      return;
    }
    if (other.ProjectFullpath.Length != 0) {
      ProjectFullpath = other.ProjectFullpath;
    }
    if (other.SaveAsGraphyProjectName.Length != 0) {
      SaveAsGraphyProjectName = other.SaveAsGraphyProjectName;
    }
    if (other.SaveAsPythonProjectName.Length != 0) {
      SaveAsPythonProjectName = other.SaveAsPythonProjectName;
    }
    if (other.SaveAsGraphyGbName.Length != 0) {
      SaveAsGraphyGbName = other.SaveAsGraphyGbName;
    }
    if (other.SaveAsPythonGbName.Length != 0) {
      SaveAsPythonGbName = other.SaveAsPythonGbName;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ProjectFullpath = input.ReadString();
          break;
        }
        case 26: {
          SaveAsGraphyProjectName = input.ReadString();
          break;
        }
        case 34: {
          SaveAsPythonProjectName = input.ReadString();
          break;
        }
        case 42: {
          SaveAsGraphyGbName = input.ReadString();
          break;
        }
        case 50: {
          SaveAsPythonGbName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class CopyDir_V3 : pb::IMessage<CopyDir_V3> {
  private static readonly pb::MessageParser<CopyDir_V3> _parser = new pb::MessageParser<CopyDir_V3>(() => new CopyDir_V3());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CopyDir_V3> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CopyDir_V3() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CopyDir_V3(CopyDir_V3 other) : this() {
    projectSrc_ = other.projectSrc_;
    desRoot_ = other.desRoot_;
    desName_ = other.desName_;
    desTag_ = other.desTag_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CopyDir_V3 Clone() {
    return new CopyDir_V3(this);
  }

  /// <summary>Field number for the "project_src" field.</summary>
  public const int ProjectSrcFieldNumber = 1;
  private string projectSrc_ = "";
  /// <summary>
  /// download/.../src
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectSrc {
    get { return projectSrc_; }
    set {
      projectSrc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "des_root" field.</summary>
  public const int DesRootFieldNumber = 2;
  private global::FileList_Root_Type desRoot_ = 0;
  /// <summary>
  ///  root_path
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList_Root_Type DesRoot {
    get { return desRoot_; }
    set {
      desRoot_ = value;
    }
  }

  /// <summary>Field number for the "des_name" field.</summary>
  public const int DesNameFieldNumber = 3;
  private string desName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DesName {
    get { return desName_; }
    set {
      desName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "des_tag" field.</summary>
  public const int DesTagFieldNumber = 4;
  private string desTag_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DesTag {
    get { return desTag_; }
    set {
      desTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CopyDir_V3);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CopyDir_V3 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProjectSrc != other.ProjectSrc) return false;
    if (DesRoot != other.DesRoot) return false;
    if (DesName != other.DesName) return false;
    if (DesTag != other.DesTag) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProjectSrc.Length != 0) hash ^= ProjectSrc.GetHashCode();
    if (DesRoot != 0) hash ^= DesRoot.GetHashCode();
    if (DesName.Length != 0) hash ^= DesName.GetHashCode();
    if (DesTag.Length != 0) hash ^= DesTag.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProjectSrc.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ProjectSrc);
    }
    if (DesRoot != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) DesRoot);
    }
    if (DesName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(DesName);
    }
    if (DesTag.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(DesTag);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProjectSrc.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectSrc);
    }
    if (DesRoot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DesRoot);
    }
    if (DesName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DesName);
    }
    if (DesTag.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DesTag);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CopyDir_V3 other) {
    if (other == null) {
      return;
    }
    if (other.ProjectSrc.Length != 0) {
      ProjectSrc = other.ProjectSrc;
    }
    if (other.DesRoot != 0) {
      DesRoot = other.DesRoot;
    }
    if (other.DesName.Length != 0) {
      DesName = other.DesName;
    }
    if (other.DesTag.Length != 0) {
      DesTag = other.DesTag;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ProjectSrc = input.ReadString();
          break;
        }
        case 16: {
          desRoot_ = (global::FileList_Root_Type) input.ReadEnum();
          break;
        }
        case 26: {
          DesName = input.ReadString();
          break;
        }
        case 34: {
          DesTag = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class DelDir_V3 : pb::IMessage<DelDir_V3> {
  private static readonly pb::MessageParser<DelDir_V3> _parser = new pb::MessageParser<DelDir_V3>(() => new DelDir_V3());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DelDir_V3> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DelDir_V3() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DelDir_V3(DelDir_V3 other) : this() {
    projectFullpath_ = other.projectFullpath_;
    delPaths_ = other.delPaths_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DelDir_V3 Clone() {
    return new DelDir_V3(this);
  }

  /// <summary>Field number for the "project_fullpath" field.</summary>
  public const int ProjectFullpathFieldNumber = 1;
  private string projectFullpath_ = "";
  /// <summary>
  /// download/xxx...xxx/base64(project_name)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectFullpath {
    get { return projectFullpath_; }
    set {
      projectFullpath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "del_paths" field.</summary>
  public const int DelPathsFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_delPaths_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> delPaths_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// path list.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> DelPaths {
    get { return delPaths_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DelDir_V3);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DelDir_V3 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProjectFullpath != other.ProjectFullpath) return false;
    if(!delPaths_.Equals(other.delPaths_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProjectFullpath.Length != 0) hash ^= ProjectFullpath.GetHashCode();
    hash ^= delPaths_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProjectFullpath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ProjectFullpath);
    }
    delPaths_.WriteTo(output, _repeated_delPaths_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProjectFullpath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectFullpath);
    }
    size += delPaths_.CalculateSize(_repeated_delPaths_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DelDir_V3 other) {
    if (other == null) {
      return;
    }
    if (other.ProjectFullpath.Length != 0) {
      ProjectFullpath = other.ProjectFullpath;
    }
    delPaths_.Add(other.delPaths_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ProjectFullpath = input.ReadString();
          break;
        }
        case 18: {
          delPaths_.AddEntriesFrom(input, _repeated_delPaths_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class Mail : pb::IMessage<Mail> {
  private static readonly pb::MessageParser<Mail> _parser = new pb::MessageParser<Mail>(() => new Mail());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Mail> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Mail() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Mail(Mail other) : this() {
    mailId_ = other.mailId_;
    senderId_ = other.senderId_;
    receiverId_ = other.receiverId_;
    senderName_ = other.senderName_;
    title_ = other.title_;
    content_ = other.content_;
    attachment_ = other.attachment_;
    expiredTime_ = other.expiredTime_;
    mailFlag_ = other.mailFlag_;
    createTime_ = other.createTime_;
    mailType_ = other.mailType_;
    extension_ = other.extension_;
    receiverName_ = other.receiverName_;
    iconId_ = other.iconId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Mail Clone() {
    return new Mail(this);
  }

  /// <summary>Field number for the "mail_id" field.</summary>
  public const int MailIdFieldNumber = 1;
  private ulong mailId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong MailId {
    get { return mailId_; }
    set {
      mailId_ = value;
    }
  }

  /// <summary>Field number for the "sender_id" field.</summary>
  public const int SenderIdFieldNumber = 2;
  private uint senderId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SenderId {
    get { return senderId_; }
    set {
      senderId_ = value;
    }
  }

  /// <summary>Field number for the "receiver_id" field.</summary>
  public const int ReceiverIdFieldNumber = 3;
  private uint receiverId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReceiverId {
    get { return receiverId_; }
    set {
      receiverId_ = value;
    }
  }

  /// <summary>Field number for the "sender_name" field.</summary>
  public const int SenderNameFieldNumber = 4;
  private pb::ByteString senderName_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString SenderName {
    get { return senderName_; }
    set {
      senderName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 5;
  private pb::ByteString title_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Title {
    get { return title_; }
    set {
      title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 6;
  private pb::ByteString content_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attachment" field.</summary>
  public const int AttachmentFieldNumber = 7;
  private pb::ByteString attachment_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Attachment {
    get { return attachment_; }
    set {
      attachment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "expired_time" field.</summary>
  public const int ExpiredTimeFieldNumber = 8;
  private uint expiredTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ExpiredTime {
    get { return expiredTime_; }
    set {
      expiredTime_ = value;
    }
  }

  /// <summary>Field number for the "mail_flag" field.</summary>
  public const int MailFlagFieldNumber = 9;
  private uint mailFlag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MailFlag {
    get { return mailFlag_; }
    set {
      mailFlag_ = value;
    }
  }

  /// <summary>Field number for the "create_time" field.</summary>
  public const int CreateTimeFieldNumber = 10;
  private ulong createTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong CreateTime {
    get { return createTime_; }
    set {
      createTime_ = value;
    }
  }

  /// <summary>Field number for the "mail_type" field.</summary>
  public const int MailTypeFieldNumber = 11;
  private uint mailType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MailType {
    get { return mailType_; }
    set {
      mailType_ = value;
    }
  }

  /// <summary>Field number for the "extension" field.</summary>
  public const int ExtensionFieldNumber = 12;
  private pb::ByteString extension_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Extension {
    get { return extension_; }
    set {
      extension_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "receiver_name" field.</summary>
  public const int ReceiverNameFieldNumber = 13;
  private pb::ByteString receiverName_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString ReceiverName {
    get { return receiverName_; }
    set {
      receiverName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "icon_id" field.</summary>
  public const int IconIdFieldNumber = 14;
  private uint iconId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint IconId {
    get { return iconId_; }
    set {
      iconId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Mail);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Mail other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    if (SenderId != other.SenderId) return false;
    if (ReceiverId != other.ReceiverId) return false;
    if (SenderName != other.SenderName) return false;
    if (Title != other.Title) return false;
    if (Content != other.Content) return false;
    if (Attachment != other.Attachment) return false;
    if (ExpiredTime != other.ExpiredTime) return false;
    if (MailFlag != other.MailFlag) return false;
    if (CreateTime != other.CreateTime) return false;
    if (MailType != other.MailType) return false;
    if (Extension != other.Extension) return false;
    if (ReceiverName != other.ReceiverName) return false;
    if (IconId != other.IconId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId != 0UL) hash ^= MailId.GetHashCode();
    if (SenderId != 0) hash ^= SenderId.GetHashCode();
    if (ReceiverId != 0) hash ^= ReceiverId.GetHashCode();
    if (SenderName.Length != 0) hash ^= SenderName.GetHashCode();
    if (Title.Length != 0) hash ^= Title.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (Attachment.Length != 0) hash ^= Attachment.GetHashCode();
    if (ExpiredTime != 0) hash ^= ExpiredTime.GetHashCode();
    if (MailFlag != 0) hash ^= MailFlag.GetHashCode();
    if (CreateTime != 0UL) hash ^= CreateTime.GetHashCode();
    if (MailType != 0) hash ^= MailType.GetHashCode();
    if (Extension.Length != 0) hash ^= Extension.GetHashCode();
    if (ReceiverName.Length != 0) hash ^= ReceiverName.GetHashCode();
    if (IconId != 0) hash ^= IconId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MailId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MailId);
    }
    if (SenderId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(SenderId);
    }
    if (ReceiverId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(ReceiverId);
    }
    if (SenderName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(SenderName);
    }
    if (Title.Length != 0) {
      output.WriteRawTag(42);
      output.WriteBytes(Title);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(50);
      output.WriteBytes(Content);
    }
    if (Attachment.Length != 0) {
      output.WriteRawTag(58);
      output.WriteBytes(Attachment);
    }
    if (ExpiredTime != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(ExpiredTime);
    }
    if (MailFlag != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(MailFlag);
    }
    if (CreateTime != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(CreateTime);
    }
    if (MailType != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(MailType);
    }
    if (Extension.Length != 0) {
      output.WriteRawTag(98);
      output.WriteBytes(Extension);
    }
    if (ReceiverName.Length != 0) {
      output.WriteRawTag(106);
      output.WriteBytes(ReceiverName);
    }
    if (IconId != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(IconId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MailId);
    }
    if (SenderId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SenderId);
    }
    if (ReceiverId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReceiverId);
    }
    if (SenderName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SenderName);
    }
    if (Title.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Title);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
    }
    if (Attachment.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Attachment);
    }
    if (ExpiredTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpiredTime);
    }
    if (MailFlag != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MailFlag);
    }
    if (CreateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreateTime);
    }
    if (MailType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MailType);
    }
    if (Extension.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Extension);
    }
    if (ReceiverName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReceiverName);
    }
    if (IconId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IconId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Mail other) {
    if (other == null) {
      return;
    }
    if (other.MailId != 0UL) {
      MailId = other.MailId;
    }
    if (other.SenderId != 0) {
      SenderId = other.SenderId;
    }
    if (other.ReceiverId != 0) {
      ReceiverId = other.ReceiverId;
    }
    if (other.SenderName.Length != 0) {
      SenderName = other.SenderName;
    }
    if (other.Title.Length != 0) {
      Title = other.Title;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.Attachment.Length != 0) {
      Attachment = other.Attachment;
    }
    if (other.ExpiredTime != 0) {
      ExpiredTime = other.ExpiredTime;
    }
    if (other.MailFlag != 0) {
      MailFlag = other.MailFlag;
    }
    if (other.CreateTime != 0UL) {
      CreateTime = other.CreateTime;
    }
    if (other.MailType != 0) {
      MailType = other.MailType;
    }
    if (other.Extension.Length != 0) {
      Extension = other.Extension;
    }
    if (other.ReceiverName.Length != 0) {
      ReceiverName = other.ReceiverName;
    }
    if (other.IconId != 0) {
      IconId = other.IconId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          MailId = input.ReadUInt64();
          break;
        }
        case 16: {
          SenderId = input.ReadUInt32();
          break;
        }
        case 24: {
          ReceiverId = input.ReadUInt32();
          break;
        }
        case 34: {
          SenderName = input.ReadBytes();
          break;
        }
        case 42: {
          Title = input.ReadBytes();
          break;
        }
        case 50: {
          Content = input.ReadBytes();
          break;
        }
        case 58: {
          Attachment = input.ReadBytes();
          break;
        }
        case 64: {
          ExpiredTime = input.ReadUInt32();
          break;
        }
        case 72: {
          MailFlag = input.ReadUInt32();
          break;
        }
        case 80: {
          CreateTime = input.ReadUInt64();
          break;
        }
        case 88: {
          MailType = input.ReadUInt32();
          break;
        }
        case 98: {
          Extension = input.ReadBytes();
          break;
        }
        case 106: {
          ReceiverName = input.ReadBytes();
          break;
        }
        case 112: {
          IconId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class A8_User_Display_Info : pb::IMessage<A8_User_Display_Info> {
  private static readonly pb::MessageParser<A8_User_Display_Info> _parser = new pb::MessageParser<A8_User_Display_Info>(() => new A8_User_Display_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_User_Display_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_User_Display_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_User_Display_Info(A8_User_Display_Info other) : this() {
    userId_ = other.userId_;
    userNickname_ = other.userNickname_;
    userInconId_ = other.userInconId_;
    userOnline_ = other.userOnline_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_User_Display_Info Clone() {
    return new A8_User_Display_Info(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private uint userId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "user_nickname" field.</summary>
  public const int UserNicknameFieldNumber = 2;
  private string userNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserNickname {
    get { return userNickname_; }
    set {
      userNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_incon_id" field.</summary>
  public const int UserInconIdFieldNumber = 3;
  private uint userInconId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserInconId {
    get { return userInconId_; }
    set {
      userInconId_ = value;
    }
  }

  /// <summary>Field number for the "user_online" field.</summary>
  public const int UserOnlineFieldNumber = 4;
  private uint userOnline_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserOnline {
    get { return userOnline_; }
    set {
      userOnline_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_User_Display_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_User_Display_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (UserNickname != other.UserNickname) return false;
    if (UserInconId != other.UserInconId) return false;
    if (UserOnline != other.UserOnline) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (UserNickname.Length != 0) hash ^= UserNickname.GetHashCode();
    if (UserInconId != 0) hash ^= UserInconId.GetHashCode();
    if (UserOnline != 0) hash ^= UserOnline.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(UserId);
    }
    if (UserNickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserNickname);
    }
    if (UserInconId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(UserInconId);
    }
    if (UserOnline != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(UserOnline);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
    }
    if (UserNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserNickname);
    }
    if (UserInconId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserInconId);
    }
    if (UserOnline != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserOnline);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_User_Display_Info other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.UserNickname.Length != 0) {
      UserNickname = other.UserNickname;
    }
    if (other.UserInconId != 0) {
      UserInconId = other.UserInconId;
    }
    if (other.UserOnline != 0) {
      UserOnline = other.UserOnline;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          UserId = input.ReadUInt32();
          break;
        }
        case 18: {
          UserNickname = input.ReadString();
          break;
        }
        case 24: {
          UserInconId = input.ReadUInt32();
          break;
        }
        case 32: {
          UserOnline = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Student_Submit_Task : pb::IMessage<A8_Student_Submit_Task> {
  private static readonly pb::MessageParser<A8_Student_Submit_Task> _parser = new pb::MessageParser<A8_Student_Submit_Task>(() => new A8_Student_Submit_Task());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Student_Submit_Task> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Student_Submit_Task() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Student_Submit_Task(A8_Student_Submit_Task other) : this() {
    submitId_ = other.submitId_;
    projectName_ = other.projectName_;
    taskGrade_ = other.taskGrade_;
    submittedTime_ = other.submittedTime_;
    updateTime_ = other.updateTime_;
    submitProjectType_ = other.submitProjectType_;
    SubmitAttachInfo = other.submitAttachInfo_ != null ? other.SubmitAttachInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Student_Submit_Task Clone() {
    return new A8_Student_Submit_Task(this);
  }

  /// <summary>Field number for the "submit_id" field.</summary>
  public const int SubmitIdFieldNumber = 1;
  private uint submitId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmitId {
    get { return submitId_; }
    set {
      submitId_ = value;
    }
  }

  /// <summary>Field number for the "project_name" field.</summary>
  public const int ProjectNameFieldNumber = 2;
  private string projectName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectName {
    get { return projectName_; }
    set {
      projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "task_grade" field.</summary>
  public const int TaskGradeFieldNumber = 3;
  private string taskGrade_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TaskGrade {
    get { return taskGrade_; }
    set {
      taskGrade_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "submitted_time" field.</summary>
  public const int SubmittedTimeFieldNumber = 4;
  private ulong submittedTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong SubmittedTime {
    get { return submittedTime_; }
    set {
      submittedTime_ = value;
    }
  }

  /// <summary>Field number for the "update_time" field.</summary>
  public const int UpdateTimeFieldNumber = 5;
  private ulong updateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong UpdateTime {
    get { return updateTime_; }
    set {
      updateTime_ = value;
    }
  }

  /// <summary>Field number for the "submit_project_type" field.</summary>
  public const int SubmitProjectTypeFieldNumber = 6;
  private uint submitProjectType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmitProjectType {
    get { return submitProjectType_; }
    set {
      submitProjectType_ = value;
    }
  }

  /// <summary>Field number for the "submit_attach_info" field.</summary>
  public const int SubmitAttachInfoFieldNumber = 7;
  private global::K8_Attach_Info submitAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info SubmitAttachInfo {
    get { return submitAttachInfo_; }
    set {
      submitAttachInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Student_Submit_Task);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Student_Submit_Task other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SubmitId != other.SubmitId) return false;
    if (ProjectName != other.ProjectName) return false;
    if (TaskGrade != other.TaskGrade) return false;
    if (SubmittedTime != other.SubmittedTime) return false;
    if (UpdateTime != other.UpdateTime) return false;
    if (SubmitProjectType != other.SubmitProjectType) return false;
    if (!object.Equals(SubmitAttachInfo, other.SubmitAttachInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SubmitId != 0) hash ^= SubmitId.GetHashCode();
    if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
    if (TaskGrade.Length != 0) hash ^= TaskGrade.GetHashCode();
    if (SubmittedTime != 0UL) hash ^= SubmittedTime.GetHashCode();
    if (UpdateTime != 0UL) hash ^= UpdateTime.GetHashCode();
    if (SubmitProjectType != 0) hash ^= SubmitProjectType.GetHashCode();
    if (submitAttachInfo_ != null) hash ^= SubmitAttachInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SubmitId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SubmitId);
    }
    if (ProjectName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ProjectName);
    }
    if (TaskGrade.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(TaskGrade);
    }
    if (SubmittedTime != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(SubmittedTime);
    }
    if (UpdateTime != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(UpdateTime);
    }
    if (SubmitProjectType != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(SubmitProjectType);
    }
    if (submitAttachInfo_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(SubmitAttachInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SubmitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmitId);
    }
    if (ProjectName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
    }
    if (TaskGrade.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskGrade);
    }
    if (SubmittedTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SubmittedTime);
    }
    if (UpdateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpdateTime);
    }
    if (SubmitProjectType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmitProjectType);
    }
    if (submitAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitAttachInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Student_Submit_Task other) {
    if (other == null) {
      return;
    }
    if (other.SubmitId != 0) {
      SubmitId = other.SubmitId;
    }
    if (other.ProjectName.Length != 0) {
      ProjectName = other.ProjectName;
    }
    if (other.TaskGrade.Length != 0) {
      TaskGrade = other.TaskGrade;
    }
    if (other.SubmittedTime != 0UL) {
      SubmittedTime = other.SubmittedTime;
    }
    if (other.UpdateTime != 0UL) {
      UpdateTime = other.UpdateTime;
    }
    if (other.SubmitProjectType != 0) {
      SubmitProjectType = other.SubmitProjectType;
    }
    if (other.submitAttachInfo_ != null) {
      if (submitAttachInfo_ == null) {
        submitAttachInfo_ = new global::K8_Attach_Info();
      }
      SubmitAttachInfo.MergeFrom(other.SubmitAttachInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SubmitId = input.ReadUInt32();
          break;
        }
        case 18: {
          ProjectName = input.ReadString();
          break;
        }
        case 26: {
          TaskGrade = input.ReadString();
          break;
        }
        case 32: {
          SubmittedTime = input.ReadUInt64();
          break;
        }
        case 40: {
          UpdateTime = input.ReadUInt64();
          break;
        }
        case 48: {
          SubmitProjectType = input.ReadUInt32();
          break;
        }
        case 58: {
          if (submitAttachInfo_ == null) {
            submitAttachInfo_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(submitAttachInfo_);
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Task_Submit_Info : pb::IMessage<A8_Task_Submit_Info> {
  private static readonly pb::MessageParser<A8_Task_Submit_Info> _parser = new pb::MessageParser<A8_Task_Submit_Info>(() => new A8_Task_Submit_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Task_Submit_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Task_Submit_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Task_Submit_Info(A8_Task_Submit_Info other) : this() {
    submittedTask_ = other.submittedTask_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Task_Submit_Info Clone() {
    return new A8_Task_Submit_Info(this);
  }

  /// <summary>Field number for the "submitted_task" field.</summary>
  public const int SubmittedTaskFieldNumber = 8;
  private static readonly pbc::MapField<uint, global::A8_Student_Submit_Task>.Codec _map_submittedTask_codec
      = new pbc::MapField<uint, global::A8_Student_Submit_Task>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::A8_Student_Submit_Task.Parser), 66);
  private readonly pbc::MapField<uint, global::A8_Student_Submit_Task> submittedTask_ = new pbc::MapField<uint, global::A8_Student_Submit_Task>();
  /// <summary>
  /// submit_id	: task		
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::A8_Student_Submit_Task> SubmittedTask {
    get { return submittedTask_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Task_Submit_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Task_Submit_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!SubmittedTask.Equals(other.SubmittedTask)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= SubmittedTask.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    submittedTask_.WriteTo(output, _map_submittedTask_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += submittedTask_.CalculateSize(_map_submittedTask_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Task_Submit_Info other) {
    if (other == null) {
      return;
    }
    submittedTask_.Add(other.submittedTask_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 66: {
          submittedTask_.AddEntriesFrom(input, _map_submittedTask_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Task_Info : pb::IMessage<A8_Task_Info> {
  private static readonly pb::MessageParser<A8_Task_Info> _parser = new pb::MessageParser<A8_Task_Info>(() => new A8_Task_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Task_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Task_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Task_Info(A8_Task_Info other) : this() {
    taskId_ = other.taskId_;
    taskName_ = other.taskName_;
    createrId_ = other.createrId_;
    taskDescription_ = other.taskDescription_;
    taskProgramName_ = other.taskProgramName_;
    taskCreateTime_ = other.taskCreateTime_;
    taskUpdateTime_ = other.taskUpdateTime_;
    TaskSubmitInfo = other.taskSubmitInfo_ != null ? other.TaskSubmitInfo.Clone() : null;
    taskProjectType_ = other.taskProjectType_;
    TaskAttachInfoNew = other.taskAttachInfoNew_ != null ? other.TaskAttachInfoNew.Clone() : null;
    taskNotAllowSubmit_ = other.taskNotAllowSubmit_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Task_Info Clone() {
    return new A8_Task_Info(this);
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 1;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "task_name" field.</summary>
  public const int TaskNameFieldNumber = 2;
  private string taskName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TaskName {
    get { return taskName_; }
    set {
      taskName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "creater_id" field.</summary>
  public const int CreaterIdFieldNumber = 3;
  private uint createrId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CreaterId {
    get { return createrId_; }
    set {
      createrId_ = value;
    }
  }

  /// <summary>Field number for the "task_description" field.</summary>
  public const int TaskDescriptionFieldNumber = 4;
  private string taskDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TaskDescription {
    get { return taskDescription_; }
    set {
      taskDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "task_program_name" field.</summary>
  public const int TaskProgramNameFieldNumber = 5;
  private string taskProgramName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TaskProgramName {
    get { return taskProgramName_; }
    set {
      taskProgramName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "task_create_time" field.</summary>
  public const int TaskCreateTimeFieldNumber = 6;
  private ulong taskCreateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong TaskCreateTime {
    get { return taskCreateTime_; }
    set {
      taskCreateTime_ = value;
    }
  }

  /// <summary>Field number for the "task_update_time" field.</summary>
  public const int TaskUpdateTimeFieldNumber = 7;
  private ulong taskUpdateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong TaskUpdateTime {
    get { return taskUpdateTime_; }
    set {
      taskUpdateTime_ = value;
    }
  }

  /// <summary>Field number for the "task_submit_info" field.</summary>
  public const int TaskSubmitInfoFieldNumber = 8;
  private global::A8_Task_Submit_Info taskSubmitInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Task_Submit_Info TaskSubmitInfo {
    get { return taskSubmitInfo_; }
    set {
      taskSubmitInfo_ = value;
    }
  }

  /// <summary>Field number for the "task_project_type" field.</summary>
  public const int TaskProjectTypeFieldNumber = 10;
  private uint taskProjectType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskProjectType {
    get { return taskProjectType_; }
    set {
      taskProjectType_ = value;
    }
  }

  /// <summary>Field number for the "task_attach_info_new" field.</summary>
  public const int TaskAttachInfoNewFieldNumber = 11;
  private global::K8_Attach_Info taskAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info TaskAttachInfoNew {
    get { return taskAttachInfoNew_; }
    set {
      taskAttachInfoNew_ = value;
    }
  }

  /// <summary>Field number for the "task_not_allow_submit" field.</summary>
  public const int TaskNotAllowSubmitFieldNumber = 12;
  private bool taskNotAllowSubmit_;
  /// <summary>
  /// false 允许上传解答  true 不允许
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool TaskNotAllowSubmit {
    get { return taskNotAllowSubmit_; }
    set {
      taskNotAllowSubmit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Task_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Task_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TaskId != other.TaskId) return false;
    if (TaskName != other.TaskName) return false;
    if (CreaterId != other.CreaterId) return false;
    if (TaskDescription != other.TaskDescription) return false;
    if (TaskProgramName != other.TaskProgramName) return false;
    if (TaskCreateTime != other.TaskCreateTime) return false;
    if (TaskUpdateTime != other.TaskUpdateTime) return false;
    if (!object.Equals(TaskSubmitInfo, other.TaskSubmitInfo)) return false;
    if (TaskProjectType != other.TaskProjectType) return false;
    if (!object.Equals(TaskAttachInfoNew, other.TaskAttachInfoNew)) return false;
    if (TaskNotAllowSubmit != other.TaskNotAllowSubmit) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (TaskName.Length != 0) hash ^= TaskName.GetHashCode();
    if (CreaterId != 0) hash ^= CreaterId.GetHashCode();
    if (TaskDescription.Length != 0) hash ^= TaskDescription.GetHashCode();
    if (TaskProgramName.Length != 0) hash ^= TaskProgramName.GetHashCode();
    if (TaskCreateTime != 0UL) hash ^= TaskCreateTime.GetHashCode();
    if (TaskUpdateTime != 0UL) hash ^= TaskUpdateTime.GetHashCode();
    if (taskSubmitInfo_ != null) hash ^= TaskSubmitInfo.GetHashCode();
    if (TaskProjectType != 0) hash ^= TaskProjectType.GetHashCode();
    if (taskAttachInfoNew_ != null) hash ^= TaskAttachInfoNew.GetHashCode();
    if (TaskNotAllowSubmit != false) hash ^= TaskNotAllowSubmit.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TaskId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TaskId);
    }
    if (TaskName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(TaskName);
    }
    if (CreaterId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(CreaterId);
    }
    if (TaskDescription.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(TaskDescription);
    }
    if (TaskProgramName.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(TaskProgramName);
    }
    if (TaskCreateTime != 0UL) {
      output.WriteRawTag(48);
      output.WriteUInt64(TaskCreateTime);
    }
    if (TaskUpdateTime != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(TaskUpdateTime);
    }
    if (taskSubmitInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(TaskSubmitInfo);
    }
    if (TaskProjectType != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(TaskProjectType);
    }
    if (taskAttachInfoNew_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(TaskAttachInfoNew);
    }
    if (TaskNotAllowSubmit != false) {
      output.WriteRawTag(96);
      output.WriteBool(TaskNotAllowSubmit);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (TaskName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskName);
    }
    if (CreaterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreaterId);
    }
    if (TaskDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskDescription);
    }
    if (TaskProgramName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskProgramName);
    }
    if (TaskCreateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TaskCreateTime);
    }
    if (TaskUpdateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TaskUpdateTime);
    }
    if (taskSubmitInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskSubmitInfo);
    }
    if (TaskProjectType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskProjectType);
    }
    if (taskAttachInfoNew_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskAttachInfoNew);
    }
    if (TaskNotAllowSubmit != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Task_Info other) {
    if (other == null) {
      return;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.TaskName.Length != 0) {
      TaskName = other.TaskName;
    }
    if (other.CreaterId != 0) {
      CreaterId = other.CreaterId;
    }
    if (other.TaskDescription.Length != 0) {
      TaskDescription = other.TaskDescription;
    }
    if (other.TaskProgramName.Length != 0) {
      TaskProgramName = other.TaskProgramName;
    }
    if (other.TaskCreateTime != 0UL) {
      TaskCreateTime = other.TaskCreateTime;
    }
    if (other.TaskUpdateTime != 0UL) {
      TaskUpdateTime = other.TaskUpdateTime;
    }
    if (other.taskSubmitInfo_ != null) {
      if (taskSubmitInfo_ == null) {
        taskSubmitInfo_ = new global::A8_Task_Submit_Info();
      }
      TaskSubmitInfo.MergeFrom(other.TaskSubmitInfo);
    }
    if (other.TaskProjectType != 0) {
      TaskProjectType = other.TaskProjectType;
    }
    if (other.taskAttachInfoNew_ != null) {
      if (taskAttachInfoNew_ == null) {
        taskAttachInfoNew_ = new global::K8_Attach_Info();
      }
      TaskAttachInfoNew.MergeFrom(other.TaskAttachInfoNew);
    }
    if (other.TaskNotAllowSubmit != false) {
      TaskNotAllowSubmit = other.TaskNotAllowSubmit;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 18: {
          TaskName = input.ReadString();
          break;
        }
        case 24: {
          CreaterId = input.ReadUInt32();
          break;
        }
        case 34: {
          TaskDescription = input.ReadString();
          break;
        }
        case 42: {
          TaskProgramName = input.ReadString();
          break;
        }
        case 48: {
          TaskCreateTime = input.ReadUInt64();
          break;
        }
        case 56: {
          TaskUpdateTime = input.ReadUInt64();
          break;
        }
        case 66: {
          if (taskSubmitInfo_ == null) {
            taskSubmitInfo_ = new global::A8_Task_Submit_Info();
          }
          input.ReadMessage(taskSubmitInfo_);
          break;
        }
        case 80: {
          TaskProjectType = input.ReadUInt32();
          break;
        }
        case 90: {
          if (taskAttachInfoNew_ == null) {
            taskAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(taskAttachInfoNew_);
          break;
        }
        case 96: {
          TaskNotAllowSubmit = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Class_Member_Info : pb::IMessage<A8_Class_Member_Info> {
  private static readonly pb::MessageParser<A8_Class_Member_Info> _parser = new pb::MessageParser<A8_Class_Member_Info>(() => new A8_Class_Member_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Class_Member_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Member_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Member_Info(A8_Class_Member_Info other) : this() {
    memberList_ = other.memberList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Member_Info Clone() {
    return new A8_Class_Member_Info(this);
  }

  /// <summary>Field number for the "member_list" field.</summary>
  public const int MemberListFieldNumber = 1;
  private static readonly pbc::MapField<uint, global::A8_User_Display_Info>.Codec _map_memberList_codec
      = new pbc::MapField<uint, global::A8_User_Display_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::A8_User_Display_Info.Parser), 10);
  private readonly pbc::MapField<uint, global::A8_User_Display_Info> memberList_ = new pbc::MapField<uint, global::A8_User_Display_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::A8_User_Display_Info> MemberList {
    get { return memberList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Class_Member_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Class_Member_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!MemberList.Equals(other.MemberList)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= MemberList.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    memberList_.WriteTo(output, _map_memberList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += memberList_.CalculateSize(_map_memberList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Class_Member_Info other) {
    if (other == null) {
      return;
    }
    memberList_.Add(other.memberList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          memberList_.AddEntriesFrom(input, _map_memberList_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Class_Task_List : pb::IMessage<A8_Class_Task_List> {
  private static readonly pb::MessageParser<A8_Class_Task_List> _parser = new pb::MessageParser<A8_Class_Task_List>(() => new A8_Class_Task_List());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Class_Task_List> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Task_List() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Task_List(A8_Class_Task_List other) : this() {
    taskList_ = other.taskList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Task_List Clone() {
    return new A8_Class_Task_List(this);
  }

  /// <summary>Field number for the "task_list" field.</summary>
  public const int TaskListFieldNumber = 1;
  private static readonly pbc::MapField<uint, global::A8_Task_Info>.Codec _map_taskList_codec
      = new pbc::MapField<uint, global::A8_Task_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::A8_Task_Info.Parser), 10);
  private readonly pbc::MapField<uint, global::A8_Task_Info> taskList_ = new pbc::MapField<uint, global::A8_Task_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::A8_Task_Info> TaskList {
    get { return taskList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Class_Task_List);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Class_Task_List other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!TaskList.Equals(other.TaskList)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= TaskList.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    taskList_.WriteTo(output, _map_taskList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += taskList_.CalculateSize(_map_taskList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Class_Task_List other) {
    if (other == null) {
      return;
    }
    taskList_.Add(other.taskList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          taskList_.AddEntriesFrom(input, _map_taskList_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Class_Info : pb::IMessage<A8_Class_Info> {
  private static readonly pb::MessageParser<A8_Class_Info> _parser = new pb::MessageParser<A8_Class_Info>(() => new A8_Class_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Class_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Info(A8_Class_Info other) : this() {
    classId_ = other.classId_;
    className_ = other.className_;
    teacherId_ = other.teacherId_;
    MemberInfo = other.memberInfo_ != null ? other.MemberInfo.Clone() : null;
    classDescription_ = other.classDescription_;
    classInconId_ = other.classInconId_;
    classCreateTime_ = other.classCreateTime_;
    classUpdateTime_ = other.classUpdateTime_;
    classStatus_ = other.classStatus_;
    classProjectType_ = other.classProjectType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Class_Info Clone() {
    return new A8_Class_Info(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "class_name" field.</summary>
  public const int ClassNameFieldNumber = 2;
  private string className_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ClassName {
    get { return className_; }
    set {
      className_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "teacher_id" field.</summary>
  public const int TeacherIdFieldNumber = 3;
  private uint teacherId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TeacherId {
    get { return teacherId_; }
    set {
      teacherId_ = value;
    }
  }

  /// <summary>Field number for the "member_info" field.</summary>
  public const int MemberInfoFieldNumber = 4;
  private global::A8_Class_Member_Info memberInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Class_Member_Info MemberInfo {
    get { return memberInfo_; }
    set {
      memberInfo_ = value;
    }
  }

  /// <summary>Field number for the "class_description" field.</summary>
  public const int ClassDescriptionFieldNumber = 5;
  private string classDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ClassDescription {
    get { return classDescription_; }
    set {
      classDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "class_incon_id" field.</summary>
  public const int ClassInconIdFieldNumber = 6;
  private uint classInconId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassInconId {
    get { return classInconId_; }
    set {
      classInconId_ = value;
    }
  }

  /// <summary>Field number for the "class_create_time" field.</summary>
  public const int ClassCreateTimeFieldNumber = 7;
  private ulong classCreateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ClassCreateTime {
    get { return classCreateTime_; }
    set {
      classCreateTime_ = value;
    }
  }

  /// <summary>Field number for the "class_update_time" field.</summary>
  public const int ClassUpdateTimeFieldNumber = 8;
  private ulong classUpdateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ClassUpdateTime {
    get { return classUpdateTime_; }
    set {
      classUpdateTime_ = value;
    }
  }

  /// <summary>Field number for the "class_status" field.</summary>
  public const int ClassStatusFieldNumber = 10;
  private uint classStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassStatus {
    get { return classStatus_; }
    set {
      classStatus_ = value;
    }
  }

  /// <summary>Field number for the "class_project_type" field.</summary>
  public const int ClassProjectTypeFieldNumber = 11;
  private uint classProjectType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassProjectType {
    get { return classProjectType_; }
    set {
      classProjectType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Class_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Class_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (ClassName != other.ClassName) return false;
    if (TeacherId != other.TeacherId) return false;
    if (!object.Equals(MemberInfo, other.MemberInfo)) return false;
    if (ClassDescription != other.ClassDescription) return false;
    if (ClassInconId != other.ClassInconId) return false;
    if (ClassCreateTime != other.ClassCreateTime) return false;
    if (ClassUpdateTime != other.ClassUpdateTime) return false;
    if (ClassStatus != other.ClassStatus) return false;
    if (ClassProjectType != other.ClassProjectType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (ClassName.Length != 0) hash ^= ClassName.GetHashCode();
    if (TeacherId != 0) hash ^= TeacherId.GetHashCode();
    if (memberInfo_ != null) hash ^= MemberInfo.GetHashCode();
    if (ClassDescription.Length != 0) hash ^= ClassDescription.GetHashCode();
    if (ClassInconId != 0) hash ^= ClassInconId.GetHashCode();
    if (ClassCreateTime != 0UL) hash ^= ClassCreateTime.GetHashCode();
    if (ClassUpdateTime != 0UL) hash ^= ClassUpdateTime.GetHashCode();
    if (ClassStatus != 0) hash ^= ClassStatus.GetHashCode();
    if (ClassProjectType != 0) hash ^= ClassProjectType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (ClassName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ClassName);
    }
    if (TeacherId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(TeacherId);
    }
    if (memberInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MemberInfo);
    }
    if (ClassDescription.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ClassDescription);
    }
    if (ClassInconId != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(ClassInconId);
    }
    if (ClassCreateTime != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(ClassCreateTime);
    }
    if (ClassUpdateTime != 0UL) {
      output.WriteRawTag(64);
      output.WriteUInt64(ClassUpdateTime);
    }
    if (ClassStatus != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(ClassStatus);
    }
    if (ClassProjectType != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(ClassProjectType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (ClassName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassName);
    }
    if (TeacherId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeacherId);
    }
    if (memberInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemberInfo);
    }
    if (ClassDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassDescription);
    }
    if (ClassInconId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassInconId);
    }
    if (ClassCreateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClassCreateTime);
    }
    if (ClassUpdateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClassUpdateTime);
    }
    if (ClassStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassStatus);
    }
    if (ClassProjectType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassProjectType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Class_Info other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.ClassName.Length != 0) {
      ClassName = other.ClassName;
    }
    if (other.TeacherId != 0) {
      TeacherId = other.TeacherId;
    }
    if (other.memberInfo_ != null) {
      if (memberInfo_ == null) {
        memberInfo_ = new global::A8_Class_Member_Info();
      }
      MemberInfo.MergeFrom(other.MemberInfo);
    }
    if (other.ClassDescription.Length != 0) {
      ClassDescription = other.ClassDescription;
    }
    if (other.ClassInconId != 0) {
      ClassInconId = other.ClassInconId;
    }
    if (other.ClassCreateTime != 0UL) {
      ClassCreateTime = other.ClassCreateTime;
    }
    if (other.ClassUpdateTime != 0UL) {
      ClassUpdateTime = other.ClassUpdateTime;
    }
    if (other.ClassStatus != 0) {
      ClassStatus = other.ClassStatus;
    }
    if (other.ClassProjectType != 0) {
      ClassProjectType = other.ClassProjectType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          ClassName = input.ReadString();
          break;
        }
        case 24: {
          TeacherId = input.ReadUInt32();
          break;
        }
        case 34: {
          if (memberInfo_ == null) {
            memberInfo_ = new global::A8_Class_Member_Info();
          }
          input.ReadMessage(memberInfo_);
          break;
        }
        case 42: {
          ClassDescription = input.ReadString();
          break;
        }
        case 48: {
          ClassInconId = input.ReadUInt32();
          break;
        }
        case 56: {
          ClassCreateTime = input.ReadUInt64();
          break;
        }
        case 64: {
          ClassUpdateTime = input.ReadUInt64();
          break;
        }
        case 80: {
          ClassStatus = input.ReadUInt32();
          break;
        }
        case 88: {
          ClassProjectType = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class User_Class_Detail : pb::IMessage<User_Class_Detail> {
  private static readonly pb::MessageParser<User_Class_Detail> _parser = new pb::MessageParser<User_Class_Detail>(() => new User_Class_Detail());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Class_Detail> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Class_Detail() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Class_Detail(User_Class_Detail other) : this() {
    joinedTime_ = other.joinedTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Class_Detail Clone() {
    return new User_Class_Detail(this);
  }

  /// <summary>Field number for the "joined_time" field.</summary>
  public const int JoinedTimeFieldNumber = 1;
  private ulong joinedTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong JoinedTime {
    get { return joinedTime_; }
    set {
      joinedTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Class_Detail);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Class_Detail other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (JoinedTime != other.JoinedTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (JoinedTime != 0UL) hash ^= JoinedTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (JoinedTime != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(JoinedTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (JoinedTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(JoinedTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Class_Detail other) {
    if (other == null) {
      return;
    }
    if (other.JoinedTime != 0UL) {
      JoinedTime = other.JoinedTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          JoinedTime = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class User_Class_Info : pb::IMessage<User_Class_Info> {
  private static readonly pb::MessageParser<User_Class_Info> _parser = new pb::MessageParser<User_Class_Info>(() => new User_Class_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Class_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Class_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Class_Info(User_Class_Info other) : this() {
    userAttendClassMapNew_ = other.userAttendClassMapNew_.Clone();
    userCreateClassMapNew_ = other.userCreateClassMapNew_.Clone();
    userAppliedClassesNew_ = other.userAppliedClassesNew_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Class_Info Clone() {
    return new User_Class_Info(this);
  }

  /// <summary>Field number for the "user_attend_class_map_new" field.</summary>
  public const int UserAttendClassMapNewFieldNumber = 4;
  private static readonly pbc::MapField<uint, global::User_Class_Detail>.Codec _map_userAttendClassMapNew_codec
      = new pbc::MapField<uint, global::User_Class_Detail>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Class_Detail.Parser), 34);
  private readonly pbc::MapField<uint, global::User_Class_Detail> userAttendClassMapNew_ = new pbc::MapField<uint, global::User_Class_Detail>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Class_Detail> UserAttendClassMapNew {
    get { return userAttendClassMapNew_; }
  }

  /// <summary>Field number for the "user_create_class_map_new" field.</summary>
  public const int UserCreateClassMapNewFieldNumber = 5;
  private static readonly pbc::MapField<uint, global::User_Class_Detail>.Codec _map_userCreateClassMapNew_codec
      = new pbc::MapField<uint, global::User_Class_Detail>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Class_Detail.Parser), 42);
  private readonly pbc::MapField<uint, global::User_Class_Detail> userCreateClassMapNew_ = new pbc::MapField<uint, global::User_Class_Detail>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Class_Detail> UserCreateClassMapNew {
    get { return userCreateClassMapNew_; }
  }

  /// <summary>Field number for the "user_applied_classes_new" field.</summary>
  public const int UserAppliedClassesNewFieldNumber = 6;
  private static readonly pbc::MapField<uint, global::User_Class_Detail>.Codec _map_userAppliedClassesNew_codec
      = new pbc::MapField<uint, global::User_Class_Detail>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Class_Detail.Parser), 50);
  private readonly pbc::MapField<uint, global::User_Class_Detail> userAppliedClassesNew_ = new pbc::MapField<uint, global::User_Class_Detail>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Class_Detail> UserAppliedClassesNew {
    get { return userAppliedClassesNew_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Class_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Class_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!UserAttendClassMapNew.Equals(other.UserAttendClassMapNew)) return false;
    if (!UserCreateClassMapNew.Equals(other.UserCreateClassMapNew)) return false;
    if (!UserAppliedClassesNew.Equals(other.UserAppliedClassesNew)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= UserAttendClassMapNew.GetHashCode();
    hash ^= UserCreateClassMapNew.GetHashCode();
    hash ^= UserAppliedClassesNew.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    userAttendClassMapNew_.WriteTo(output, _map_userAttendClassMapNew_codec);
    userCreateClassMapNew_.WriteTo(output, _map_userCreateClassMapNew_codec);
    userAppliedClassesNew_.WriteTo(output, _map_userAppliedClassesNew_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += userAttendClassMapNew_.CalculateSize(_map_userAttendClassMapNew_codec);
    size += userCreateClassMapNew_.CalculateSize(_map_userCreateClassMapNew_codec);
    size += userAppliedClassesNew_.CalculateSize(_map_userAppliedClassesNew_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Class_Info other) {
    if (other == null) {
      return;
    }
    userAttendClassMapNew_.Add(other.userAttendClassMapNew_);
    userCreateClassMapNew_.Add(other.userCreateClassMapNew_);
    userAppliedClassesNew_.Add(other.userAppliedClassesNew_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 34: {
          userAttendClassMapNew_.AddEntriesFrom(input, _map_userAttendClassMapNew_codec);
          break;
        }
        case 42: {
          userCreateClassMapNew_.AddEntriesFrom(input, _map_userCreateClassMapNew_codec);
          break;
        }
        case 50: {
          userAppliedClassesNew_.AddEntriesFrom(input, _map_userAppliedClassesNew_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class User_Ext_Info : pb::IMessage<User_Ext_Info> {
  private static readonly pb::MessageParser<User_Ext_Info> _parser = new pb::MessageParser<User_Ext_Info>(() => new User_Ext_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Ext_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Ext_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Ext_Info(User_Ext_Info other) : this() {
    cellphoneNum_ = other.cellphoneNum_;
    resetPasswordCount_ = other.resetPasswordCount_;
    lastResetPasswordTime_ = other.lastResetPasswordTime_;
    webToken_ = other.webToken_;
    mailAddr_ = other.mailAddr_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Ext_Info Clone() {
    return new User_Ext_Info(this);
  }

  /// <summary>Field number for the "cellphone_num" field.</summary>
  public const int CellphoneNumFieldNumber = 1;
  private string cellphoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CellphoneNum {
    get { return cellphoneNum_; }
    set {
      cellphoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reset_password_count" field.</summary>
  public const int ResetPasswordCountFieldNumber = 2;
  private uint resetPasswordCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ResetPasswordCount {
    get { return resetPasswordCount_; }
    set {
      resetPasswordCount_ = value;
    }
  }

  /// <summary>Field number for the "last_reset_password_time" field.</summary>
  public const int LastResetPasswordTimeFieldNumber = 3;
  private ulong lastResetPasswordTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong LastResetPasswordTime {
    get { return lastResetPasswordTime_; }
    set {
      lastResetPasswordTime_ = value;
    }
  }

  /// <summary>Field number for the "web_token" field.</summary>
  public const int WebTokenFieldNumber = 4;
  private string webToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WebToken {
    get { return webToken_; }
    set {
      webToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "mail_addr" field.</summary>
  public const int MailAddrFieldNumber = 5;
  private string mailAddr_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailAddr {
    get { return mailAddr_; }
    set {
      mailAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Ext_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Ext_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CellphoneNum != other.CellphoneNum) return false;
    if (ResetPasswordCount != other.ResetPasswordCount) return false;
    if (LastResetPasswordTime != other.LastResetPasswordTime) return false;
    if (WebToken != other.WebToken) return false;
    if (MailAddr != other.MailAddr) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CellphoneNum.Length != 0) hash ^= CellphoneNum.GetHashCode();
    if (ResetPasswordCount != 0) hash ^= ResetPasswordCount.GetHashCode();
    if (LastResetPasswordTime != 0UL) hash ^= LastResetPasswordTime.GetHashCode();
    if (WebToken.Length != 0) hash ^= WebToken.GetHashCode();
    if (MailAddr.Length != 0) hash ^= MailAddr.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CellphoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CellphoneNum);
    }
    if (ResetPasswordCount != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ResetPasswordCount);
    }
    if (LastResetPasswordTime != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(LastResetPasswordTime);
    }
    if (WebToken.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(WebToken);
    }
    if (MailAddr.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(MailAddr);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CellphoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CellphoneNum);
    }
    if (ResetPasswordCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResetPasswordCount);
    }
    if (LastResetPasswordTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastResetPasswordTime);
    }
    if (WebToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WebToken);
    }
    if (MailAddr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailAddr);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Ext_Info other) {
    if (other == null) {
      return;
    }
    if (other.CellphoneNum.Length != 0) {
      CellphoneNum = other.CellphoneNum;
    }
    if (other.ResetPasswordCount != 0) {
      ResetPasswordCount = other.ResetPasswordCount;
    }
    if (other.LastResetPasswordTime != 0UL) {
      LastResetPasswordTime = other.LastResetPasswordTime;
    }
    if (other.WebToken.Length != 0) {
      WebToken = other.WebToken;
    }
    if (other.MailAddr.Length != 0) {
      MailAddr = other.MailAddr;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CellphoneNum = input.ReadString();
          break;
        }
        case 16: {
          ResetPasswordCount = input.ReadUInt32();
          break;
        }
        case 24: {
          LastResetPasswordTime = input.ReadUInt64();
          break;
        }
        case 34: {
          WebToken = input.ReadString();
          break;
        }
        case 42: {
          MailAddr = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class User_PeriodItem_Info : pb::IMessage<User_PeriodItem_Info> {
  private static readonly pb::MessageParser<User_PeriodItem_Info> _parser = new pb::MessageParser<User_PeriodItem_Info>(() => new User_PeriodItem_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_PeriodItem_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_PeriodItem_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_PeriodItem_Info(User_PeriodItem_Info other) : this() {
    itemStatus_ = other.itemStatus_;
    itemScore_ = other.itemScore_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_PeriodItem_Info Clone() {
    return new User_PeriodItem_Info(this);
  }

  /// <summary>Field number for the "item_status" field.</summary>
  public const int ItemStatusFieldNumber = 1;
  private uint itemStatus_;
  /// <summary>
  ///  0 - unlock   1- complete
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemStatus {
    get { return itemStatus_; }
    set {
      itemStatus_ = value;
    }
  }

  /// <summary>Field number for the "item_score" field.</summary>
  public const int ItemScoreFieldNumber = 2;
  private uint itemScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemScore {
    get { return itemScore_; }
    set {
      itemScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_PeriodItem_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_PeriodItem_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemStatus != other.ItemStatus) return false;
    if (ItemScore != other.ItemScore) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemStatus != 0) hash ^= ItemStatus.GetHashCode();
    if (ItemScore != 0) hash ^= ItemScore.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemStatus != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemStatus);
    }
    if (ItemScore != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemScore);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemStatus);
    }
    if (ItemScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemScore);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_PeriodItem_Info other) {
    if (other == null) {
      return;
    }
    if (other.ItemStatus != 0) {
      ItemStatus = other.ItemStatus;
    }
    if (other.ItemScore != 0) {
      ItemScore = other.ItemScore;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ItemStatus = input.ReadUInt32();
          break;
        }
        case 16: {
          ItemScore = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class User_Period_Info : pb::IMessage<User_Period_Info> {
  private static readonly pb::MessageParser<User_Period_Info> _parser = new pb::MessageParser<User_Period_Info>(() => new User_Period_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Period_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Period_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Period_Info(User_Period_Info other) : this() {
    userPerioditemList_ = other.userPerioditemList_.Clone();
    periodStatus_ = other.periodStatus_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Period_Info Clone() {
    return new User_Period_Info(this);
  }

  /// <summary>Field number for the "user_perioditem_list" field.</summary>
  public const int UserPerioditemListFieldNumber = 1;
  private static readonly pbc::MapField<uint, global::User_PeriodItem_Info>.Codec _map_userPerioditemList_codec
      = new pbc::MapField<uint, global::User_PeriodItem_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_PeriodItem_Info.Parser), 10);
  private readonly pbc::MapField<uint, global::User_PeriodItem_Info> userPerioditemList_ = new pbc::MapField<uint, global::User_PeriodItem_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_PeriodItem_Info> UserPerioditemList {
    get { return userPerioditemList_; }
  }

  /// <summary>Field number for the "period_status" field.</summary>
  public const int PeriodStatusFieldNumber = 2;
  private uint periodStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodStatus {
    get { return periodStatus_; }
    set {
      periodStatus_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Period_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Period_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!UserPerioditemList.Equals(other.UserPerioditemList)) return false;
    if (PeriodStatus != other.PeriodStatus) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= UserPerioditemList.GetHashCode();
    if (PeriodStatus != 0) hash ^= PeriodStatus.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    userPerioditemList_.WriteTo(output, _map_userPerioditemList_codec);
    if (PeriodStatus != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodStatus);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += userPerioditemList_.CalculateSize(_map_userPerioditemList_codec);
    if (PeriodStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodStatus);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Period_Info other) {
    if (other == null) {
      return;
    }
    userPerioditemList_.Add(other.userPerioditemList_);
    if (other.PeriodStatus != 0) {
      PeriodStatus = other.PeriodStatus;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          userPerioditemList_.AddEntriesFrom(input, _map_userPerioditemList_codec);
          break;
        }
        case 16: {
          PeriodStatus = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class User_Period_Info_List : pb::IMessage<User_Period_Info_List> {
  private static readonly pb::MessageParser<User_Period_Info_List> _parser = new pb::MessageParser<User_Period_Info_List>(() => new User_Period_Info_List());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Period_Info_List> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Period_Info_List() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Period_Info_List(User_Period_Info_List other) : this() {
    userAttendPeriodList_ = other.userAttendPeriodList_.Clone();
    courseStatus_ = other.courseStatus_;
    courseType_ = other.courseType_;
    courseAttendTime_ = other.courseAttendTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Period_Info_List Clone() {
    return new User_Period_Info_List(this);
  }

  /// <summary>Field number for the "user_attend_period_list" field.</summary>
  public const int UserAttendPeriodListFieldNumber = 1;
  private static readonly pbc::MapField<uint, global::User_Period_Info>.Codec _map_userAttendPeriodList_codec
      = new pbc::MapField<uint, global::User_Period_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Period_Info.Parser), 10);
  private readonly pbc::MapField<uint, global::User_Period_Info> userAttendPeriodList_ = new pbc::MapField<uint, global::User_Period_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Period_Info> UserAttendPeriodList {
    get { return userAttendPeriodList_; }
  }

  /// <summary>Field number for the "course_status" field.</summary>
  public const int CourseStatusFieldNumber = 2;
  private uint courseStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseStatus {
    get { return courseStatus_; }
    set {
      courseStatus_ = value;
    }
  }

  /// <summary>Field number for the "course_type" field.</summary>
  public const int CourseTypeFieldNumber = 3;
  private global::Course_type courseType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_type CourseType {
    get { return courseType_; }
    set {
      courseType_ = value;
    }
  }

  /// <summary>Field number for the "course_attend_time" field.</summary>
  public const int CourseAttendTimeFieldNumber = 4;
  private ulong courseAttendTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong CourseAttendTime {
    get { return courseAttendTime_; }
    set {
      courseAttendTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Period_Info_List);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Period_Info_List other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!UserAttendPeriodList.Equals(other.UserAttendPeriodList)) return false;
    if (CourseStatus != other.CourseStatus) return false;
    if (CourseType != other.CourseType) return false;
    if (CourseAttendTime != other.CourseAttendTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= UserAttendPeriodList.GetHashCode();
    if (CourseStatus != 0) hash ^= CourseStatus.GetHashCode();
    if (CourseType != 0) hash ^= CourseType.GetHashCode();
    if (CourseAttendTime != 0UL) hash ^= CourseAttendTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    userAttendPeriodList_.WriteTo(output, _map_userAttendPeriodList_codec);
    if (CourseStatus != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(CourseStatus);
    }
    if (CourseType != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) CourseType);
    }
    if (CourseAttendTime != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(CourseAttendTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += userAttendPeriodList_.CalculateSize(_map_userAttendPeriodList_codec);
    if (CourseStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseStatus);
    }
    if (CourseType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseType);
    }
    if (CourseAttendTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CourseAttendTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Period_Info_List other) {
    if (other == null) {
      return;
    }
    userAttendPeriodList_.Add(other.userAttendPeriodList_);
    if (other.CourseStatus != 0) {
      CourseStatus = other.CourseStatus;
    }
    if (other.CourseType != 0) {
      CourseType = other.CourseType;
    }
    if (other.CourseAttendTime != 0UL) {
      CourseAttendTime = other.CourseAttendTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          userAttendPeriodList_.AddEntriesFrom(input, _map_userAttendPeriodList_codec);
          break;
        }
        case 16: {
          CourseStatus = input.ReadUInt32();
          break;
        }
        case 24: {
          courseType_ = (global::Course_type) input.ReadEnum();
          break;
        }
        case 32: {
          CourseAttendTime = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class User_Course_Info : pb::IMessage<User_Course_Info> {
  private static readonly pb::MessageParser<User_Course_Info> _parser = new pb::MessageParser<User_Course_Info>(() => new User_Course_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Course_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Course_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Course_Info(User_Course_Info other) : this() {
    userCreateCourseMap_ = other.userCreateCourseMap_.Clone();
    userAttendCourseMap_ = other.userAttendCourseMap_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Course_Info Clone() {
    return new User_Course_Info(this);
  }

  /// <summary>Field number for the "user_create_course_map" field.</summary>
  public const int UserCreateCourseMapFieldNumber = 1;
  private static readonly pbc::MapField<uint, uint>.Codec _map_userCreateCourseMap_codec
      = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForUInt32(16), 10);
  private readonly pbc::MapField<uint, uint> userCreateCourseMap_ = new pbc::MapField<uint, uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, uint> UserCreateCourseMap {
    get { return userCreateCourseMap_; }
  }

  /// <summary>Field number for the "user_attend_course_map" field.</summary>
  public const int UserAttendCourseMapFieldNumber = 3;
  private static readonly pbc::MapField<uint, global::User_Period_Info_List>.Codec _map_userAttendCourseMap_codec
      = new pbc::MapField<uint, global::User_Period_Info_List>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Period_Info_List.Parser), 26);
  private readonly pbc::MapField<uint, global::User_Period_Info_List> userAttendCourseMap_ = new pbc::MapField<uint, global::User_Period_Info_List>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Period_Info_List> UserAttendCourseMap {
    get { return userAttendCourseMap_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Course_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Course_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!UserCreateCourseMap.Equals(other.UserCreateCourseMap)) return false;
    if (!UserAttendCourseMap.Equals(other.UserAttendCourseMap)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= UserCreateCourseMap.GetHashCode();
    hash ^= UserAttendCourseMap.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    userCreateCourseMap_.WriteTo(output, _map_userCreateCourseMap_codec);
    userAttendCourseMap_.WriteTo(output, _map_userAttendCourseMap_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += userCreateCourseMap_.CalculateSize(_map_userCreateCourseMap_codec);
    size += userAttendCourseMap_.CalculateSize(_map_userAttendCourseMap_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Course_Info other) {
    if (other == null) {
      return;
    }
    userCreateCourseMap_.Add(other.userCreateCourseMap_);
    userAttendCourseMap_.Add(other.userAttendCourseMap_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          userCreateCourseMap_.AddEntriesFrom(input, _map_userCreateCourseMap_codec);
          break;
        }
        case 26: {
          userAttendCourseMap_.AddEntriesFrom(input, _map_userAttendCourseMap_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Buy_Lesson_Info : pb::IMessage<A8_Buy_Lesson_Info> {
  private static readonly pb::MessageParser<A8_Buy_Lesson_Info> _parser = new pb::MessageParser<A8_Buy_Lesson_Info>(() => new A8_Buy_Lesson_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Buy_Lesson_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Buy_Lesson_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Buy_Lesson_Info(A8_Buy_Lesson_Info other) : this() {
    buyLessons_ = other.buyLessons_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Buy_Lesson_Info Clone() {
    return new A8_Buy_Lesson_Info(this);
  }

  /// <summary>Field number for the "buy_lessons" field.</summary>
  public const int BuyLessonsFieldNumber = 1;
  private static readonly pbc::MapField<uint, uint>.Codec _map_buyLessons_codec
      = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForUInt32(16), 10);
  private readonly pbc::MapField<uint, uint> buyLessons_ = new pbc::MapField<uint, uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, uint> BuyLessons {
    get { return buyLessons_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Buy_Lesson_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Buy_Lesson_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!BuyLessons.Equals(other.BuyLessons)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= BuyLessons.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    buyLessons_.WriteTo(output, _map_buyLessons_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += buyLessons_.CalculateSize(_map_buyLessons_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Buy_Lesson_Info other) {
    if (other == null) {
      return;
    }
    buyLessons_.Add(other.buyLessons_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          buyLessons_.AddEntriesFrom(input, _map_buyLessons_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Purchase_Info : pb::IMessage<A8_Purchase_Info> {
  private static readonly pb::MessageParser<A8_Purchase_Info> _parser = new pb::MessageParser<A8_Purchase_Info>(() => new A8_Purchase_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Purchase_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Purchase_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Purchase_Info(A8_Purchase_Info other) : this() {
    coins_ = other.coins_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Purchase_Info Clone() {
    return new A8_Purchase_Info(this);
  }

  /// <summary>Field number for the "coins" field.</summary>
  public const int CoinsFieldNumber = 1;
  private uint coins_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Coins {
    get { return coins_; }
    set {
      coins_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Purchase_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Purchase_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Coins != other.Coins) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Coins != 0) hash ^= Coins.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Coins != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Coins);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Coins != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Coins);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Purchase_Info other) {
    if (other == null) {
      return;
    }
    if (other.Coins != 0) {
      Coins = other.Coins;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Coins = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class A8_Buy_ArObjs_Info : pb::IMessage<A8_Buy_ArObjs_Info> {
  private static readonly pb::MessageParser<A8_Buy_ArObjs_Info> _parser = new pb::MessageParser<A8_Buy_ArObjs_Info>(() => new A8_Buy_ArObjs_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_Buy_ArObjs_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Buy_ArObjs_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Buy_ArObjs_Info(A8_Buy_ArObjs_Info other) : this() {
    buyArObjs_ = other.buyArObjs_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_Buy_ArObjs_Info Clone() {
    return new A8_Buy_ArObjs_Info(this);
  }

  /// <summary>Field number for the "buy_ar_objs" field.</summary>
  public const int BuyArObjsFieldNumber = 1;
  private static readonly pbc::MapField<uint, uint>.Codec _map_buyArObjs_codec
      = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForUInt32(16), 10);
  private readonly pbc::MapField<uint, uint> buyArObjs_ = new pbc::MapField<uint, uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, uint> BuyArObjs {
    get { return buyArObjs_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_Buy_ArObjs_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_Buy_ArObjs_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!BuyArObjs.Equals(other.BuyArObjs)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= BuyArObjs.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    buyArObjs_.WriteTo(output, _map_buyArObjs_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += buyArObjs_.CalculateSize(_map_buyArObjs_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_Buy_ArObjs_Info other) {
    if (other == null) {
      return;
    }
    buyArObjs_.Add(other.buyArObjs_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          buyArObjs_.AddEntriesFrom(input, _map_buyArObjs_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class A8_User_Info : pb::IMessage<A8_User_Info> {
  private static readonly pb::MessageParser<A8_User_Info> _parser = new pb::MessageParser<A8_User_Info>(() => new A8_User_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<A8_User_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_User_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_User_Info(A8_User_Info other) : this() {
    userId_ = other.userId_;
    userNickname_ = other.userNickname_;
    userInconId_ = other.userInconId_;
    UserClassInfo = other.userClassInfo_ != null ? other.UserClassInfo.Clone() : null;
    userType_ = other.userType_;
    userOnline_ = other.userOnline_;
    userExpiredTime_ = other.userExpiredTime_;
    UserExtInfo = other.userExtInfo_ != null ? other.UserExtInfo.Clone() : null;
    UserBuyLessons = other.userBuyLessons_ != null ? other.UserBuyLessons.Clone() : null;
    UserCourseInfo = other.userCourseInfo_ != null ? other.UserCourseInfo.Clone() : null;
    UserPurchaseInfo = other.userPurchaseInfo_ != null ? other.UserPurchaseInfo.Clone() : null;
    UserBuyArObjs = other.userBuyArObjs_ != null ? other.UserBuyArObjs.Clone() : null;
    UserTopicInfo = other.userTopicInfo_ != null ? other.UserTopicInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public A8_User_Info Clone() {
    return new A8_User_Info(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private uint userId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "user_nickname" field.</summary>
  public const int UserNicknameFieldNumber = 2;
  private string userNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserNickname {
    get { return userNickname_; }
    set {
      userNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_incon_id" field.</summary>
  public const int UserInconIdFieldNumber = 3;
  private uint userInconId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserInconId {
    get { return userInconId_; }
    set {
      userInconId_ = value;
    }
  }

  /// <summary>Field number for the "user_class_info" field.</summary>
  public const int UserClassInfoFieldNumber = 4;
  private global::User_Class_Info userClassInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User_Class_Info UserClassInfo {
    get { return userClassInfo_; }
    set {
      userClassInfo_ = value;
    }
  }

  /// <summary>Field number for the "user_type" field.</summary>
  public const int UserTypeFieldNumber = 5;
  private uint userType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "user_online" field.</summary>
  public const int UserOnlineFieldNumber = 6;
  private uint userOnline_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserOnline {
    get { return userOnline_; }
    set {
      userOnline_ = value;
    }
  }

  /// <summary>Field number for the "user_expired_time" field.</summary>
  public const int UserExpiredTimeFieldNumber = 7;
  private ulong userExpiredTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong UserExpiredTime {
    get { return userExpiredTime_; }
    set {
      userExpiredTime_ = value;
    }
  }

  /// <summary>Field number for the "user_ext_info" field.</summary>
  public const int UserExtInfoFieldNumber = 8;
  private global::User_Ext_Info userExtInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User_Ext_Info UserExtInfo {
    get { return userExtInfo_; }
    set {
      userExtInfo_ = value;
    }
  }

  /// <summary>Field number for the "user_buy_lessons" field.</summary>
  public const int UserBuyLessonsFieldNumber = 9;
  private global::A8_Buy_Lesson_Info userBuyLessons_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Buy_Lesson_Info UserBuyLessons {
    get { return userBuyLessons_; }
    set {
      userBuyLessons_ = value;
    }
  }

  /// <summary>Field number for the "user_course_info" field.</summary>
  public const int UserCourseInfoFieldNumber = 10;
  private global::User_Course_Info userCourseInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User_Course_Info UserCourseInfo {
    get { return userCourseInfo_; }
    set {
      userCourseInfo_ = value;
    }
  }

  /// <summary>Field number for the "user_purchase_info" field.</summary>
  public const int UserPurchaseInfoFieldNumber = 11;
  private global::A8_Purchase_Info userPurchaseInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Purchase_Info UserPurchaseInfo {
    get { return userPurchaseInfo_; }
    set {
      userPurchaseInfo_ = value;
    }
  }

  /// <summary>Field number for the "user_buy_ar_objs" field.</summary>
  public const int UserBuyArObjsFieldNumber = 12;
  private global::A8_Buy_ArObjs_Info userBuyArObjs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Buy_ArObjs_Info UserBuyArObjs {
    get { return userBuyArObjs_; }
    set {
      userBuyArObjs_ = value;
    }
  }

  /// <summary>Field number for the "user_topic_info" field.</summary>
  public const int UserTopicInfoFieldNumber = 13;
  private global::User_Topic_Info userTopicInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User_Topic_Info UserTopicInfo {
    get { return userTopicInfo_; }
    set {
      userTopicInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as A8_User_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(A8_User_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (UserNickname != other.UserNickname) return false;
    if (UserInconId != other.UserInconId) return false;
    if (!object.Equals(UserClassInfo, other.UserClassInfo)) return false;
    if (UserType != other.UserType) return false;
    if (UserOnline != other.UserOnline) return false;
    if (UserExpiredTime != other.UserExpiredTime) return false;
    if (!object.Equals(UserExtInfo, other.UserExtInfo)) return false;
    if (!object.Equals(UserBuyLessons, other.UserBuyLessons)) return false;
    if (!object.Equals(UserCourseInfo, other.UserCourseInfo)) return false;
    if (!object.Equals(UserPurchaseInfo, other.UserPurchaseInfo)) return false;
    if (!object.Equals(UserBuyArObjs, other.UserBuyArObjs)) return false;
    if (!object.Equals(UserTopicInfo, other.UserTopicInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (UserNickname.Length != 0) hash ^= UserNickname.GetHashCode();
    if (UserInconId != 0) hash ^= UserInconId.GetHashCode();
    if (userClassInfo_ != null) hash ^= UserClassInfo.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (UserOnline != 0) hash ^= UserOnline.GetHashCode();
    if (UserExpiredTime != 0UL) hash ^= UserExpiredTime.GetHashCode();
    if (userExtInfo_ != null) hash ^= UserExtInfo.GetHashCode();
    if (userBuyLessons_ != null) hash ^= UserBuyLessons.GetHashCode();
    if (userCourseInfo_ != null) hash ^= UserCourseInfo.GetHashCode();
    if (userPurchaseInfo_ != null) hash ^= UserPurchaseInfo.GetHashCode();
    if (userBuyArObjs_ != null) hash ^= UserBuyArObjs.GetHashCode();
    if (userTopicInfo_ != null) hash ^= UserTopicInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(UserId);
    }
    if (UserNickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserNickname);
    }
    if (UserInconId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(UserInconId);
    }
    if (userClassInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(UserClassInfo);
    }
    if (UserType != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(UserType);
    }
    if (UserOnline != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(UserOnline);
    }
    if (UserExpiredTime != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(UserExpiredTime);
    }
    if (userExtInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(UserExtInfo);
    }
    if (userBuyLessons_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(UserBuyLessons);
    }
    if (userCourseInfo_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(UserCourseInfo);
    }
    if (userPurchaseInfo_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(UserPurchaseInfo);
    }
    if (userBuyArObjs_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(UserBuyArObjs);
    }
    if (userTopicInfo_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(UserTopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
    }
    if (UserNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserNickname);
    }
    if (UserInconId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserInconId);
    }
    if (userClassInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserClassInfo);
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserType);
    }
    if (UserOnline != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserOnline);
    }
    if (UserExpiredTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserExpiredTime);
    }
    if (userExtInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserExtInfo);
    }
    if (userBuyLessons_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserBuyLessons);
    }
    if (userCourseInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserCourseInfo);
    }
    if (userPurchaseInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPurchaseInfo);
    }
    if (userBuyArObjs_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserBuyArObjs);
    }
    if (userTopicInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserTopicInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(A8_User_Info other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.UserNickname.Length != 0) {
      UserNickname = other.UserNickname;
    }
    if (other.UserInconId != 0) {
      UserInconId = other.UserInconId;
    }
    if (other.userClassInfo_ != null) {
      if (userClassInfo_ == null) {
        userClassInfo_ = new global::User_Class_Info();
      }
      UserClassInfo.MergeFrom(other.UserClassInfo);
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.UserOnline != 0) {
      UserOnline = other.UserOnline;
    }
    if (other.UserExpiredTime != 0UL) {
      UserExpiredTime = other.UserExpiredTime;
    }
    if (other.userExtInfo_ != null) {
      if (userExtInfo_ == null) {
        userExtInfo_ = new global::User_Ext_Info();
      }
      UserExtInfo.MergeFrom(other.UserExtInfo);
    }
    if (other.userBuyLessons_ != null) {
      if (userBuyLessons_ == null) {
        userBuyLessons_ = new global::A8_Buy_Lesson_Info();
      }
      UserBuyLessons.MergeFrom(other.UserBuyLessons);
    }
    if (other.userCourseInfo_ != null) {
      if (userCourseInfo_ == null) {
        userCourseInfo_ = new global::User_Course_Info();
      }
      UserCourseInfo.MergeFrom(other.UserCourseInfo);
    }
    if (other.userPurchaseInfo_ != null) {
      if (userPurchaseInfo_ == null) {
        userPurchaseInfo_ = new global::A8_Purchase_Info();
      }
      UserPurchaseInfo.MergeFrom(other.UserPurchaseInfo);
    }
    if (other.userBuyArObjs_ != null) {
      if (userBuyArObjs_ == null) {
        userBuyArObjs_ = new global::A8_Buy_ArObjs_Info();
      }
      UserBuyArObjs.MergeFrom(other.UserBuyArObjs);
    }
    if (other.userTopicInfo_ != null) {
      if (userTopicInfo_ == null) {
        userTopicInfo_ = new global::User_Topic_Info();
      }
      UserTopicInfo.MergeFrom(other.UserTopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          UserId = input.ReadUInt32();
          break;
        }
        case 18: {
          UserNickname = input.ReadString();
          break;
        }
        case 24: {
          UserInconId = input.ReadUInt32();
          break;
        }
        case 34: {
          if (userClassInfo_ == null) {
            userClassInfo_ = new global::User_Class_Info();
          }
          input.ReadMessage(userClassInfo_);
          break;
        }
        case 40: {
          UserType = input.ReadUInt32();
          break;
        }
        case 48: {
          UserOnline = input.ReadUInt32();
          break;
        }
        case 56: {
          UserExpiredTime = input.ReadUInt64();
          break;
        }
        case 66: {
          if (userExtInfo_ == null) {
            userExtInfo_ = new global::User_Ext_Info();
          }
          input.ReadMessage(userExtInfo_);
          break;
        }
        case 74: {
          if (userBuyLessons_ == null) {
            userBuyLessons_ = new global::A8_Buy_Lesson_Info();
          }
          input.ReadMessage(userBuyLessons_);
          break;
        }
        case 82: {
          if (userCourseInfo_ == null) {
            userCourseInfo_ = new global::User_Course_Info();
          }
          input.ReadMessage(userCourseInfo_);
          break;
        }
        case 90: {
          if (userPurchaseInfo_ == null) {
            userPurchaseInfo_ = new global::A8_Purchase_Info();
          }
          input.ReadMessage(userPurchaseInfo_);
          break;
        }
        case 98: {
          if (userBuyArObjs_ == null) {
            userBuyArObjs_ = new global::A8_Buy_ArObjs_Info();
          }
          input.ReadMessage(userBuyArObjs_);
          break;
        }
        case 106: {
          if (userTopicInfo_ == null) {
            userTopicInfo_ = new global::User_Topic_Info();
          }
          input.ReadMessage(userTopicInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
///  
///  HTTP 命令为 POST CMD 到 /
/// </summary>
public sealed partial class CMD : pb::IMessage<CMD> {
  private static readonly pb::MessageParser<CMD> _parser = new pb::MessageParser<CMD>(() => new CMD());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD(CMD other) : this() {
    cmdId_ = other.cmdId_;
    cmdParameters_ = other.cmdParameters_;
    cmdResult_ = other.cmdResult_;
    userToken_ = other.userToken_;
    userId_ = other.userId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD Clone() {
    return new CMD(this);
  }

  /// <summary>Field number for the "cmd_id" field.</summary>
  public const int CmdIdFieldNumber = 1;
  private uint cmdId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CmdId {
    get { return cmdId_; }
    set {
      cmdId_ = value;
    }
  }

  /// <summary>Field number for the "cmd_parameters" field.</summary>
  public const int CmdParametersFieldNumber = 2;
  private pb::ByteString cmdParameters_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString CmdParameters {
    get { return cmdParameters_; }
    set {
      cmdParameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cmd_result" field.</summary>
  public const int CmdResultFieldNumber = 3;
  private uint cmdResult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CmdResult {
    get { return cmdResult_; }
    set {
      cmdResult_ = value;
    }
  }

  /// <summary>Field number for the "user_token" field.</summary>
  public const int UserTokenFieldNumber = 4;
  private pb::ByteString userToken_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString UserToken {
    get { return userToken_; }
    set {
      userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 5;
  private uint userId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CmdId != other.CmdId) return false;
    if (CmdParameters != other.CmdParameters) return false;
    if (CmdResult != other.CmdResult) return false;
    if (UserToken != other.UserToken) return false;
    if (UserId != other.UserId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CmdId != 0) hash ^= CmdId.GetHashCode();
    if (CmdParameters.Length != 0) hash ^= CmdParameters.GetHashCode();
    if (CmdResult != 0) hash ^= CmdResult.GetHashCode();
    if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CmdId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CmdId);
    }
    if (CmdParameters.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(CmdParameters);
    }
    if (CmdResult != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(CmdResult);
    }
    if (UserToken.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(UserToken);
    }
    if (UserId != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(UserId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CmdId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CmdId);
    }
    if (CmdParameters.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CmdParameters);
    }
    if (CmdResult != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CmdResult);
    }
    if (UserToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(UserToken);
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD other) {
    if (other == null) {
      return;
    }
    if (other.CmdId != 0) {
      CmdId = other.CmdId;
    }
    if (other.CmdParameters.Length != 0) {
      CmdParameters = other.CmdParameters;
    }
    if (other.CmdResult != 0) {
      CmdResult = other.CmdResult;
    }
    if (other.UserToken.Length != 0) {
      UserToken = other.UserToken;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CmdId = input.ReadUInt32();
          break;
        }
        case 18: {
          CmdParameters = input.ReadBytes();
          break;
        }
        case 24: {
          CmdResult = input.ReadUInt32();
          break;
        }
        case 34: {
          UserToken = input.ReadBytes();
          break;
        }
        case 40: {
          UserId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_reg_r
/// </summary>
public sealed partial class CMD_Reg_r_Parameters : pb::IMessage<CMD_Reg_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Reg_r_Parameters> _parser = new pb::MessageParser<CMD_Reg_r_Parameters>(() => new CMD_Reg_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Reg_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reg_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reg_r_Parameters(CMD_Reg_r_Parameters other) : this() {
    accountId_ = other.accountId_;
    accountName_ = other.accountName_;
    accountPass_ = other.accountPass_;
    accountType_ = other.accountType_;
    accountUnique_ = other.accountUnique_;
    deviceInfo_ = other.deviceInfo_;
    userNickname_ = other.userNickname_;
    userIconId_ = other.userIconId_;
    userType_ = other.userType_;
    cellphoneNum_ = other.cellphoneNum_;
    inviteCode_ = other.inviteCode_;
    verificationCode_ = other.verificationCode_;
    mailAddr_ = other.mailAddr_;
    buyLessons_ = other.buyLessons_.Clone();
    activeDays_ = other.activeDays_;
    userChannel_ = other.userChannel_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reg_r_Parameters Clone() {
    return new CMD_Reg_r_Parameters(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  /// <summary>Field number for the "account_name" field.</summary>
  public const int AccountNameFieldNumber = 2;
  private string accountName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountName {
    get { return accountName_; }
    set {
      accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "account_pass" field.</summary>
  public const int AccountPassFieldNumber = 3;
  private string accountPass_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountPass {
    get { return accountPass_; }
    set {
      accountPass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "account_type" field.</summary>
  public const int AccountTypeFieldNumber = 4;
  private string accountType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountType {
    get { return accountType_; }
    set {
      accountType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "account_unique" field.</summary>
  public const int AccountUniqueFieldNumber = 5;
  private string accountUnique_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountUnique {
    get { return accountUnique_; }
    set {
      accountUnique_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "device_info" field.</summary>
  public const int DeviceInfoFieldNumber = 6;
  private string deviceInfo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceInfo {
    get { return deviceInfo_; }
    set {
      deviceInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_nickname" field.</summary>
  public const int UserNicknameFieldNumber = 7;
  private string userNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserNickname {
    get { return userNickname_; }
    set {
      userNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_icon_id" field.</summary>
  public const int UserIconIdFieldNumber = 8;
  private uint userIconId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserIconId {
    get { return userIconId_; }
    set {
      userIconId_ = value;
    }
  }

  /// <summary>Field number for the "user_type" field.</summary>
  public const int UserTypeFieldNumber = 9;
  private uint userType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "cellphone_num" field.</summary>
  public const int CellphoneNumFieldNumber = 10;
  private string cellphoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CellphoneNum {
    get { return cellphoneNum_; }
    set {
      cellphoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "invite_code" field.</summary>
  public const int InviteCodeFieldNumber = 11;
  private string inviteCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "verification_code" field.</summary>
  public const int VerificationCodeFieldNumber = 12;
  private string verificationCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VerificationCode {
    get { return verificationCode_; }
    set {
      verificationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "mail_addr" field.</summary>
  public const int MailAddrFieldNumber = 13;
  private string mailAddr_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailAddr {
    get { return mailAddr_; }
    set {
      mailAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "buy_lessons" field.</summary>
  public const int BuyLessonsFieldNumber = 14;
  private static readonly pbc::MapField<uint, uint>.Codec _map_buyLessons_codec
      = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForUInt32(16), 114);
  private readonly pbc::MapField<uint, uint> buyLessons_ = new pbc::MapField<uint, uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, uint> BuyLessons {
    get { return buyLessons_; }
  }

  /// <summary>Field number for the "active_days" field.</summary>
  public const int ActiveDaysFieldNumber = 15;
  private uint activeDays_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ActiveDays {
    get { return activeDays_; }
    set {
      activeDays_ = value;
    }
  }

  /// <summary>Field number for the "user_channel" field.</summary>
  public const int UserChannelFieldNumber = 16;
  private uint userChannel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserChannel {
    get { return userChannel_; }
    set {
      userChannel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Reg_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Reg_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (AccountName != other.AccountName) return false;
    if (AccountPass != other.AccountPass) return false;
    if (AccountType != other.AccountType) return false;
    if (AccountUnique != other.AccountUnique) return false;
    if (DeviceInfo != other.DeviceInfo) return false;
    if (UserNickname != other.UserNickname) return false;
    if (UserIconId != other.UserIconId) return false;
    if (UserType != other.UserType) return false;
    if (CellphoneNum != other.CellphoneNum) return false;
    if (InviteCode != other.InviteCode) return false;
    if (VerificationCode != other.VerificationCode) return false;
    if (MailAddr != other.MailAddr) return false;
    if (!BuyLessons.Equals(other.BuyLessons)) return false;
    if (ActiveDays != other.ActiveDays) return false;
    if (UserChannel != other.UserChannel) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (AccountName.Length != 0) hash ^= AccountName.GetHashCode();
    if (AccountPass.Length != 0) hash ^= AccountPass.GetHashCode();
    if (AccountType.Length != 0) hash ^= AccountType.GetHashCode();
    if (AccountUnique.Length != 0) hash ^= AccountUnique.GetHashCode();
    if (DeviceInfo.Length != 0) hash ^= DeviceInfo.GetHashCode();
    if (UserNickname.Length != 0) hash ^= UserNickname.GetHashCode();
    if (UserIconId != 0) hash ^= UserIconId.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (CellphoneNum.Length != 0) hash ^= CellphoneNum.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (VerificationCode.Length != 0) hash ^= VerificationCode.GetHashCode();
    if (MailAddr.Length != 0) hash ^= MailAddr.GetHashCode();
    hash ^= BuyLessons.GetHashCode();
    if (ActiveDays != 0) hash ^= ActiveDays.GetHashCode();
    if (UserChannel != 0) hash ^= UserChannel.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (AccountName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AccountName);
    }
    if (AccountPass.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(AccountPass);
    }
    if (AccountType.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(AccountType);
    }
    if (AccountUnique.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(AccountUnique);
    }
    if (DeviceInfo.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(DeviceInfo);
    }
    if (UserNickname.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(UserNickname);
    }
    if (UserIconId != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(UserIconId);
    }
    if (UserType != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(UserType);
    }
    if (CellphoneNum.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(CellphoneNum);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(InviteCode);
    }
    if (VerificationCode.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(VerificationCode);
    }
    if (MailAddr.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(MailAddr);
    }
    buyLessons_.WriteTo(output, _map_buyLessons_codec);
    if (ActiveDays != 0) {
      output.WriteRawTag(120);
      output.WriteUInt32(ActiveDays);
    }
    if (UserChannel != 0) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(UserChannel);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (AccountName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
    }
    if (AccountPass.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountPass);
    }
    if (AccountType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountType);
    }
    if (AccountUnique.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountUnique);
    }
    if (DeviceInfo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceInfo);
    }
    if (UserNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserNickname);
    }
    if (UserIconId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserIconId);
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserType);
    }
    if (CellphoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CellphoneNum);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (VerificationCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VerificationCode);
    }
    if (MailAddr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailAddr);
    }
    size += buyLessons_.CalculateSize(_map_buyLessons_codec);
    if (ActiveDays != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActiveDays);
    }
    if (UserChannel != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UserChannel);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Reg_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    if (other.AccountName.Length != 0) {
      AccountName = other.AccountName;
    }
    if (other.AccountPass.Length != 0) {
      AccountPass = other.AccountPass;
    }
    if (other.AccountType.Length != 0) {
      AccountType = other.AccountType;
    }
    if (other.AccountUnique.Length != 0) {
      AccountUnique = other.AccountUnique;
    }
    if (other.DeviceInfo.Length != 0) {
      DeviceInfo = other.DeviceInfo;
    }
    if (other.UserNickname.Length != 0) {
      UserNickname = other.UserNickname;
    }
    if (other.UserIconId != 0) {
      UserIconId = other.UserIconId;
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.CellphoneNum.Length != 0) {
      CellphoneNum = other.CellphoneNum;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    if (other.VerificationCode.Length != 0) {
      VerificationCode = other.VerificationCode;
    }
    if (other.MailAddr.Length != 0) {
      MailAddr = other.MailAddr;
    }
    buyLessons_.Add(other.buyLessons_);
    if (other.ActiveDays != 0) {
      ActiveDays = other.ActiveDays;
    }
    if (other.UserChannel != 0) {
      UserChannel = other.UserChannel;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          AccountName = input.ReadString();
          break;
        }
        case 26: {
          AccountPass = input.ReadString();
          break;
        }
        case 34: {
          AccountType = input.ReadString();
          break;
        }
        case 42: {
          AccountUnique = input.ReadString();
          break;
        }
        case 50: {
          DeviceInfo = input.ReadString();
          break;
        }
        case 58: {
          UserNickname = input.ReadString();
          break;
        }
        case 64: {
          UserIconId = input.ReadUInt32();
          break;
        }
        case 72: {
          UserType = input.ReadUInt32();
          break;
        }
        case 82: {
          CellphoneNum = input.ReadString();
          break;
        }
        case 90: {
          InviteCode = input.ReadString();
          break;
        }
        case 98: {
          VerificationCode = input.ReadString();
          break;
        }
        case 106: {
          MailAddr = input.ReadString();
          break;
        }
        case 114: {
          buyLessons_.AddEntriesFrom(input, _map_buyLessons_codec);
          break;
        }
        case 120: {
          ActiveDays = input.ReadUInt32();
          break;
        }
        case 128: {
          UserChannel = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_reg_a
/// </summary>
public sealed partial class CMD_Reg_a_Parameters : pb::IMessage<CMD_Reg_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Reg_a_Parameters> _parser = new pb::MessageParser<CMD_Reg_a_Parameters>(() => new CMD_Reg_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Reg_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reg_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reg_a_Parameters(CMD_Reg_a_Parameters other) : this() {
    accountId_ = other.accountId_;
    roleId_ = other.roleId_;
    accountToken_ = other.accountToken_;
    userNickname_ = other.userNickname_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reg_a_Parameters Clone() {
    return new CMD_Reg_a_Parameters(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  /// <summary>Field number for the "role_id" field.</summary>
  public const int RoleIdFieldNumber = 2;
  private uint roleId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint RoleId {
    get { return roleId_; }
    set {
      roleId_ = value;
    }
  }

  /// <summary>Field number for the "account_token" field.</summary>
  public const int AccountTokenFieldNumber = 3;
  private string accountToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountToken {
    get { return accountToken_; }
    set {
      accountToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_nickname" field.</summary>
  public const int UserNicknameFieldNumber = 4;
  private string userNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserNickname {
    get { return userNickname_; }
    set {
      userNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Reg_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Reg_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (RoleId != other.RoleId) return false;
    if (AccountToken != other.AccountToken) return false;
    if (UserNickname != other.UserNickname) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (RoleId != 0) hash ^= RoleId.GetHashCode();
    if (AccountToken.Length != 0) hash ^= AccountToken.GetHashCode();
    if (UserNickname.Length != 0) hash ^= UserNickname.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (RoleId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(RoleId);
    }
    if (AccountToken.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(AccountToken);
    }
    if (UserNickname.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(UserNickname);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (RoleId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoleId);
    }
    if (AccountToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountToken);
    }
    if (UserNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserNickname);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Reg_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    if (other.RoleId != 0) {
      RoleId = other.RoleId;
    }
    if (other.AccountToken.Length != 0) {
      AccountToken = other.AccountToken;
    }
    if (other.UserNickname.Length != 0) {
      UserNickname = other.UserNickname;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 16: {
          RoleId = input.ReadUInt32();
          break;
        }
        case 26: {
          AccountToken = input.ReadString();
          break;
        }
        case 34: {
          UserNickname = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_login_r
/// </summary>
public sealed partial class CMD_Account_Login_r_Parameters : pb::IMessage<CMD_Account_Login_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Account_Login_r_Parameters> _parser = new pb::MessageParser<CMD_Account_Login_r_Parameters>(() => new CMD_Account_Login_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Account_Login_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Account_Login_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Account_Login_r_Parameters(CMD_Account_Login_r_Parameters other) : this() {
    accountName_ = other.accountName_;
    accountPass_ = other.accountPass_;
    accountId_ = other.accountId_;
    loginType_ = other.loginType_;
    deviceInfo_ = other.deviceInfo_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Account_Login_r_Parameters Clone() {
    return new CMD_Account_Login_r_Parameters(this);
  }

  /// <summary>Field number for the "account_name" field.</summary>
  public const int AccountNameFieldNumber = 1;
  private string accountName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountName {
    get { return accountName_; }
    set {
      accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "account_pass" field.</summary>
  public const int AccountPassFieldNumber = 2;
  private string accountPass_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountPass {
    get { return accountPass_; }
    set {
      accountPass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 3;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  /// <summary>Field number for the "login_type" field.</summary>
  public const int LoginTypeFieldNumber = 4;
  private uint loginType_;
  /// <summary>
  /// 0 - app, 1 - web
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint LoginType {
    get { return loginType_; }
    set {
      loginType_ = value;
    }
  }

  /// <summary>Field number for the "device_info" field.</summary>
  public const int DeviceInfoFieldNumber = 5;
  private string deviceInfo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceInfo {
    get { return deviceInfo_; }
    set {
      deviceInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Account_Login_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Account_Login_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountName != other.AccountName) return false;
    if (AccountPass != other.AccountPass) return false;
    if (AccountId != other.AccountId) return false;
    if (LoginType != other.LoginType) return false;
    if (DeviceInfo != other.DeviceInfo) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountName.Length != 0) hash ^= AccountName.GetHashCode();
    if (AccountPass.Length != 0) hash ^= AccountPass.GetHashCode();
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (LoginType != 0) hash ^= LoginType.GetHashCode();
    if (DeviceInfo.Length != 0) hash ^= DeviceInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AccountName);
    }
    if (AccountPass.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AccountPass);
    }
    if (AccountId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(AccountId);
    }
    if (LoginType != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(LoginType);
    }
    if (DeviceInfo.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(DeviceInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
    }
    if (AccountPass.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountPass);
    }
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (LoginType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoginType);
    }
    if (DeviceInfo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Account_Login_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AccountName.Length != 0) {
      AccountName = other.AccountName;
    }
    if (other.AccountPass.Length != 0) {
      AccountPass = other.AccountPass;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    if (other.LoginType != 0) {
      LoginType = other.LoginType;
    }
    if (other.DeviceInfo.Length != 0) {
      DeviceInfo = other.DeviceInfo;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AccountName = input.ReadString();
          break;
        }
        case 18: {
          AccountPass = input.ReadString();
          break;
        }
        case 24: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 32: {
          LoginType = input.ReadUInt32();
          break;
        }
        case 42: {
          DeviceInfo = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_login_a
/// </summary>
public sealed partial class CMD_Account_Login_a_Parameters : pb::IMessage<CMD_Account_Login_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Account_Login_a_Parameters> _parser = new pb::MessageParser<CMD_Account_Login_a_Parameters>(() => new CMD_Account_Login_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Account_Login_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Account_Login_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Account_Login_a_Parameters(CMD_Account_Login_a_Parameters other) : this() {
    accountId_ = other.accountId_;
    accountToken_ = other.accountToken_;
    UserInfo = other.userInfo_ != null ? other.UserInfo.Clone() : null;
    loginType_ = other.loginType_;
    srvTime_ = other.srvTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Account_Login_a_Parameters Clone() {
    return new CMD_Account_Login_a_Parameters(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccountId {
    get { return accountId_; }
    set {
      accountId_ = value;
    }
  }

  /// <summary>Field number for the "account_token" field.</summary>
  public const int AccountTokenFieldNumber = 2;
  private string accountToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccountToken {
    get { return accountToken_; }
    set {
      accountToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_info" field.</summary>
  public const int UserInfoFieldNumber = 3;
  private global::A8_User_Info userInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_User_Info UserInfo {
    get { return userInfo_; }
    set {
      userInfo_ = value;
    }
  }

  /// <summary>Field number for the "login_type" field.</summary>
  public const int LoginTypeFieldNumber = 4;
  private uint loginType_;
  /// <summary>
  /// 0 - app, 1 - web
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint LoginType {
    get { return loginType_; }
    set {
      loginType_ = value;
    }
  }

  /// <summary>Field number for the "srv_time" field.</summary>
  public const int SrvTimeFieldNumber = 5;
  private ulong srvTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong SrvTime {
    get { return srvTime_; }
    set {
      srvTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Account_Login_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Account_Login_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if (AccountToken != other.AccountToken) return false;
    if (!object.Equals(UserInfo, other.UserInfo)) return false;
    if (LoginType != other.LoginType) return false;
    if (SrvTime != other.SrvTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccountId != 0) hash ^= AccountId.GetHashCode();
    if (AccountToken.Length != 0) hash ^= AccountToken.GetHashCode();
    if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
    if (LoginType != 0) hash ^= LoginType.GetHashCode();
    if (SrvTime != 0UL) hash ^= SrvTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccountId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    if (AccountToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AccountToken);
    }
    if (userInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(UserInfo);
    }
    if (LoginType != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(LoginType);
    }
    if (SrvTime != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(SrvTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccountId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    if (AccountToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountToken);
    }
    if (userInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
    }
    if (LoginType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoginType);
    }
    if (SrvTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SrvTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Account_Login_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AccountId != 0) {
      AccountId = other.AccountId;
    }
    if (other.AccountToken.Length != 0) {
      AccountToken = other.AccountToken;
    }
    if (other.userInfo_ != null) {
      if (userInfo_ == null) {
        userInfo_ = new global::A8_User_Info();
      }
      UserInfo.MergeFrom(other.UserInfo);
    }
    if (other.LoginType != 0) {
      LoginType = other.LoginType;
    }
    if (other.SrvTime != 0UL) {
      SrvTime = other.SrvTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          AccountToken = input.ReadString();
          break;
        }
        case 26: {
          if (userInfo_ == null) {
            userInfo_ = new global::A8_User_Info();
          }
          input.ReadMessage(userInfo_);
          break;
        }
        case 32: {
          LoginType = input.ReadUInt32();
          break;
        }
        case 40: {
          SrvTime = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_logout_r			   = 5;
/// </summary>
public sealed partial class CMD_Logout_r_Parameters : pb::IMessage<CMD_Logout_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Logout_r_Parameters> _parser = new pb::MessageParser<CMD_Logout_r_Parameters>(() => new CMD_Logout_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Logout_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Logout_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Logout_r_Parameters(CMD_Logout_r_Parameters other) : this() {
    userId_ = other.userId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Logout_r_Parameters Clone() {
    return new CMD_Logout_r_Parameters(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private uint userId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Logout_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Logout_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(UserId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Logout_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          UserId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_logout_a			   = 6;
/// </summary>
public sealed partial class CMD_Logout_a_Parameters : pb::IMessage<CMD_Logout_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Logout_a_Parameters> _parser = new pb::MessageParser<CMD_Logout_a_Parameters>(() => new CMD_Logout_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Logout_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Logout_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Logout_a_Parameters(CMD_Logout_a_Parameters other) : this() {
    userId_ = other.userId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Logout_a_Parameters Clone() {
    return new CMD_Logout_a_Parameters(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private uint userId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Logout_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Logout_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(UserId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Logout_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          UserId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///   cmd_get_verification_code_r= 7;
/// </summary>
public sealed partial class CMD_Get_Verification_Code_r_Parameters : pb::IMessage<CMD_Get_Verification_Code_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Verification_Code_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Verification_Code_r_Parameters>(() => new CMD_Get_Verification_Code_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Verification_Code_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Verification_Code_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Verification_Code_r_Parameters(CMD_Get_Verification_Code_r_Parameters other) : this() {
    cellphoneNum_ = other.cellphoneNum_;
    vcType_ = other.vcType_;
    inviteCode_ = other.inviteCode_;
    strToken_ = other.strToken_;
    userChannel_ = other.userChannel_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Verification_Code_r_Parameters Clone() {
    return new CMD_Get_Verification_Code_r_Parameters(this);
  }

  /// <summary>Field number for the "cellphone_num" field.</summary>
  public const int CellphoneNumFieldNumber = 1;
  private string cellphoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CellphoneNum {
    get { return cellphoneNum_; }
    set {
      cellphoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "vc_type" field.</summary>
  public const int VcTypeFieldNumber = 2;
  private uint vcType_;
  /// <summary>
  /// 0-reg, 1-reset password, 2-bind, 3-unbind
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint VcType {
    get { return vcType_; }
    set {
      vcType_ = value;
    }
  }

  /// <summary>Field number for the "invite_code" field.</summary>
  public const int InviteCodeFieldNumber = 3;
  private string inviteCode_ = "";
  /// <summary>
  /// when reg need check
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "str_token" field.</summary>
  public const int StrTokenFieldNumber = 4;
  private string strToken_ = "";
  /// <summary>
  /// when bind cellphone_num or email
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StrToken {
    get { return strToken_; }
    set {
      strToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_channel" field.</summary>
  public const int UserChannelFieldNumber = 5;
  private uint userChannel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserChannel {
    get { return userChannel_; }
    set {
      userChannel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Verification_Code_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Verification_Code_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CellphoneNum != other.CellphoneNum) return false;
    if (VcType != other.VcType) return false;
    if (InviteCode != other.InviteCode) return false;
    if (StrToken != other.StrToken) return false;
    if (UserChannel != other.UserChannel) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CellphoneNum.Length != 0) hash ^= CellphoneNum.GetHashCode();
    if (VcType != 0) hash ^= VcType.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (StrToken.Length != 0) hash ^= StrToken.GetHashCode();
    if (UserChannel != 0) hash ^= UserChannel.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CellphoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CellphoneNum);
    }
    if (VcType != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(VcType);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(InviteCode);
    }
    if (StrToken.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(StrToken);
    }
    if (UserChannel != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(UserChannel);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CellphoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CellphoneNum);
    }
    if (VcType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VcType);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (StrToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StrToken);
    }
    if (UserChannel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserChannel);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Verification_Code_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CellphoneNum.Length != 0) {
      CellphoneNum = other.CellphoneNum;
    }
    if (other.VcType != 0) {
      VcType = other.VcType;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    if (other.StrToken.Length != 0) {
      StrToken = other.StrToken;
    }
    if (other.UserChannel != 0) {
      UserChannel = other.UserChannel;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CellphoneNum = input.ReadString();
          break;
        }
        case 16: {
          VcType = input.ReadUInt32();
          break;
        }
        case 26: {
          InviteCode = input.ReadString();
          break;
        }
        case 34: {
          StrToken = input.ReadString();
          break;
        }
        case 40: {
          UserChannel = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_verification_code_a= 8;
/// </summary>
public sealed partial class CMD_Get_Verification_Code_a_Parameters : pb::IMessage<CMD_Get_Verification_Code_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Verification_Code_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Verification_Code_a_Parameters>(() => new CMD_Get_Verification_Code_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Verification_Code_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Verification_Code_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Verification_Code_a_Parameters(CMD_Get_Verification_Code_a_Parameters other) : this() {
    cellphoneNum_ = other.cellphoneNum_;
    verificationCode_ = other.verificationCode_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Verification_Code_a_Parameters Clone() {
    return new CMD_Get_Verification_Code_a_Parameters(this);
  }

  /// <summary>Field number for the "cellphone_num" field.</summary>
  public const int CellphoneNumFieldNumber = 1;
  private string cellphoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CellphoneNum {
    get { return cellphoneNum_; }
    set {
      cellphoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "verification_code" field.</summary>
  public const int VerificationCodeFieldNumber = 2;
  private string verificationCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VerificationCode {
    get { return verificationCode_; }
    set {
      verificationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Verification_Code_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Verification_Code_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CellphoneNum != other.CellphoneNum) return false;
    if (VerificationCode != other.VerificationCode) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CellphoneNum.Length != 0) hash ^= CellphoneNum.GetHashCode();
    if (VerificationCode.Length != 0) hash ^= VerificationCode.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CellphoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CellphoneNum);
    }
    if (VerificationCode.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(VerificationCode);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CellphoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CellphoneNum);
    }
    if (VerificationCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VerificationCode);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Verification_Code_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CellphoneNum.Length != 0) {
      CellphoneNum = other.CellphoneNum;
    }
    if (other.VerificationCode.Length != 0) {
      VerificationCode = other.VerificationCode;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CellphoneNum = input.ReadString();
          break;
        }
        case 18: {
          VerificationCode = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_reset_password_r	   = 9;
/// </summary>
public sealed partial class CMD_Reset_Password_r_Parameters : pb::IMessage<CMD_Reset_Password_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Reset_Password_r_Parameters> _parser = new pb::MessageParser<CMD_Reset_Password_r_Parameters>(() => new CMD_Reset_Password_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Reset_Password_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reset_Password_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reset_Password_r_Parameters(CMD_Reset_Password_r_Parameters other) : this() {
    newPassword_ = other.newPassword_;
    verificationCode_ = other.verificationCode_;
    cellphoneNum_ = other.cellphoneNum_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reset_Password_r_Parameters Clone() {
    return new CMD_Reset_Password_r_Parameters(this);
  }

  /// <summary>Field number for the "new_password" field.</summary>
  public const int NewPasswordFieldNumber = 1;
  private string newPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewPassword {
    get { return newPassword_; }
    set {
      newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "verification_code" field.</summary>
  public const int VerificationCodeFieldNumber = 2;
  private string verificationCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VerificationCode {
    get { return verificationCode_; }
    set {
      verificationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cellphone_num" field.</summary>
  public const int CellphoneNumFieldNumber = 3;
  private string cellphoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CellphoneNum {
    get { return cellphoneNum_; }
    set {
      cellphoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Reset_Password_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Reset_Password_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NewPassword != other.NewPassword) return false;
    if (VerificationCode != other.VerificationCode) return false;
    if (CellphoneNum != other.CellphoneNum) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
    if (VerificationCode.Length != 0) hash ^= VerificationCode.GetHashCode();
    if (CellphoneNum.Length != 0) hash ^= CellphoneNum.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NewPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(NewPassword);
    }
    if (VerificationCode.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(VerificationCode);
    }
    if (CellphoneNum.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(CellphoneNum);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NewPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
    }
    if (VerificationCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VerificationCode);
    }
    if (CellphoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CellphoneNum);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Reset_Password_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.NewPassword.Length != 0) {
      NewPassword = other.NewPassword;
    }
    if (other.VerificationCode.Length != 0) {
      VerificationCode = other.VerificationCode;
    }
    if (other.CellphoneNum.Length != 0) {
      CellphoneNum = other.CellphoneNum;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          NewPassword = input.ReadString();
          break;
        }
        case 18: {
          VerificationCode = input.ReadString();
          break;
        }
        case 26: {
          CellphoneNum = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_reset_password_a	   = 10;
/// </summary>
public sealed partial class CMD_Reset_Password_a_Parameters : pb::IMessage<CMD_Reset_Password_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Reset_Password_a_Parameters> _parser = new pb::MessageParser<CMD_Reset_Password_a_Parameters>(() => new CMD_Reset_Password_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Reset_Password_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reset_Password_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reset_Password_a_Parameters(CMD_Reset_Password_a_Parameters other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Reset_Password_a_Parameters Clone() {
    return new CMD_Reset_Password_a_Parameters(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Reset_Password_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Reset_Password_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Reset_Password_a_Parameters other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// 	cmd_use_activation_code_r	   = 11;
/// </summary>
public sealed partial class CMD_Use_Activation_Code_r_Parameters : pb::IMessage<CMD_Use_Activation_Code_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Use_Activation_Code_r_Parameters> _parser = new pb::MessageParser<CMD_Use_Activation_Code_r_Parameters>(() => new CMD_Use_Activation_Code_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Use_Activation_Code_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Use_Activation_Code_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Use_Activation_Code_r_Parameters(CMD_Use_Activation_Code_r_Parameters other) : this() {
    activationCode_ = other.activationCode_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Use_Activation_Code_r_Parameters Clone() {
    return new CMD_Use_Activation_Code_r_Parameters(this);
  }

  /// <summary>Field number for the "activation_code" field.</summary>
  public const int ActivationCodeFieldNumber = 1;
  private string activationCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ActivationCode {
    get { return activationCode_; }
    set {
      activationCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Use_Activation_Code_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Use_Activation_Code_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ActivationCode != other.ActivationCode) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ActivationCode.Length != 0) hash ^= ActivationCode.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ActivationCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ActivationCode);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ActivationCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivationCode);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Use_Activation_Code_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ActivationCode.Length != 0) {
      ActivationCode = other.ActivationCode;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ActivationCode = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_use_activation_code_a	   = 12;
/// </summary>
public sealed partial class CMD_Use_Activation_Code_a_Parameters : pb::IMessage<CMD_Use_Activation_Code_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Use_Activation_Code_a_Parameters> _parser = new pb::MessageParser<CMD_Use_Activation_Code_a_Parameters>(() => new CMD_Use_Activation_Code_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Use_Activation_Code_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Use_Activation_Code_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Use_Activation_Code_a_Parameters(CMD_Use_Activation_Code_a_Parameters other) : this() {
    userType_ = other.userType_;
    expiredTime_ = other.expiredTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Use_Activation_Code_a_Parameters Clone() {
    return new CMD_Use_Activation_Code_a_Parameters(this);
  }

  /// <summary>Field number for the "user_type" field.</summary>
  public const int UserTypeFieldNumber = 1;
  private uint userType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "expired_time" field.</summary>
  public const int ExpiredTimeFieldNumber = 2;
  private ulong expiredTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ExpiredTime {
    get { return expiredTime_; }
    set {
      expiredTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Use_Activation_Code_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Use_Activation_Code_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserType != other.UserType) return false;
    if (ExpiredTime != other.ExpiredTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (ExpiredTime != 0UL) hash ^= ExpiredTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserType != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(UserType);
    }
    if (ExpiredTime != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(ExpiredTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserType);
    }
    if (ExpiredTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpiredTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Use_Activation_Code_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.ExpiredTime != 0UL) {
      ExpiredTime = other.ExpiredTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          UserType = input.ReadUInt32();
          break;
        }
        case 16: {
          ExpiredTime = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_change_nickname_r	   = 15;
/// </summary>
public sealed partial class CMD_Change_Nickname_r_Parameters : pb::IMessage<CMD_Change_Nickname_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Change_Nickname_r_Parameters> _parser = new pb::MessageParser<CMD_Change_Nickname_r_Parameters>(() => new CMD_Change_Nickname_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Change_Nickname_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Change_Nickname_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Change_Nickname_r_Parameters(CMD_Change_Nickname_r_Parameters other) : this() {
    newNickname_ = other.newNickname_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Change_Nickname_r_Parameters Clone() {
    return new CMD_Change_Nickname_r_Parameters(this);
  }

  /// <summary>Field number for the "new_nickname" field.</summary>
  public const int NewNicknameFieldNumber = 1;
  private string newNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewNickname {
    get { return newNickname_; }
    set {
      newNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Change_Nickname_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Change_Nickname_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NewNickname != other.NewNickname) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NewNickname.Length != 0) hash ^= NewNickname.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NewNickname.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(NewNickname);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NewNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewNickname);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Change_Nickname_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.NewNickname.Length != 0) {
      NewNickname = other.NewNickname;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          NewNickname = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_change_nickname_a      = 16;
/// </summary>
public sealed partial class CMD_Change_Nickname_a_Parameters : pb::IMessage<CMD_Change_Nickname_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Change_Nickname_a_Parameters> _parser = new pb::MessageParser<CMD_Change_Nickname_a_Parameters>(() => new CMD_Change_Nickname_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Change_Nickname_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Change_Nickname_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Change_Nickname_a_Parameters(CMD_Change_Nickname_a_Parameters other) : this() {
    newNickname_ = other.newNickname_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Change_Nickname_a_Parameters Clone() {
    return new CMD_Change_Nickname_a_Parameters(this);
  }

  /// <summary>Field number for the "new_nickname" field.</summary>
  public const int NewNicknameFieldNumber = 1;
  private string newNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewNickname {
    get { return newNickname_; }
    set {
      newNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Change_Nickname_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Change_Nickname_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NewNickname != other.NewNickname) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NewNickname.Length != 0) hash ^= NewNickname.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NewNickname.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(NewNickname);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NewNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewNickname);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Change_Nickname_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.NewNickname.Length != 0) {
      NewNickname = other.NewNickname;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          NewNickname = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_rbind_r				   = 17;
/// </summary>
public sealed partial class CMD_Rbind_r_Parameters : pb::IMessage<CMD_Rbind_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Rbind_r_Parameters> _parser = new pb::MessageParser<CMD_Rbind_r_Parameters>(() => new CMD_Rbind_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Rbind_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Rbind_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Rbind_r_Parameters(CMD_Rbind_r_Parameters other) : this() {
    phoneNum_ = other.phoneNum_;
    mailAddr_ = other.mailAddr_;
    verifyCode_ = other.verifyCode_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Rbind_r_Parameters Clone() {
    return new CMD_Rbind_r_Parameters(this);
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 1;
  private string phoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "mail_addr" field.</summary>
  public const int MailAddrFieldNumber = 2;
  private string mailAddr_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailAddr {
    get { return mailAddr_; }
    set {
      mailAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "verify_code" field.</summary>
  public const int VerifyCodeFieldNumber = 3;
  private string verifyCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VerifyCode {
    get { return verifyCode_; }
    set {
      verifyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Rbind_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Rbind_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PhoneNum != other.PhoneNum) return false;
    if (MailAddr != other.MailAddr) return false;
    if (VerifyCode != other.VerifyCode) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (MailAddr.Length != 0) hash ^= MailAddr.GetHashCode();
    if (VerifyCode.Length != 0) hash ^= VerifyCode.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PhoneNum);
    }
    if (MailAddr.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(MailAddr);
    }
    if (VerifyCode.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(VerifyCode);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (MailAddr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailAddr);
    }
    if (VerifyCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VerifyCode);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Rbind_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.MailAddr.Length != 0) {
      MailAddr = other.MailAddr;
    }
    if (other.VerifyCode.Length != 0) {
      VerifyCode = other.VerifyCode;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          PhoneNum = input.ReadString();
          break;
        }
        case 18: {
          MailAddr = input.ReadString();
          break;
        }
        case 26: {
          VerifyCode = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_rbind_a				   = 18;
/// </summary>
public sealed partial class CMD_Rbind_a_Parameters : pb::IMessage<CMD_Rbind_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Rbind_a_Parameters> _parser = new pb::MessageParser<CMD_Rbind_a_Parameters>(() => new CMD_Rbind_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Rbind_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Rbind_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Rbind_a_Parameters(CMD_Rbind_a_Parameters other) : this() {
    phoneNum_ = other.phoneNum_;
    mailAddr_ = other.mailAddr_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Rbind_a_Parameters Clone() {
    return new CMD_Rbind_a_Parameters(this);
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 1;
  private string phoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "mail_addr" field.</summary>
  public const int MailAddrFieldNumber = 2;
  private string mailAddr_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailAddr {
    get { return mailAddr_; }
    set {
      mailAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Rbind_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Rbind_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PhoneNum != other.PhoneNum) return false;
    if (MailAddr != other.MailAddr) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (MailAddr.Length != 0) hash ^= MailAddr.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PhoneNum);
    }
    if (MailAddr.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(MailAddr);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (MailAddr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailAddr);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Rbind_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.MailAddr.Length != 0) {
      MailAddr = other.MailAddr;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          PhoneNum = input.ReadString();
          break;
        }
        case 18: {
          MailAddr = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///   cmd_modify_password_r = 19;
/// </summary>
public sealed partial class CMD_Modify_Password_r_Parameters : pb::IMessage<CMD_Modify_Password_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Password_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Password_r_Parameters>(() => new CMD_Modify_Password_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Password_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Password_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Password_r_Parameters(CMD_Modify_Password_r_Parameters other) : this() {
    newPassword_ = other.newPassword_;
    oldPassword_ = other.oldPassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Password_r_Parameters Clone() {
    return new CMD_Modify_Password_r_Parameters(this);
  }

  /// <summary>Field number for the "new_password" field.</summary>
  public const int NewPasswordFieldNumber = 1;
  private string newPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewPassword {
    get { return newPassword_; }
    set {
      newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "old_password" field.</summary>
  public const int OldPasswordFieldNumber = 2;
  private string oldPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OldPassword {
    get { return oldPassword_; }
    set {
      oldPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Password_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Password_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NewPassword != other.NewPassword) return false;
    if (OldPassword != other.OldPassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
    if (OldPassword.Length != 0) hash ^= OldPassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NewPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(NewPassword);
    }
    if (OldPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(OldPassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NewPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
    }
    if (OldPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Password_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.NewPassword.Length != 0) {
      NewPassword = other.NewPassword;
    }
    if (other.OldPassword.Length != 0) {
      OldPassword = other.OldPassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          NewPassword = input.ReadString();
          break;
        }
        case 18: {
          OldPassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_password_a	   = 20;
/// </summary>
public sealed partial class CMD_Modify_Password_a_Parameters : pb::IMessage<CMD_Modify_Password_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Password_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Password_a_Parameters>(() => new CMD_Modify_Password_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Password_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Password_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Password_a_Parameters(CMD_Modify_Password_a_Parameters other) : this() {
    newPassword_ = other.newPassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Password_a_Parameters Clone() {
    return new CMD_Modify_Password_a_Parameters(this);
  }

  /// <summary>Field number for the "new_password" field.</summary>
  public const int NewPasswordFieldNumber = 1;
  private string newPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewPassword {
    get { return newPassword_; }
    set {
      newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Password_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Password_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NewPassword != other.NewPassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (NewPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(NewPassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (NewPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Password_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.NewPassword.Length != 0) {
      NewPassword = other.NewPassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_shared_r		   = 21;
/// </summary>
public sealed partial class CMD_Add_Shared_r_Parameters : pb::IMessage<CMD_Add_Shared_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Shared_r_Parameters> _parser = new pb::MessageParser<CMD_Add_Shared_r_Parameters>(() => new CMD_Add_Shared_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Shared_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Shared_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Shared_r_Parameters(CMD_Add_Shared_r_Parameters other) : this() {
    sharedOpts_ = other.sharedOpts_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Shared_r_Parameters Clone() {
    return new CMD_Add_Shared_r_Parameters(this);
  }

  /// <summary>Field number for the "shared_opts" field.</summary>
  public const int SharedOptsFieldNumber = 1;
  private string sharedOpts_ = "";
  /// <summary>
  ///  json_string
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedOpts {
    get { return sharedOpts_; }
    set {
      sharedOpts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Shared_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Shared_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedOpts != other.SharedOpts) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedOpts.Length != 0) hash ^= SharedOpts.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedOpts.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SharedOpts);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedOpts.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedOpts);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Shared_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedOpts.Length != 0) {
      SharedOpts = other.SharedOpts;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          SharedOpts = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Shared_Info : pb::IMessage<Shared_Info> {
  private static readonly pb::MessageParser<Shared_Info> _parser = new pb::MessageParser<Shared_Info>(() => new Shared_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Shared_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Shared_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Shared_Info(Shared_Info other) : this() {
    sharedId_ = other.sharedId_;
    sharedOpts_ = other.sharedOpts_;
    createId_ = other.createId_;
    createNickname_ = other.createNickname_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Shared_Info Clone() {
    return new Shared_Info(this);
  }

  /// <summary>Field number for the "shared_id" field.</summary>
  public const int SharedIdFieldNumber = 1;
  private uint sharedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SharedId {
    get { return sharedId_; }
    set {
      sharedId_ = value;
    }
  }

  /// <summary>Field number for the "shared_opts" field.</summary>
  public const int SharedOptsFieldNumber = 2;
  private string sharedOpts_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedOpts {
    get { return sharedOpts_; }
    set {
      sharedOpts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "create_id" field.</summary>
  public const int CreateIdFieldNumber = 3;
  private uint createId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CreateId {
    get { return createId_; }
    set {
      createId_ = value;
    }
  }

  /// <summary>Field number for the "create_nickname" field.</summary>
  public const int CreateNicknameFieldNumber = 4;
  private string createNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CreateNickname {
    get { return createNickname_; }
    set {
      createNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Shared_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Shared_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedId != other.SharedId) return false;
    if (SharedOpts != other.SharedOpts) return false;
    if (CreateId != other.CreateId) return false;
    if (CreateNickname != other.CreateNickname) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedId != 0) hash ^= SharedId.GetHashCode();
    if (SharedOpts.Length != 0) hash ^= SharedOpts.GetHashCode();
    if (CreateId != 0) hash ^= CreateId.GetHashCode();
    if (CreateNickname.Length != 0) hash ^= CreateNickname.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SharedId);
    }
    if (SharedOpts.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SharedOpts);
    }
    if (CreateId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(CreateId);
    }
    if (CreateNickname.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(CreateNickname);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SharedId);
    }
    if (SharedOpts.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedOpts);
    }
    if (CreateId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreateId);
    }
    if (CreateNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateNickname);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Shared_Info other) {
    if (other == null) {
      return;
    }
    if (other.SharedId != 0) {
      SharedId = other.SharedId;
    }
    if (other.SharedOpts.Length != 0) {
      SharedOpts = other.SharedOpts;
    }
    if (other.CreateId != 0) {
      CreateId = other.CreateId;
    }
    if (other.CreateNickname.Length != 0) {
      CreateNickname = other.CreateNickname;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SharedId = input.ReadUInt32();
          break;
        }
        case 18: {
          SharedOpts = input.ReadString();
          break;
        }
        case 24: {
          CreateId = input.ReadUInt32();
          break;
        }
        case 34: {
          CreateNickname = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_shared_a		   = 22;
/// </summary>
public sealed partial class CMD_Add_Shared_a_Parameters : pb::IMessage<CMD_Add_Shared_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Shared_a_Parameters> _parser = new pb::MessageParser<CMD_Add_Shared_a_Parameters>(() => new CMD_Add_Shared_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Shared_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Shared_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Shared_a_Parameters(CMD_Add_Shared_a_Parameters other) : this() {
    sharedId_ = other.sharedId_;
    sharedOpts_ = other.sharedOpts_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Shared_a_Parameters Clone() {
    return new CMD_Add_Shared_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_id" field.</summary>
  public const int SharedIdFieldNumber = 1;
  private uint sharedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SharedId {
    get { return sharedId_; }
    set {
      sharedId_ = value;
    }
  }

  /// <summary>Field number for the "shared_opts" field.</summary>
  public const int SharedOptsFieldNumber = 2;
  private string sharedOpts_ = "";
  /// <summary>
  ///  json_string
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedOpts {
    get { return sharedOpts_; }
    set {
      sharedOpts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Shared_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Shared_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedId != other.SharedId) return false;
    if (SharedOpts != other.SharedOpts) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedId != 0) hash ^= SharedId.GetHashCode();
    if (SharedOpts.Length != 0) hash ^= SharedOpts.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SharedId);
    }
    if (SharedOpts.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SharedOpts);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SharedId);
    }
    if (SharedOpts.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedOpts);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Shared_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedId != 0) {
      SharedId = other.SharedId;
    }
    if (other.SharedOpts.Length != 0) {
      SharedOpts = other.SharedOpts;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SharedId = input.ReadUInt32();
          break;
        }
        case 18: {
          SharedOpts = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_shared_r		   = 23;
/// </summary>
public sealed partial class CMD_Modify_Shared_r_Parameters : pb::IMessage<CMD_Modify_Shared_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Shared_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Shared_r_Parameters>(() => new CMD_Modify_Shared_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Shared_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Shared_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Shared_r_Parameters(CMD_Modify_Shared_r_Parameters other) : this() {
    sharedId_ = other.sharedId_;
    sharedOpts_ = other.sharedOpts_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Shared_r_Parameters Clone() {
    return new CMD_Modify_Shared_r_Parameters(this);
  }

  /// <summary>Field number for the "shared_id" field.</summary>
  public const int SharedIdFieldNumber = 1;
  private uint sharedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SharedId {
    get { return sharedId_; }
    set {
      sharedId_ = value;
    }
  }

  /// <summary>Field number for the "shared_opts" field.</summary>
  public const int SharedOptsFieldNumber = 2;
  private string sharedOpts_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedOpts {
    get { return sharedOpts_; }
    set {
      sharedOpts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Shared_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Shared_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedId != other.SharedId) return false;
    if (SharedOpts != other.SharedOpts) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedId != 0) hash ^= SharedId.GetHashCode();
    if (SharedOpts.Length != 0) hash ^= SharedOpts.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SharedId);
    }
    if (SharedOpts.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SharedOpts);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SharedId);
    }
    if (SharedOpts.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedOpts);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Shared_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedId != 0) {
      SharedId = other.SharedId;
    }
    if (other.SharedOpts.Length != 0) {
      SharedOpts = other.SharedOpts;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SharedId = input.ReadUInt32();
          break;
        }
        case 18: {
          SharedOpts = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_shared_a		   = 24;
/// </summary>
public sealed partial class CMD_Modify_Shared_a_Parameters : pb::IMessage<CMD_Modify_Shared_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Shared_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Shared_a_Parameters>(() => new CMD_Modify_Shared_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Shared_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Shared_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Shared_a_Parameters(CMD_Modify_Shared_a_Parameters other) : this() {
    sharedId_ = other.sharedId_;
    sharedOpts_ = other.sharedOpts_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Shared_a_Parameters Clone() {
    return new CMD_Modify_Shared_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_id" field.</summary>
  public const int SharedIdFieldNumber = 1;
  private uint sharedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SharedId {
    get { return sharedId_; }
    set {
      sharedId_ = value;
    }
  }

  /// <summary>Field number for the "shared_opts" field.</summary>
  public const int SharedOptsFieldNumber = 2;
  private string sharedOpts_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedOpts {
    get { return sharedOpts_; }
    set {
      sharedOpts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Shared_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Shared_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedId != other.SharedId) return false;
    if (SharedOpts != other.SharedOpts) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedId != 0) hash ^= SharedId.GetHashCode();
    if (SharedOpts.Length != 0) hash ^= SharedOpts.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SharedId);
    }
    if (SharedOpts.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SharedOpts);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SharedId);
    }
    if (SharedOpts.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedOpts);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Shared_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedId != 0) {
      SharedId = other.SharedId;
    }
    if (other.SharedOpts.Length != 0) {
      SharedOpts = other.SharedOpts;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SharedId = input.ReadUInt32();
          break;
        }
        case 18: {
          SharedOpts = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_shared_r		   = 25;
/// </summary>
public sealed partial class CMD_Del_Shared_r_Parameters : pb::IMessage<CMD_Del_Shared_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Shared_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Shared_r_Parameters>(() => new CMD_Del_Shared_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Shared_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Shared_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Shared_r_Parameters(CMD_Del_Shared_r_Parameters other) : this() {
    sharedId_ = other.sharedId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Shared_r_Parameters Clone() {
    return new CMD_Del_Shared_r_Parameters(this);
  }

  /// <summary>Field number for the "shared_id" field.</summary>
  public const int SharedIdFieldNumber = 1;
  private uint sharedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SharedId {
    get { return sharedId_; }
    set {
      sharedId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Shared_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Shared_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedId != other.SharedId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedId != 0) hash ^= SharedId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SharedId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SharedId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Shared_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedId != 0) {
      SharedId = other.SharedId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SharedId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_shared_a		 = 26;
/// </summary>
public sealed partial class CMD_Del_Shared_a_Parameters : pb::IMessage<CMD_Del_Shared_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Shared_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Shared_a_Parameters>(() => new CMD_Del_Shared_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Shared_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Shared_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Shared_a_Parameters(CMD_Del_Shared_a_Parameters other) : this() {
    sharedId_ = other.sharedId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Shared_a_Parameters Clone() {
    return new CMD_Del_Shared_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_id" field.</summary>
  public const int SharedIdFieldNumber = 1;
  private uint sharedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SharedId {
    get { return sharedId_; }
    set {
      sharedId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Shared_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Shared_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedId != other.SharedId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedId != 0) hash ^= SharedId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SharedId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SharedId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Shared_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedId != 0) {
      SharedId = other.SharedId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SharedId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_shared_list_r		= 27;
/// </summary>
public sealed partial class CMD_Get_Shared_List_r_Parameters : pb::IMessage<CMD_Get_Shared_List_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Shared_List_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Shared_List_r_Parameters>(() => new CMD_Get_Shared_List_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Shared_List_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Shared_List_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Shared_List_r_Parameters(CMD_Get_Shared_List_r_Parameters other) : this() {
    reqType_ = other.reqType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Shared_List_r_Parameters Clone() {
    return new CMD_Get_Shared_List_r_Parameters(this);
  }

  /// <summary>Field number for the "req_type" field.</summary>
  public const int ReqTypeFieldNumber = 1;
  private global::GetShared_Type reqType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetShared_Type ReqType {
    get { return reqType_; }
    set {
      reqType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Shared_List_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Shared_List_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqType != other.ReqType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqType != 0) hash ^= ReqType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ReqType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Shared_List_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqType != 0) {
      ReqType = other.ReqType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          reqType_ = (global::GetShared_Type) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_shared_list_a		= 28;
/// </summary>
public sealed partial class CMD_Get_Shared_List_a_Parameters : pb::IMessage<CMD_Get_Shared_List_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Shared_List_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Shared_List_a_Parameters>(() => new CMD_Get_Shared_List_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Shared_List_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Shared_List_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Shared_List_a_Parameters(CMD_Get_Shared_List_a_Parameters other) : this() {
    sharedList_ = other.sharedList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Shared_List_a_Parameters Clone() {
    return new CMD_Get_Shared_List_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_list" field.</summary>
  public const int SharedListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Shared_Info> _repeated_sharedList_codec
      = pb::FieldCodec.ForMessage(10, global::Shared_Info.Parser);
  private readonly pbc::RepeatedField<global::Shared_Info> sharedList_ = new pbc::RepeatedField<global::Shared_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Shared_Info> SharedList {
    get { return sharedList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Shared_List_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Shared_List_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!sharedList_.Equals(other.sharedList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= sharedList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    sharedList_.WriteTo(output, _repeated_sharedList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += sharedList_.CalculateSize(_repeated_sharedList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Shared_List_a_Parameters other) {
    if (other == null) {
      return;
    }
    sharedList_.Add(other.sharedList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          sharedList_.AddEntriesFrom(input, _repeated_sharedList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_coins_change_notify		= 30;
/// </summary>
public sealed partial class CMD_Coins_Change_Notify_Parameters : pb::IMessage<CMD_Coins_Change_Notify_Parameters> {
  private static readonly pb::MessageParser<CMD_Coins_Change_Notify_Parameters> _parser = new pb::MessageParser<CMD_Coins_Change_Notify_Parameters>(() => new CMD_Coins_Change_Notify_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Coins_Change_Notify_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Coins_Change_Notify_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Coins_Change_Notify_Parameters(CMD_Coins_Change_Notify_Parameters other) : this() {
    coinsDelta_ = other.coinsDelta_;
    coins_ = other.coins_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Coins_Change_Notify_Parameters Clone() {
    return new CMD_Coins_Change_Notify_Parameters(this);
  }

  /// <summary>Field number for the "coins_delta" field.</summary>
  public const int CoinsDeltaFieldNumber = 1;
  private int coinsDelta_;
  /// <summary>
  /// 改变的
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CoinsDelta {
    get { return coinsDelta_; }
    set {
      coinsDelta_ = value;
    }
  }

  /// <summary>Field number for the "coins" field.</summary>
  public const int CoinsFieldNumber = 2;
  private uint coins_;
  /// <summary>
  /// 剩余的
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Coins {
    get { return coins_; }
    set {
      coins_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Coins_Change_Notify_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Coins_Change_Notify_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CoinsDelta != other.CoinsDelta) return false;
    if (Coins != other.Coins) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CoinsDelta != 0) hash ^= CoinsDelta.GetHashCode();
    if (Coins != 0) hash ^= Coins.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CoinsDelta != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CoinsDelta);
    }
    if (Coins != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Coins);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CoinsDelta != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoinsDelta);
    }
    if (Coins != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Coins);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Coins_Change_Notify_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CoinsDelta != 0) {
      CoinsDelta = other.CoinsDelta;
    }
    if (other.Coins != 0) {
      Coins = other.Coins;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CoinsDelta = input.ReadInt32();
          break;
        }
        case 16: {
          Coins = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_srv_time_r			= 31;
/// </summary>
public sealed partial class CMD_Get_Srv_Time_r_Parameters : pb::IMessage<CMD_Get_Srv_Time_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Srv_Time_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Srv_Time_r_Parameters>(() => new CMD_Get_Srv_Time_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Srv_Time_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Srv_Time_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Srv_Time_r_Parameters(CMD_Get_Srv_Time_r_Parameters other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Srv_Time_r_Parameters Clone() {
    return new CMD_Get_Srv_Time_r_Parameters(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Srv_Time_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Srv_Time_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Srv_Time_r_Parameters other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// 	cmd_get_srv_time_a			= 32;
/// </summary>
public sealed partial class CMD_Get_Srv_Time_a_Parameters : pb::IMessage<CMD_Get_Srv_Time_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Srv_Time_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Srv_Time_a_Parameters>(() => new CMD_Get_Srv_Time_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Srv_Time_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Srv_Time_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Srv_Time_a_Parameters(CMD_Get_Srv_Time_a_Parameters other) : this() {
    srvTime_ = other.srvTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Srv_Time_a_Parameters Clone() {
    return new CMD_Get_Srv_Time_a_Parameters(this);
  }

  /// <summary>Field number for the "srv_time" field.</summary>
  public const int SrvTimeFieldNumber = 1;
  private ulong srvTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong SrvTime {
    get { return srvTime_; }
    set {
      srvTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Srv_Time_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Srv_Time_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SrvTime != other.SrvTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SrvTime != 0UL) hash ^= SrvTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SrvTime != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(SrvTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SrvTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SrvTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Srv_Time_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SrvTime != 0UL) {
      SrvTime = other.SrvTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SrvTime = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_buy_ar_obj_r			= 33;
/// </summary>
public sealed partial class CMD_Buy_Ar_Obj_r_Parameters : pb::IMessage<CMD_Buy_Ar_Obj_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Buy_Ar_Obj_r_Parameters> _parser = new pb::MessageParser<CMD_Buy_Ar_Obj_r_Parameters>(() => new CMD_Buy_Ar_Obj_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Buy_Ar_Obj_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Ar_Obj_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Ar_Obj_r_Parameters(CMD_Buy_Ar_Obj_r_Parameters other) : this() {
    reqBuyArObjId_ = other.reqBuyArObjId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Ar_Obj_r_Parameters Clone() {
    return new CMD_Buy_Ar_Obj_r_Parameters(this);
  }

  /// <summary>Field number for the "req_buy_ar_obj_id" field.</summary>
  public const int ReqBuyArObjIdFieldNumber = 1;
  private uint reqBuyArObjId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqBuyArObjId {
    get { return reqBuyArObjId_; }
    set {
      reqBuyArObjId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Buy_Ar_Obj_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Buy_Ar_Obj_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqBuyArObjId != other.ReqBuyArObjId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqBuyArObjId != 0) hash ^= ReqBuyArObjId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqBuyArObjId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ReqBuyArObjId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqBuyArObjId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqBuyArObjId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Buy_Ar_Obj_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqBuyArObjId != 0) {
      ReqBuyArObjId = other.ReqBuyArObjId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ReqBuyArObjId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_buy_ar_obj_a			= 34;
/// </summary>
public sealed partial class CMD_Buy_Ar_Obj_a_Parameters : pb::IMessage<CMD_Buy_Ar_Obj_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Buy_Ar_Obj_a_Parameters> _parser = new pb::MessageParser<CMD_Buy_Ar_Obj_a_Parameters>(() => new CMD_Buy_Ar_Obj_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Buy_Ar_Obj_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Ar_Obj_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Ar_Obj_a_Parameters(CMD_Buy_Ar_Obj_a_Parameters other) : this() {
    arObjId_ = other.arObjId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Ar_Obj_a_Parameters Clone() {
    return new CMD_Buy_Ar_Obj_a_Parameters(this);
  }

  /// <summary>Field number for the "ar_obj_id" field.</summary>
  public const int ArObjIdFieldNumber = 1;
  private uint arObjId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ArObjId {
    get { return arObjId_; }
    set {
      arObjId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Buy_Ar_Obj_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Buy_Ar_Obj_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ArObjId != other.ArObjId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ArObjId != 0) hash ^= ArObjId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ArObjId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ArObjId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ArObjId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ArObjId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Buy_Ar_Obj_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ArObjId != 0) {
      ArObjId = other.ArObjId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ArObjId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_unbind_r				= 35;
/// </summary>
public sealed partial class CMD_Unbind_r_Parameters : pb::IMessage<CMD_Unbind_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Unbind_r_Parameters> _parser = new pb::MessageParser<CMD_Unbind_r_Parameters>(() => new CMD_Unbind_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Unbind_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Unbind_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Unbind_r_Parameters(CMD_Unbind_r_Parameters other) : this() {
    phoneNum_ = other.phoneNum_;
    mailAddr_ = other.mailAddr_;
    verifyCode_ = other.verifyCode_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Unbind_r_Parameters Clone() {
    return new CMD_Unbind_r_Parameters(this);
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 1;
  private string phoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "mail_addr" field.</summary>
  public const int MailAddrFieldNumber = 2;
  private string mailAddr_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailAddr {
    get { return mailAddr_; }
    set {
      mailAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "verify_code" field.</summary>
  public const int VerifyCodeFieldNumber = 3;
  private string verifyCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VerifyCode {
    get { return verifyCode_; }
    set {
      verifyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Unbind_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Unbind_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PhoneNum != other.PhoneNum) return false;
    if (MailAddr != other.MailAddr) return false;
    if (VerifyCode != other.VerifyCode) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (MailAddr.Length != 0) hash ^= MailAddr.GetHashCode();
    if (VerifyCode.Length != 0) hash ^= VerifyCode.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PhoneNum);
    }
    if (MailAddr.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(MailAddr);
    }
    if (VerifyCode.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(VerifyCode);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (MailAddr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailAddr);
    }
    if (VerifyCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VerifyCode);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Unbind_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.MailAddr.Length != 0) {
      MailAddr = other.MailAddr;
    }
    if (other.VerifyCode.Length != 0) {
      VerifyCode = other.VerifyCode;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          PhoneNum = input.ReadString();
          break;
        }
        case 18: {
          MailAddr = input.ReadString();
          break;
        }
        case 26: {
          VerifyCode = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_unbind_a				= 36;
/// </summary>
public sealed partial class CMD_Unbind_a_Parameters : pb::IMessage<CMD_Unbind_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Unbind_a_Parameters> _parser = new pb::MessageParser<CMD_Unbind_a_Parameters>(() => new CMD_Unbind_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Unbind_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Unbind_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Unbind_a_Parameters(CMD_Unbind_a_Parameters other) : this() {
    phoneNum_ = other.phoneNum_;
    mailAddr_ = other.mailAddr_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Unbind_a_Parameters Clone() {
    return new CMD_Unbind_a_Parameters(this);
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 1;
  private string phoneNum_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "mail_addr" field.</summary>
  public const int MailAddrFieldNumber = 2;
  private string mailAddr_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MailAddr {
    get { return mailAddr_; }
    set {
      mailAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Unbind_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Unbind_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PhoneNum != other.PhoneNum) return false;
    if (MailAddr != other.MailAddr) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (MailAddr.Length != 0) hash ^= MailAddr.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PhoneNum);
    }
    if (MailAddr.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(MailAddr);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (MailAddr.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MailAddr);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Unbind_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.MailAddr.Length != 0) {
      MailAddr = other.MailAddr;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          PhoneNum = input.ReadString();
          break;
        }
        case 18: {
          MailAddr = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_partofuserinfo_r	= 37;
/// </summary>
public sealed partial class CMD_Get_Partofuserinfo_r_Parameters : pb::IMessage<CMD_Get_Partofuserinfo_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Partofuserinfo_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Partofuserinfo_r_Parameters>(() => new CMD_Get_Partofuserinfo_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Partofuserinfo_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Partofuserinfo_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Partofuserinfo_r_Parameters(CMD_Get_Partofuserinfo_r_Parameters other) : this() {
    reqPart_ = other.reqPart_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Partofuserinfo_r_Parameters Clone() {
    return new CMD_Get_Partofuserinfo_r_Parameters(this);
  }

  /// <summary>Field number for the "req_part" field.</summary>
  public const int ReqPartFieldNumber = 1;
  private global::Get_Part_Of_Userinfo reqPart_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Get_Part_Of_Userinfo ReqPart {
    get { return reqPart_; }
    set {
      reqPart_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Partofuserinfo_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Partofuserinfo_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqPart != other.ReqPart) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqPart != 0) hash ^= ReqPart.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqPart != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ReqPart);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqPart != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqPart);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Partofuserinfo_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqPart != 0) {
      ReqPart = other.ReqPart;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          reqPart_ = (global::Get_Part_Of_Userinfo) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_partofuserinfo_a	= 38;
/// </summary>
public sealed partial class CMD_Get_Partofuserinfo_a_Parameters : pb::IMessage<CMD_Get_Partofuserinfo_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Partofuserinfo_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Partofuserinfo_a_Parameters>(() => new CMD_Get_Partofuserinfo_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Partofuserinfo_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Partofuserinfo_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Partofuserinfo_a_Parameters(CMD_Get_Partofuserinfo_a_Parameters other) : this() {
    ClassInfo = other.classInfo_ != null ? other.ClassInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Partofuserinfo_a_Parameters Clone() {
    return new CMD_Get_Partofuserinfo_a_Parameters(this);
  }

  /// <summary>Field number for the "class_info" field.</summary>
  public const int ClassInfoFieldNumber = 1;
  private global::User_Class_Info classInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User_Class_Info ClassInfo {
    get { return classInfo_; }
    set {
      classInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Partofuserinfo_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Partofuserinfo_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ClassInfo, other.ClassInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (classInfo_ != null) hash ^= ClassInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (classInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ClassInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (classInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Partofuserinfo_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.classInfo_ != null) {
      if (classInfo_ == null) {
        classInfo_ = new global::User_Class_Info();
      }
      ClassInfo.MergeFrom(other.ClassInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (classInfo_ == null) {
            classInfo_ = new global::User_Class_Info();
          }
          input.ReadMessage(classInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_userinfo_r		   = 101;
/// </summary>
public sealed partial class CMD_Get_Userinfo_r_Parameters : pb::IMessage<CMD_Get_Userinfo_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Userinfo_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Userinfo_r_Parameters>(() => new CMD_Get_Userinfo_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Userinfo_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Userinfo_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Userinfo_r_Parameters(CMD_Get_Userinfo_r_Parameters other) : this() {
    reqId_ = other.reqId_;
    reqNickname_ = other.reqNickname_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Userinfo_r_Parameters Clone() {
    return new CMD_Get_Userinfo_r_Parameters(this);
  }

  /// <summary>Field number for the "req_id" field.</summary>
  public const int ReqIdFieldNumber = 1;
  private uint reqId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqId {
    get { return reqId_; }
    set {
      reqId_ = value;
    }
  }

  /// <summary>Field number for the "req_nickname" field.</summary>
  public const int ReqNicknameFieldNumber = 2;
  private string reqNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqNickname {
    get { return reqNickname_; }
    set {
      reqNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Userinfo_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Userinfo_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqId != other.ReqId) return false;
    if (ReqNickname != other.ReqNickname) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqId != 0) hash ^= ReqId.GetHashCode();
    if (ReqNickname.Length != 0) hash ^= ReqNickname.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ReqId);
    }
    if (ReqNickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ReqNickname);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqId);
    }
    if (ReqNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqNickname);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Userinfo_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqId != 0) {
      ReqId = other.ReqId;
    }
    if (other.ReqNickname.Length != 0) {
      ReqNickname = other.ReqNickname;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ReqId = input.ReadUInt32();
          break;
        }
        case 18: {
          ReqNickname = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_userinfo_a		   = 102;
/// </summary>
public sealed partial class CMD_Get_Userinfo_a_Parameters : pb::IMessage<CMD_Get_Userinfo_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Userinfo_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Userinfo_a_Parameters>(() => new CMD_Get_Userinfo_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Userinfo_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Userinfo_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Userinfo_a_Parameters(CMD_Get_Userinfo_a_Parameters other) : this() {
    userList_ = other.userList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Userinfo_a_Parameters Clone() {
    return new CMD_Get_Userinfo_a_Parameters(this);
  }

  /// <summary>Field number for the "user_list" field.</summary>
  public const int UserListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::A8_User_Info> _repeated_userList_codec
      = pb::FieldCodec.ForMessage(10, global::A8_User_Info.Parser);
  private readonly pbc::RepeatedField<global::A8_User_Info> userList_ = new pbc::RepeatedField<global::A8_User_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::A8_User_Info> UserList {
    get { return userList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Userinfo_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Userinfo_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!userList_.Equals(other.userList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= userList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    userList_.WriteTo(output, _repeated_userList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += userList_.CalculateSize(_repeated_userList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Userinfo_a_Parameters other) {
    if (other == null) {
      return;
    }
    userList_.Add(other.userList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          userList_.AddEntriesFrom(input, _repeated_userList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_userinfo_r	   = 103;
/// </summary>
public sealed partial class CMD_Update_Userinfo_r_Parameters : pb::IMessage<CMD_Update_Userinfo_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_Userinfo_r_Parameters> _parser = new pb::MessageParser<CMD_Update_Userinfo_r_Parameters>(() => new CMD_Update_Userinfo_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_Userinfo_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Userinfo_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Userinfo_r_Parameters(CMD_Update_Userinfo_r_Parameters other) : this() {
    UpdateUserinfo = other.updateUserinfo_ != null ? other.UpdateUserinfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Userinfo_r_Parameters Clone() {
    return new CMD_Update_Userinfo_r_Parameters(this);
  }

  /// <summary>Field number for the "update_userinfo" field.</summary>
  public const int UpdateUserinfoFieldNumber = 1;
  private global::A8_User_Info updateUserinfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_User_Info UpdateUserinfo {
    get { return updateUserinfo_; }
    set {
      updateUserinfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_Userinfo_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_Userinfo_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(UpdateUserinfo, other.UpdateUserinfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (updateUserinfo_ != null) hash ^= UpdateUserinfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (updateUserinfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(UpdateUserinfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (updateUserinfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateUserinfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_Userinfo_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.updateUserinfo_ != null) {
      if (updateUserinfo_ == null) {
        updateUserinfo_ = new global::A8_User_Info();
      }
      UpdateUserinfo.MergeFrom(other.UpdateUserinfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (updateUserinfo_ == null) {
            updateUserinfo_ = new global::A8_User_Info();
          }
          input.ReadMessage(updateUserinfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_userinfo_a      = 104;
/// </summary>
public sealed partial class CMD_Update_Userinfo_a_Parameters : pb::IMessage<CMD_Update_Userinfo_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_Userinfo_a_Parameters> _parser = new pb::MessageParser<CMD_Update_Userinfo_a_Parameters>(() => new CMD_Update_Userinfo_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_Userinfo_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Userinfo_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Userinfo_a_Parameters(CMD_Update_Userinfo_a_Parameters other) : this() {
    UpdatedUserinfo = other.updatedUserinfo_ != null ? other.UpdatedUserinfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Userinfo_a_Parameters Clone() {
    return new CMD_Update_Userinfo_a_Parameters(this);
  }

  /// <summary>Field number for the "updated_userinfo" field.</summary>
  public const int UpdatedUserinfoFieldNumber = 1;
  private global::A8_User_Info updatedUserinfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_User_Info UpdatedUserinfo {
    get { return updatedUserinfo_; }
    set {
      updatedUserinfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_Userinfo_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_Userinfo_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(UpdatedUserinfo, other.UpdatedUserinfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (updatedUserinfo_ != null) hash ^= UpdatedUserinfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (updatedUserinfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(UpdatedUserinfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (updatedUserinfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedUserinfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_Userinfo_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.updatedUserinfo_ != null) {
      if (updatedUserinfo_ == null) {
        updatedUserinfo_ = new global::A8_User_Info();
      }
      UpdatedUserinfo.MergeFrom(other.UpdatedUserinfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (updatedUserinfo_ == null) {
            updatedUserinfo_ = new global::A8_User_Info();
          }
          input.ReadMessage(updatedUserinfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_display_userinfo_r = 111;
/// </summary>
public sealed partial class CMD_Get_Display_Userinfo_r_Parameters : pb::IMessage<CMD_Get_Display_Userinfo_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Display_Userinfo_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Display_Userinfo_r_Parameters>(() => new CMD_Get_Display_Userinfo_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Display_Userinfo_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[66]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Display_Userinfo_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Display_Userinfo_r_Parameters(CMD_Get_Display_Userinfo_r_Parameters other) : this() {
    reqId_ = other.reqId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Display_Userinfo_r_Parameters Clone() {
    return new CMD_Get_Display_Userinfo_r_Parameters(this);
  }

  /// <summary>Field number for the "req_id" field.</summary>
  public const int ReqIdFieldNumber = 1;
  private uint reqId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqId {
    get { return reqId_; }
    set {
      reqId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Display_Userinfo_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Display_Userinfo_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqId != other.ReqId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqId != 0) hash ^= ReqId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ReqId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Display_Userinfo_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqId != 0) {
      ReqId = other.ReqId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ReqId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_display_userinfo_a = 112;
/// </summary>
public sealed partial class CMD_Get_Display_Userinfo_a_Parameters : pb::IMessage<CMD_Get_Display_Userinfo_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Display_Userinfo_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Display_Userinfo_a_Parameters>(() => new CMD_Get_Display_Userinfo_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Display_Userinfo_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[67]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Display_Userinfo_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Display_Userinfo_a_Parameters(CMD_Get_Display_Userinfo_a_Parameters other) : this() {
    DispalyUserinfo = other.dispalyUserinfo_ != null ? other.DispalyUserinfo.Clone() : null;
    userType_ = other.userType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Display_Userinfo_a_Parameters Clone() {
    return new CMD_Get_Display_Userinfo_a_Parameters(this);
  }

  /// <summary>Field number for the "dispaly_userinfo" field.</summary>
  public const int DispalyUserinfoFieldNumber = 1;
  private global::A8_User_Display_Info dispalyUserinfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_User_Display_Info DispalyUserinfo {
    get { return dispalyUserinfo_; }
    set {
      dispalyUserinfo_ = value;
    }
  }

  /// <summary>Field number for the "user_type" field.</summary>
  public const int UserTypeFieldNumber = 2;
  private uint userType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Display_Userinfo_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Display_Userinfo_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(DispalyUserinfo, other.DispalyUserinfo)) return false;
    if (UserType != other.UserType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (dispalyUserinfo_ != null) hash ^= DispalyUserinfo.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (dispalyUserinfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(DispalyUserinfo);
    }
    if (UserType != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(UserType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (dispalyUserinfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DispalyUserinfo);
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Display_Userinfo_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.dispalyUserinfo_ != null) {
      if (dispalyUserinfo_ == null) {
        dispalyUserinfo_ = new global::A8_User_Display_Info();
      }
      DispalyUserinfo.MergeFrom(other.DispalyUserinfo);
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (dispalyUserinfo_ == null) {
            dispalyUserinfo_ = new global::A8_User_Display_Info();
          }
          input.ReadMessage(dispalyUserinfo_);
          break;
        }
        case 16: {
          UserType = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_class_r		   = 201;
/// </summary>
public sealed partial class CMD_Create_Class_r_Parameters : pb::IMessage<CMD_Create_Class_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Class_r_Parameters> _parser = new pb::MessageParser<CMD_Create_Class_r_Parameters>(() => new CMD_Create_Class_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Class_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[68]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Class_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Class_r_Parameters(CMD_Create_Class_r_Parameters other) : this() {
    CreateInfo = other.createInfo_ != null ? other.CreateInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Class_r_Parameters Clone() {
    return new CMD_Create_Class_r_Parameters(this);
  }

  /// <summary>Field number for the "create_info" field.</summary>
  public const int CreateInfoFieldNumber = 1;
  private global::A8_Class_Info createInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Class_Info CreateInfo {
    get { return createInfo_; }
    set {
      createInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Class_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Class_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CreateInfo, other.CreateInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (createInfo_ != null) hash ^= CreateInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (createInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CreateInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (createInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Class_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.createInfo_ != null) {
      if (createInfo_ == null) {
        createInfo_ = new global::A8_Class_Info();
      }
      CreateInfo.MergeFrom(other.CreateInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (createInfo_ == null) {
            createInfo_ = new global::A8_Class_Info();
          }
          input.ReadMessage(createInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_class_a		   = 202;
/// </summary>
public sealed partial class CMD_Create_Class_a_Parameters : pb::IMessage<CMD_Create_Class_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Class_a_Parameters> _parser = new pb::MessageParser<CMD_Create_Class_a_Parameters>(() => new CMD_Create_Class_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Class_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[69]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Class_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Class_a_Parameters(CMD_Create_Class_a_Parameters other) : this() {
    ClassInfo = other.classInfo_ != null ? other.ClassInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Class_a_Parameters Clone() {
    return new CMD_Create_Class_a_Parameters(this);
  }

  /// <summary>Field number for the "class_info" field.</summary>
  public const int ClassInfoFieldNumber = 1;
  private global::A8_Class_Info classInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Class_Info ClassInfo {
    get { return classInfo_; }
    set {
      classInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Class_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Class_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ClassInfo, other.ClassInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (classInfo_ != null) hash ^= ClassInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (classInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ClassInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (classInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Class_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.classInfo_ != null) {
      if (classInfo_ == null) {
        classInfo_ = new global::A8_Class_Info();
      }
      ClassInfo.MergeFrom(other.ClassInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (classInfo_ == null) {
            classInfo_ = new global::A8_Class_Info();
          }
          input.ReadMessage(classInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_quite_class_r          = 205;
/// </summary>
public sealed partial class CMD_Quite_Class_r_Parameters : pb::IMessage<CMD_Quite_Class_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Quite_Class_r_Parameters> _parser = new pb::MessageParser<CMD_Quite_Class_r_Parameters>(() => new CMD_Quite_Class_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Quite_Class_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[70]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Quite_Class_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Quite_Class_r_Parameters(CMD_Quite_Class_r_Parameters other) : this() {
    classId_ = other.classId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Quite_Class_r_Parameters Clone() {
    return new CMD_Quite_Class_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Quite_Class_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Quite_Class_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Quite_Class_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_quite_class_a          = 206;
/// </summary>
public sealed partial class CMD_Quite_Class_a_Parameters : pb::IMessage<CMD_Quite_Class_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Quite_Class_a_Parameters> _parser = new pb::MessageParser<CMD_Quite_Class_a_Parameters>(() => new CMD_Quite_Class_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Quite_Class_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[71]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Quite_Class_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Quite_Class_a_Parameters(CMD_Quite_Class_a_Parameters other) : this() {
    quitClassId_ = other.quitClassId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Quite_Class_a_Parameters Clone() {
    return new CMD_Quite_Class_a_Parameters(this);
  }

  /// <summary>Field number for the "quit_class_id" field.</summary>
  public const int QuitClassIdFieldNumber = 1;
  private uint quitClassId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint QuitClassId {
    get { return quitClassId_; }
    set {
      quitClassId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Quite_Class_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Quite_Class_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (QuitClassId != other.QuitClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (QuitClassId != 0) hash ^= QuitClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (QuitClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(QuitClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (QuitClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuitClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Quite_Class_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.QuitClassId != 0) {
      QuitClassId = other.QuitClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          QuitClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_classinfo_r     = 207;
/// </summary>
public sealed partial class CMD_Update_Classinfo_r_Parameters : pb::IMessage<CMD_Update_Classinfo_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_Classinfo_r_Parameters> _parser = new pb::MessageParser<CMD_Update_Classinfo_r_Parameters>(() => new CMD_Update_Classinfo_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_Classinfo_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[72]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Classinfo_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Classinfo_r_Parameters(CMD_Update_Classinfo_r_Parameters other) : this() {
    UpdateClass = other.updateClass_ != null ? other.UpdateClass.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Classinfo_r_Parameters Clone() {
    return new CMD_Update_Classinfo_r_Parameters(this);
  }

  /// <summary>Field number for the "update_class" field.</summary>
  public const int UpdateClassFieldNumber = 1;
  private global::A8_Class_Info updateClass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Class_Info UpdateClass {
    get { return updateClass_; }
    set {
      updateClass_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_Classinfo_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_Classinfo_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(UpdateClass, other.UpdateClass)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (updateClass_ != null) hash ^= UpdateClass.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (updateClass_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(UpdateClass);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (updateClass_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateClass);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_Classinfo_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.updateClass_ != null) {
      if (updateClass_ == null) {
        updateClass_ = new global::A8_Class_Info();
      }
      UpdateClass.MergeFrom(other.UpdateClass);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (updateClass_ == null) {
            updateClass_ = new global::A8_Class_Info();
          }
          input.ReadMessage(updateClass_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_classinfo_a	   = 208;
/// </summary>
public sealed partial class CMD_Update_Classinfo_a_Parameters : pb::IMessage<CMD_Update_Classinfo_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_Classinfo_a_Parameters> _parser = new pb::MessageParser<CMD_Update_Classinfo_a_Parameters>(() => new CMD_Update_Classinfo_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_Classinfo_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[73]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Classinfo_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Classinfo_a_Parameters(CMD_Update_Classinfo_a_Parameters other) : this() {
    UpdatedClass = other.updatedClass_ != null ? other.UpdatedClass.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Classinfo_a_Parameters Clone() {
    return new CMD_Update_Classinfo_a_Parameters(this);
  }

  /// <summary>Field number for the "updated_class" field.</summary>
  public const int UpdatedClassFieldNumber = 1;
  private global::A8_Class_Info updatedClass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Class_Info UpdatedClass {
    get { return updatedClass_; }
    set {
      updatedClass_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_Classinfo_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_Classinfo_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(UpdatedClass, other.UpdatedClass)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (updatedClass_ != null) hash ^= UpdatedClass.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (updatedClass_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(UpdatedClass);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (updatedClass_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedClass);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_Classinfo_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.updatedClass_ != null) {
      if (updatedClass_ == null) {
        updatedClass_ = new global::A8_Class_Info();
      }
      UpdatedClass.MergeFrom(other.UpdatedClass);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (updatedClass_ == null) {
            updatedClass_ = new global::A8_Class_Info();
          }
          input.ReadMessage(updatedClass_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_classinfo_r		   = 209;
/// </summary>
public sealed partial class CMD_Get_Classinfo_r_Parameters : pb::IMessage<CMD_Get_Classinfo_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Classinfo_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Classinfo_r_Parameters>(() => new CMD_Get_Classinfo_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Classinfo_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[74]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Classinfo_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Classinfo_r_Parameters(CMD_Get_Classinfo_r_Parameters other) : this() {
    reqClassId_ = other.reqClassId_;
    reqClassName_ = other.reqClassName_;
    reqClassList_ = other.reqClassList_.Clone();
    attendClass_ = other.attendClass_;
    createdClass_ = other.createdClass_;
    appliedClass_ = other.appliedClass_;
    reqProjectType_ = other.reqProjectType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Classinfo_r_Parameters Clone() {
    return new CMD_Get_Classinfo_r_Parameters(this);
  }

  /// <summary>Field number for the "req_class_id" field.</summary>
  public const int ReqClassIdFieldNumber = 1;
  private uint reqClassId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqClassId {
    get { return reqClassId_; }
    set {
      reqClassId_ = value;
    }
  }

  /// <summary>Field number for the "req_class_name" field.</summary>
  public const int ReqClassNameFieldNumber = 2;
  private string reqClassName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqClassName {
    get { return reqClassName_; }
    set {
      reqClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "req_class_list" field.</summary>
  public const int ReqClassListFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_reqClassList_codec
      = pb::FieldCodec.ForUInt32(26);
  private readonly pbc::RepeatedField<uint> reqClassList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> ReqClassList {
    get { return reqClassList_; }
  }

  /// <summary>Field number for the "attend_class" field.</summary>
  public const int AttendClassFieldNumber = 4;
  private uint attendClass_;
  /// <summary>
  /// 1-参加的班级列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AttendClass {
    get { return attendClass_; }
    set {
      attendClass_ = value;
    }
  }

  /// <summary>Field number for the "created_class" field.</summary>
  public const int CreatedClassFieldNumber = 5;
  private uint createdClass_;
  /// <summary>
  /// 1-创建的班级列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CreatedClass {
    get { return createdClass_; }
    set {
      createdClass_ = value;
    }
  }

  /// <summary>Field number for the "applied_class" field.</summary>
  public const int AppliedClassFieldNumber = 6;
  private uint appliedClass_;
  /// <summary>
  /// 1-申请过的班级列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AppliedClass {
    get { return appliedClass_; }
    set {
      appliedClass_ = value;
    }
  }

  /// <summary>Field number for the "req_project_type" field.</summary>
  public const int ReqProjectTypeFieldNumber = 7;
  private uint reqProjectType_;
  /// <summary>
  /// class language type
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqProjectType {
    get { return reqProjectType_; }
    set {
      reqProjectType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Classinfo_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Classinfo_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqClassId != other.ReqClassId) return false;
    if (ReqClassName != other.ReqClassName) return false;
    if(!reqClassList_.Equals(other.reqClassList_)) return false;
    if (AttendClass != other.AttendClass) return false;
    if (CreatedClass != other.CreatedClass) return false;
    if (AppliedClass != other.AppliedClass) return false;
    if (ReqProjectType != other.ReqProjectType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqClassId != 0) hash ^= ReqClassId.GetHashCode();
    if (ReqClassName.Length != 0) hash ^= ReqClassName.GetHashCode();
    hash ^= reqClassList_.GetHashCode();
    if (AttendClass != 0) hash ^= AttendClass.GetHashCode();
    if (CreatedClass != 0) hash ^= CreatedClass.GetHashCode();
    if (AppliedClass != 0) hash ^= AppliedClass.GetHashCode();
    if (ReqProjectType != 0) hash ^= ReqProjectType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ReqClassId);
    }
    if (ReqClassName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ReqClassName);
    }
    reqClassList_.WriteTo(output, _repeated_reqClassList_codec);
    if (AttendClass != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(AttendClass);
    }
    if (CreatedClass != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(CreatedClass);
    }
    if (AppliedClass != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(AppliedClass);
    }
    if (ReqProjectType != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(ReqProjectType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqClassId);
    }
    if (ReqClassName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqClassName);
    }
    size += reqClassList_.CalculateSize(_repeated_reqClassList_codec);
    if (AttendClass != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttendClass);
    }
    if (CreatedClass != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreatedClass);
    }
    if (AppliedClass != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppliedClass);
    }
    if (ReqProjectType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqProjectType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Classinfo_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqClassId != 0) {
      ReqClassId = other.ReqClassId;
    }
    if (other.ReqClassName.Length != 0) {
      ReqClassName = other.ReqClassName;
    }
    reqClassList_.Add(other.reqClassList_);
    if (other.AttendClass != 0) {
      AttendClass = other.AttendClass;
    }
    if (other.CreatedClass != 0) {
      CreatedClass = other.CreatedClass;
    }
    if (other.AppliedClass != 0) {
      AppliedClass = other.AppliedClass;
    }
    if (other.ReqProjectType != 0) {
      ReqProjectType = other.ReqProjectType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ReqClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          ReqClassName = input.ReadString();
          break;
        }
        case 26:
        case 24: {
          reqClassList_.AddEntriesFrom(input, _repeated_reqClassList_codec);
          break;
        }
        case 32: {
          AttendClass = input.ReadUInt32();
          break;
        }
        case 40: {
          CreatedClass = input.ReadUInt32();
          break;
        }
        case 48: {
          AppliedClass = input.ReadUInt32();
          break;
        }
        case 56: {
          ReqProjectType = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_classinfo_a		   = 210;
/// </summary>
public sealed partial class CMD_Get_Classinfo_a_Parameters : pb::IMessage<CMD_Get_Classinfo_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Classinfo_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Classinfo_a_Parameters>(() => new CMD_Get_Classinfo_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Classinfo_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[75]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Classinfo_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Classinfo_a_Parameters(CMD_Get_Classinfo_a_Parameters other) : this() {
    classInfoList_ = other.classInfoList_.Clone();
    appliedClassList_ = other.appliedClassList_.Clone();
    createdClassList_ = other.createdClassList_.Clone();
    attendClassList_ = other.attendClassList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Classinfo_a_Parameters Clone() {
    return new CMD_Get_Classinfo_a_Parameters(this);
  }

  /// <summary>Field number for the "class_info_list" field.</summary>
  public const int ClassInfoListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::A8_Class_Info> _repeated_classInfoList_codec
      = pb::FieldCodec.ForMessage(10, global::A8_Class_Info.Parser);
  private readonly pbc::RepeatedField<global::A8_Class_Info> classInfoList_ = new pbc::RepeatedField<global::A8_Class_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::A8_Class_Info> ClassInfoList {
    get { return classInfoList_; }
  }

  /// <summary>Field number for the "applied_class_list" field.</summary>
  public const int AppliedClassListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::A8_Class_Info> _repeated_appliedClassList_codec
      = pb::FieldCodec.ForMessage(18, global::A8_Class_Info.Parser);
  private readonly pbc::RepeatedField<global::A8_Class_Info> appliedClassList_ = new pbc::RepeatedField<global::A8_Class_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::A8_Class_Info> AppliedClassList {
    get { return appliedClassList_; }
  }

  /// <summary>Field number for the "created_class_list" field.</summary>
  public const int CreatedClassListFieldNumber = 3;
  private static readonly pb::FieldCodec<global::A8_Class_Info> _repeated_createdClassList_codec
      = pb::FieldCodec.ForMessage(26, global::A8_Class_Info.Parser);
  private readonly pbc::RepeatedField<global::A8_Class_Info> createdClassList_ = new pbc::RepeatedField<global::A8_Class_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::A8_Class_Info> CreatedClassList {
    get { return createdClassList_; }
  }

  /// <summary>Field number for the "attend_class_list" field.</summary>
  public const int AttendClassListFieldNumber = 4;
  private static readonly pb::FieldCodec<global::A8_Class_Info> _repeated_attendClassList_codec
      = pb::FieldCodec.ForMessage(34, global::A8_Class_Info.Parser);
  private readonly pbc::RepeatedField<global::A8_Class_Info> attendClassList_ = new pbc::RepeatedField<global::A8_Class_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::A8_Class_Info> AttendClassList {
    get { return attendClassList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Classinfo_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Classinfo_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!classInfoList_.Equals(other.classInfoList_)) return false;
    if(!appliedClassList_.Equals(other.appliedClassList_)) return false;
    if(!createdClassList_.Equals(other.createdClassList_)) return false;
    if(!attendClassList_.Equals(other.attendClassList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= classInfoList_.GetHashCode();
    hash ^= appliedClassList_.GetHashCode();
    hash ^= createdClassList_.GetHashCode();
    hash ^= attendClassList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    classInfoList_.WriteTo(output, _repeated_classInfoList_codec);
    appliedClassList_.WriteTo(output, _repeated_appliedClassList_codec);
    createdClassList_.WriteTo(output, _repeated_createdClassList_codec);
    attendClassList_.WriteTo(output, _repeated_attendClassList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += classInfoList_.CalculateSize(_repeated_classInfoList_codec);
    size += appliedClassList_.CalculateSize(_repeated_appliedClassList_codec);
    size += createdClassList_.CalculateSize(_repeated_createdClassList_codec);
    size += attendClassList_.CalculateSize(_repeated_attendClassList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Classinfo_a_Parameters other) {
    if (other == null) {
      return;
    }
    classInfoList_.Add(other.classInfoList_);
    appliedClassList_.Add(other.appliedClassList_);
    createdClassList_.Add(other.createdClassList_);
    attendClassList_.Add(other.attendClassList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          classInfoList_.AddEntriesFrom(input, _repeated_classInfoList_codec);
          break;
        }
        case 18: {
          appliedClassList_.AddEntriesFrom(input, _repeated_appliedClassList_codec);
          break;
        }
        case 26: {
          createdClassList_.AddEntriesFrom(input, _repeated_createdClassList_codec);
          break;
        }
        case 34: {
          attendClassList_.AddEntriesFrom(input, _repeated_attendClassList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_class_r			   = 211;
/// </summary>
public sealed partial class CMD_Del_Classs_r_Parameters : pb::IMessage<CMD_Del_Classs_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Classs_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Classs_r_Parameters>(() => new CMD_Del_Classs_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Classs_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[76]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Classs_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Classs_r_Parameters(CMD_Del_Classs_r_Parameters other) : this() {
    delClassId_ = other.delClassId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Classs_r_Parameters Clone() {
    return new CMD_Del_Classs_r_Parameters(this);
  }

  /// <summary>Field number for the "del_class_id" field.</summary>
  public const int DelClassIdFieldNumber = 1;
  private uint delClassId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DelClassId {
    get { return delClassId_; }
    set {
      delClassId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Classs_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Classs_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DelClassId != other.DelClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DelClassId != 0) hash ^= DelClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DelClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(DelClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DelClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Classs_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.DelClassId != 0) {
      DelClassId = other.DelClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          DelClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_class_a			   = 212;
/// </summary>
public sealed partial class CMD_Del_Classs_a_Parameters : pb::IMessage<CMD_Del_Classs_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Classs_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Classs_a_Parameters>(() => new CMD_Del_Classs_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Classs_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[77]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Classs_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Classs_a_Parameters(CMD_Del_Classs_a_Parameters other) : this() {
    delClassId_ = other.delClassId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Classs_a_Parameters Clone() {
    return new CMD_Del_Classs_a_Parameters(this);
  }

  /// <summary>Field number for the "del_class_id" field.</summary>
  public const int DelClassIdFieldNumber = 1;
  private uint delClassId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DelClassId {
    get { return delClassId_; }
    set {
      delClassId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Classs_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Classs_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DelClassId != other.DelClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DelClassId != 0) hash ^= DelClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DelClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(DelClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DelClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Classs_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.DelClassId != 0) {
      DelClassId = other.DelClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          DelClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_recommand_class_r      = 213;
/// </summary>
public sealed partial class CMD_Recommand_Class_r_Parameters : pb::IMessage<CMD_Recommand_Class_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Recommand_Class_r_Parameters> _parser = new pb::MessageParser<CMD_Recommand_Class_r_Parameters>(() => new CMD_Recommand_Class_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Recommand_Class_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[78]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Recommand_Class_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Recommand_Class_r_Parameters(CMD_Recommand_Class_r_Parameters other) : this() {
    reqCount_ = other.reqCount_;
    reqProjectType_ = other.reqProjectType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Recommand_Class_r_Parameters Clone() {
    return new CMD_Recommand_Class_r_Parameters(this);
  }

  /// <summary>Field number for the "req_count" field.</summary>
  public const int ReqCountFieldNumber = 1;
  private uint reqCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqCount {
    get { return reqCount_; }
    set {
      reqCount_ = value;
    }
  }

  /// <summary>Field number for the "req_project_type" field.</summary>
  public const int ReqProjectTypeFieldNumber = 7;
  private global::Project_Language_Type reqProjectType_ = 0;
  /// <summary>
  /// class language type
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type ReqProjectType {
    get { return reqProjectType_; }
    set {
      reqProjectType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Recommand_Class_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Recommand_Class_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqCount != other.ReqCount) return false;
    if (ReqProjectType != other.ReqProjectType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqCount != 0) hash ^= ReqCount.GetHashCode();
    if (ReqProjectType != 0) hash ^= ReqProjectType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqCount != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ReqCount);
    }
    if (ReqProjectType != 0) {
      output.WriteRawTag(56);
      output.WriteEnum((int) ReqProjectType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqCount);
    }
    if (ReqProjectType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqProjectType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Recommand_Class_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqCount != 0) {
      ReqCount = other.ReqCount;
    }
    if (other.ReqProjectType != 0) {
      ReqProjectType = other.ReqProjectType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ReqCount = input.ReadUInt32();
          break;
        }
        case 56: {
          reqProjectType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_recommand_class_a      = 214;
/// </summary>
public sealed partial class CMD_Recommand_Class_a_Parameters : pb::IMessage<CMD_Recommand_Class_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Recommand_Class_a_Parameters> _parser = new pb::MessageParser<CMD_Recommand_Class_a_Parameters>(() => new CMD_Recommand_Class_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Recommand_Class_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[79]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Recommand_Class_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Recommand_Class_a_Parameters(CMD_Recommand_Class_a_Parameters other) : this() {
    classInfoList_ = other.classInfoList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Recommand_Class_a_Parameters Clone() {
    return new CMD_Recommand_Class_a_Parameters(this);
  }

  /// <summary>Field number for the "class_info_list" field.</summary>
  public const int ClassInfoListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::A8_Class_Info> _repeated_classInfoList_codec
      = pb::FieldCodec.ForMessage(10, global::A8_Class_Info.Parser);
  private readonly pbc::RepeatedField<global::A8_Class_Info> classInfoList_ = new pbc::RepeatedField<global::A8_Class_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::A8_Class_Info> ClassInfoList {
    get { return classInfoList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Recommand_Class_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Recommand_Class_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!classInfoList_.Equals(other.classInfoList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= classInfoList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    classInfoList_.WriteTo(output, _repeated_classInfoList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += classInfoList_.CalculateSize(_repeated_classInfoList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Recommand_Class_a_Parameters other) {
    if (other == null) {
      return;
    }
    classInfoList_.Add(other.classInfoList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          classInfoList_.AddEntriesFrom(input, _repeated_classInfoList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_class_member_r	   = 215;
/// </summary>
public sealed partial class CMD_Add_Class_Member_r_Parameters : pb::IMessage<CMD_Add_Class_Member_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Class_Member_r_Parameters> _parser = new pb::MessageParser<CMD_Add_Class_Member_r_Parameters>(() => new CMD_Add_Class_Member_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Class_Member_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[80]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Class_Member_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Class_Member_r_Parameters(CMD_Add_Class_Member_r_Parameters other) : this() {
    addId_ = other.addId_;
    classId_ = other.classId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Class_Member_r_Parameters Clone() {
    return new CMD_Add_Class_Member_r_Parameters(this);
  }

  /// <summary>Field number for the "add_id" field.</summary>
  public const int AddIdFieldNumber = 1;
  private uint addId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AddId {
    get { return addId_; }
    set {
      addId_ = value;
    }
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 2;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Class_Member_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Class_Member_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AddId != other.AddId) return false;
    if (ClassId != other.ClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AddId != 0) hash ^= AddId.GetHashCode();
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AddId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AddId);
    }
    if (ClassId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AddId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AddId);
    }
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Class_Member_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AddId != 0) {
      AddId = other.AddId;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AddId = input.ReadUInt32();
          break;
        }
        case 16: {
          ClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_class_member_a     = 216;
/// </summary>
public sealed partial class CMD_Add_Class_Member_a_Parameters : pb::IMessage<CMD_Add_Class_Member_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Class_Member_a_Parameters> _parser = new pb::MessageParser<CMD_Add_Class_Member_a_Parameters>(() => new CMD_Add_Class_Member_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Class_Member_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[81]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Class_Member_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Class_Member_a_Parameters(CMD_Add_Class_Member_a_Parameters other) : this() {
    addedId_ = other.addedId_;
    classId_ = other.classId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Class_Member_a_Parameters Clone() {
    return new CMD_Add_Class_Member_a_Parameters(this);
  }

  /// <summary>Field number for the "added_id" field.</summary>
  public const int AddedIdFieldNumber = 1;
  private uint addedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AddedId {
    get { return addedId_; }
    set {
      addedId_ = value;
    }
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 2;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Class_Member_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Class_Member_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AddedId != other.AddedId) return false;
    if (ClassId != other.ClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AddedId != 0) hash ^= AddedId.GetHashCode();
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AddedId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(AddedId);
    }
    if (ClassId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AddedId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AddedId);
    }
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Class_Member_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AddedId != 0) {
      AddedId = other.AddedId;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AddedId = input.ReadUInt32();
          break;
        }
        case 16: {
          ClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_class_member_r	   = 217;
/// </summary>
public sealed partial class CMD_Del_Class_Member_r_Parameters : pb::IMessage<CMD_Del_Class_Member_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Class_Member_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Class_Member_r_Parameters>(() => new CMD_Del_Class_Member_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Class_Member_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[82]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Class_Member_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Class_Member_r_Parameters(CMD_Del_Class_Member_r_Parameters other) : this() {
    reqDelId_ = other.reqDelId_;
    classId_ = other.classId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Class_Member_r_Parameters Clone() {
    return new CMD_Del_Class_Member_r_Parameters(this);
  }

  /// <summary>Field number for the "req_del_id" field.</summary>
  public const int ReqDelIdFieldNumber = 1;
  private uint reqDelId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqDelId {
    get { return reqDelId_; }
    set {
      reqDelId_ = value;
    }
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 2;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Class_Member_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Class_Member_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqDelId != other.ReqDelId) return false;
    if (ClassId != other.ClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqDelId != 0) hash ^= ReqDelId.GetHashCode();
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqDelId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ReqDelId);
    }
    if (ClassId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqDelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqDelId);
    }
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Class_Member_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqDelId != 0) {
      ReqDelId = other.ReqDelId;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ReqDelId = input.ReadUInt32();
          break;
        }
        case 16: {
          ClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_class_member_a	   = 218;	
/// </summary>
public sealed partial class CMD_Del_Class_Member_a_Parameters : pb::IMessage<CMD_Del_Class_Member_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Class_Member_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Class_Member_a_Parameters>(() => new CMD_Del_Class_Member_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Class_Member_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[83]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Class_Member_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Class_Member_a_Parameters(CMD_Del_Class_Member_a_Parameters other) : this() {
    deledId_ = other.deledId_;
    classId_ = other.classId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Class_Member_a_Parameters Clone() {
    return new CMD_Del_Class_Member_a_Parameters(this);
  }

  /// <summary>Field number for the "deled_id" field.</summary>
  public const int DeledIdFieldNumber = 1;
  private uint deledId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DeledId {
    get { return deledId_; }
    set {
      deledId_ = value;
    }
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 2;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Class_Member_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Class_Member_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeledId != other.DeledId) return false;
    if (ClassId != other.ClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeledId != 0) hash ^= DeledId.GetHashCode();
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeledId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(DeledId);
    }
    if (ClassId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeledId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeledId);
    }
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Class_Member_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.DeledId != 0) {
      DeledId = other.DeledId;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          DeledId = input.ReadUInt32();
          break;
        }
        case 16: {
          ClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_classinfo_updated	   = 220;
/// </summary>
public sealed partial class CMD_Classinfo_Updated_Parameters : pb::IMessage<CMD_Classinfo_Updated_Parameters> {
  private static readonly pb::MessageParser<CMD_Classinfo_Updated_Parameters> _parser = new pb::MessageParser<CMD_Classinfo_Updated_Parameters>(() => new CMD_Classinfo_Updated_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Classinfo_Updated_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[84]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Classinfo_Updated_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Classinfo_Updated_Parameters(CMD_Classinfo_Updated_Parameters other) : this() {
    ClassInfo = other.classInfo_ != null ? other.ClassInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Classinfo_Updated_Parameters Clone() {
    return new CMD_Classinfo_Updated_Parameters(this);
  }

  /// <summary>Field number for the "class_info" field.</summary>
  public const int ClassInfoFieldNumber = 1;
  private global::A8_Class_Info classInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Class_Info ClassInfo {
    get { return classInfo_; }
    set {
      classInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Classinfo_Updated_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Classinfo_Updated_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ClassInfo, other.ClassInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (classInfo_ != null) hash ^= ClassInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (classInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ClassInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (classInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Classinfo_Updated_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.classInfo_ != null) {
      if (classInfo_ == null) {
        classInfo_ = new global::A8_Class_Info();
      }
      ClassInfo.MergeFrom(other.ClassInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (classInfo_ == null) {
            classInfo_ = new global::A8_Class_Info();
          }
          input.ReadMessage(classInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_class_deleted		   = 222;
/// </summary>
public sealed partial class CMD_Class_Deleted_Parameters : pb::IMessage<CMD_Class_Deleted_Parameters> {
  private static readonly pb::MessageParser<CMD_Class_Deleted_Parameters> _parser = new pb::MessageParser<CMD_Class_Deleted_Parameters>(() => new CMD_Class_Deleted_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Class_Deleted_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[85]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Deleted_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Deleted_Parameters(CMD_Class_Deleted_Parameters other) : this() {
    delClassId_ = other.delClassId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Deleted_Parameters Clone() {
    return new CMD_Class_Deleted_Parameters(this);
  }

  /// <summary>Field number for the "del_class_id" field.</summary>
  public const int DelClassIdFieldNumber = 1;
  private uint delClassId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DelClassId {
    get { return delClassId_; }
    set {
      delClassId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Class_Deleted_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Class_Deleted_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DelClassId != other.DelClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DelClassId != 0) hash ^= DelClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DelClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(DelClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DelClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Class_Deleted_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.DelClassId != 0) {
      DelClassId = other.DelClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          DelClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_class_member_add	   = 224;
/// </summary>
public sealed partial class CMD_Class_Member_Add_Parameters : pb::IMessage<CMD_Class_Member_Add_Parameters> {
  private static readonly pb::MessageParser<CMD_Class_Member_Add_Parameters> _parser = new pb::MessageParser<CMD_Class_Member_Add_Parameters>(() => new CMD_Class_Member_Add_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Class_Member_Add_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[86]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Member_Add_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Member_Add_Parameters(CMD_Class_Member_Add_Parameters other) : this() {
    AddInfo = other.addInfo_ != null ? other.AddInfo.Clone() : null;
    classId_ = other.classId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Member_Add_Parameters Clone() {
    return new CMD_Class_Member_Add_Parameters(this);
  }

  /// <summary>Field number for the "add_info" field.</summary>
  public const int AddInfoFieldNumber = 1;
  private global::A8_User_Display_Info addInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_User_Display_Info AddInfo {
    get { return addInfo_; }
    set {
      addInfo_ = value;
    }
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 2;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Class_Member_Add_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Class_Member_Add_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(AddInfo, other.AddInfo)) return false;
    if (ClassId != other.ClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (addInfo_ != null) hash ^= AddInfo.GetHashCode();
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (addInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AddInfo);
    }
    if (ClassId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (addInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddInfo);
    }
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Class_Member_Add_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.addInfo_ != null) {
      if (addInfo_ == null) {
        addInfo_ = new global::A8_User_Display_Info();
      }
      AddInfo.MergeFrom(other.AddInfo);
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (addInfo_ == null) {
            addInfo_ = new global::A8_User_Display_Info();
          }
          input.ReadMessage(addInfo_);
          break;
        }
        case 16: {
          ClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_class_member_leave	   = 226;
/// </summary>
public sealed partial class CMD_Class_Member_Leave_Parameters : pb::IMessage<CMD_Class_Member_Leave_Parameters> {
  private static readonly pb::MessageParser<CMD_Class_Member_Leave_Parameters> _parser = new pb::MessageParser<CMD_Class_Member_Leave_Parameters>(() => new CMD_Class_Member_Leave_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Class_Member_Leave_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[87]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Member_Leave_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Member_Leave_Parameters(CMD_Class_Member_Leave_Parameters other) : this() {
    leaveId_ = other.leaveId_;
    classId_ = other.classId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Class_Member_Leave_Parameters Clone() {
    return new CMD_Class_Member_Leave_Parameters(this);
  }

  /// <summary>Field number for the "leave_id" field.</summary>
  public const int LeaveIdFieldNumber = 1;
  private uint leaveId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint LeaveId {
    get { return leaveId_; }
    set {
      leaveId_ = value;
    }
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 2;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Class_Member_Leave_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Class_Member_Leave_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LeaveId != other.LeaveId) return false;
    if (ClassId != other.ClassId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (LeaveId != 0) hash ^= LeaveId.GetHashCode();
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (LeaveId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(LeaveId);
    }
    if (ClassId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClassId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (LeaveId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeaveId);
    }
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Class_Member_Leave_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.LeaveId != 0) {
      LeaveId = other.LeaveId;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          LeaveId = input.ReadUInt32();
          break;
        }
        case 16: {
          ClassId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_task_r		   = 251;
/// </summary>
public sealed partial class CMD_Create_Task_r_Parameters : pb::IMessage<CMD_Create_Task_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Task_r_Parameters> _parser = new pb::MessageParser<CMD_Create_Task_r_Parameters>(() => new CMD_Create_Task_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Task_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[88]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Task_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Task_r_Parameters(CMD_Create_Task_r_Parameters other) : this() {
    classId_ = other.classId_;
    TaskInfo = other.taskInfo_ != null ? other.TaskInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Task_r_Parameters Clone() {
    return new CMD_Create_Task_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_info" field.</summary>
  public const int TaskInfoFieldNumber = 2;
  private global::A8_Task_Info taskInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Task_Info TaskInfo {
    get { return taskInfo_; }
    set {
      taskInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Task_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Task_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (taskInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (taskInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Task_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.taskInfo_ != null) {
      if (taskInfo_ == null) {
        taskInfo_ = new global::A8_Task_Info();
      }
      TaskInfo.MergeFrom(other.TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (taskInfo_ == null) {
            taskInfo_ = new global::A8_Task_Info();
          }
          input.ReadMessage(taskInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_task_a		   = 252;
/// </summary>
public sealed partial class CMD_Create_Task_a_Parameters : pb::IMessage<CMD_Create_Task_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Task_a_Parameters> _parser = new pb::MessageParser<CMD_Create_Task_a_Parameters>(() => new CMD_Create_Task_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Task_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[89]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Task_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Task_a_Parameters(CMD_Create_Task_a_Parameters other) : this() {
    classId_ = other.classId_;
    TaskInfo = other.taskInfo_ != null ? other.TaskInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Task_a_Parameters Clone() {
    return new CMD_Create_Task_a_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_info" field.</summary>
  public const int TaskInfoFieldNumber = 2;
  private global::A8_Task_Info taskInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Task_Info TaskInfo {
    get { return taskInfo_; }
    set {
      taskInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Task_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Task_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (taskInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (taskInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Task_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.taskInfo_ != null) {
      if (taskInfo_ == null) {
        taskInfo_ = new global::A8_Task_Info();
      }
      TaskInfo.MergeFrom(other.TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (taskInfo_ == null) {
            taskInfo_ = new global::A8_Task_Info();
          }
          input.ReadMessage(taskInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_task_r		   = 253;
/// </summary>
public sealed partial class CMD_Update_Task_r_Parameters : pb::IMessage<CMD_Update_Task_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_Task_r_Parameters> _parser = new pb::MessageParser<CMD_Update_Task_r_Parameters>(() => new CMD_Update_Task_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_Task_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[90]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Task_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Task_r_Parameters(CMD_Update_Task_r_Parameters other) : this() {
    classId_ = other.classId_;
    TaskInfo = other.taskInfo_ != null ? other.TaskInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Task_r_Parameters Clone() {
    return new CMD_Update_Task_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_info" field.</summary>
  public const int TaskInfoFieldNumber = 2;
  private global::A8_Task_Info taskInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Task_Info TaskInfo {
    get { return taskInfo_; }
    set {
      taskInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_Task_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_Task_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (taskInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (taskInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_Task_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.taskInfo_ != null) {
      if (taskInfo_ == null) {
        taskInfo_ = new global::A8_Task_Info();
      }
      TaskInfo.MergeFrom(other.TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (taskInfo_ == null) {
            taskInfo_ = new global::A8_Task_Info();
          }
          input.ReadMessage(taskInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_task_a		   = 254;
/// </summary>
public sealed partial class CMD_Update_Task_a_Parameters : pb::IMessage<CMD_Update_Task_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_Task_a_Parameters> _parser = new pb::MessageParser<CMD_Update_Task_a_Parameters>(() => new CMD_Update_Task_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_Task_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[91]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Task_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Task_a_Parameters(CMD_Update_Task_a_Parameters other) : this() {
    classId_ = other.classId_;
    TaskInfo = other.taskInfo_ != null ? other.TaskInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Task_a_Parameters Clone() {
    return new CMD_Update_Task_a_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_info" field.</summary>
  public const int TaskInfoFieldNumber = 2;
  private global::A8_Task_Info taskInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Task_Info TaskInfo {
    get { return taskInfo_; }
    set {
      taskInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_Task_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_Task_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (taskInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (taskInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_Task_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.taskInfo_ != null) {
      if (taskInfo_ == null) {
        taskInfo_ = new global::A8_Task_Info();
      }
      TaskInfo.MergeFrom(other.TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (taskInfo_ == null) {
            taskInfo_ = new global::A8_Task_Info();
          }
          input.ReadMessage(taskInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_task_r			   = 255;
/// </summary>
public sealed partial class CMD_Del_Task_r_Parameters : pb::IMessage<CMD_Del_Task_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Task_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Task_r_Parameters>(() => new CMD_Del_Task_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Task_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[92]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_r_Parameters(CMD_Del_Task_r_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_r_Parameters Clone() {
    return new CMD_Del_Task_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Task_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Task_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Task_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_task_a			   = 256;
/// </summary>
public sealed partial class CMD_Del_Task_a_Parameters : pb::IMessage<CMD_Del_Task_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Task_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Task_a_Parameters>(() => new CMD_Del_Task_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Task_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[93]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_a_Parameters(CMD_Del_Task_a_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_a_Parameters Clone() {
    return new CMD_Del_Task_a_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Task_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Task_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Task_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_submit_task_r		   = 257;
/// </summary>
public sealed partial class CMD_Submit_Task_r_Parameters : pb::IMessage<CMD_Submit_Task_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Submit_Task_r_Parameters> _parser = new pb::MessageParser<CMD_Submit_Task_r_Parameters>(() => new CMD_Submit_Task_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Submit_Task_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[94]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Task_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Task_r_Parameters(CMD_Submit_Task_r_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    SubmitTask = other.submitTask_ != null ? other.SubmitTask.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Task_r_Parameters Clone() {
    return new CMD_Submit_Task_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_task" field.</summary>
  public const int SubmitTaskFieldNumber = 3;
  private global::A8_Student_Submit_Task submitTask_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Student_Submit_Task SubmitTask {
    get { return submitTask_; }
    set {
      submitTask_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Submit_Task_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Submit_Task_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (!object.Equals(SubmitTask, other.SubmitTask)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (submitTask_ != null) hash ^= SubmitTask.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (submitTask_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SubmitTask);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (submitTask_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTask);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Submit_Task_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.submitTask_ != null) {
      if (submitTask_ == null) {
        submitTask_ = new global::A8_Student_Submit_Task();
      }
      SubmitTask.MergeFrom(other.SubmitTask);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (submitTask_ == null) {
            submitTask_ = new global::A8_Student_Submit_Task();
          }
          input.ReadMessage(submitTask_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_submit_task_a		   = 258;
/// </summary>
public sealed partial class CMD_Submit_Task_a_Parameters : pb::IMessage<CMD_Submit_Task_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Submit_Task_a_Parameters> _parser = new pb::MessageParser<CMD_Submit_Task_a_Parameters>(() => new CMD_Submit_Task_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Submit_Task_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[95]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Task_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Task_a_Parameters(CMD_Submit_Task_a_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    SubmitTask = other.submitTask_ != null ? other.SubmitTask.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Task_a_Parameters Clone() {
    return new CMD_Submit_Task_a_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_task" field.</summary>
  public const int SubmitTaskFieldNumber = 3;
  private global::A8_Student_Submit_Task submitTask_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Student_Submit_Task SubmitTask {
    get { return submitTask_; }
    set {
      submitTask_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Submit_Task_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Submit_Task_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (!object.Equals(SubmitTask, other.SubmitTask)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (submitTask_ != null) hash ^= SubmitTask.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (submitTask_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SubmitTask);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (submitTask_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTask);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Submit_Task_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.submitTask_ != null) {
      if (submitTask_ == null) {
        submitTask_ = new global::A8_Student_Submit_Task();
      }
      SubmitTask.MergeFrom(other.SubmitTask);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (submitTask_ == null) {
            submitTask_ = new global::A8_Student_Submit_Task();
          }
          input.ReadMessage(submitTask_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_grade_task_r		   = 259;
/// </summary>
public sealed partial class CMD_Grade_Task_r_Parameter : pb::IMessage<CMD_Grade_Task_r_Parameter> {
  private static readonly pb::MessageParser<CMD_Grade_Task_r_Parameter> _parser = new pb::MessageParser<CMD_Grade_Task_r_Parameter>(() => new CMD_Grade_Task_r_Parameter());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Grade_Task_r_Parameter> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[96]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Task_r_Parameter() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Task_r_Parameter(CMD_Grade_Task_r_Parameter other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    submitId_ = other.submitId_;
    gradeString_ = other.gradeString_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Task_r_Parameter Clone() {
    return new CMD_Grade_Task_r_Parameter(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_id" field.</summary>
  public const int SubmitIdFieldNumber = 3;
  private uint submitId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmitId {
    get { return submitId_; }
    set {
      submitId_ = value;
    }
  }

  /// <summary>Field number for the "grade_string" field.</summary>
  public const int GradeStringFieldNumber = 4;
  private string gradeString_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GradeString {
    get { return gradeString_; }
    set {
      gradeString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Grade_Task_r_Parameter);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Grade_Task_r_Parameter other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (SubmitId != other.SubmitId) return false;
    if (GradeString != other.GradeString) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (SubmitId != 0) hash ^= SubmitId.GetHashCode();
    if (GradeString.Length != 0) hash ^= GradeString.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (SubmitId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(SubmitId);
    }
    if (GradeString.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(GradeString);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (SubmitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmitId);
    }
    if (GradeString.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GradeString);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Grade_Task_r_Parameter other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.SubmitId != 0) {
      SubmitId = other.SubmitId;
    }
    if (other.GradeString.Length != 0) {
      GradeString = other.GradeString;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 24: {
          SubmitId = input.ReadUInt32();
          break;
        }
        case 34: {
          GradeString = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_grade_task_a		   = 260;
/// </summary>
public sealed partial class CMD_Grade_Task_a_Parameter : pb::IMessage<CMD_Grade_Task_a_Parameter> {
  private static readonly pb::MessageParser<CMD_Grade_Task_a_Parameter> _parser = new pb::MessageParser<CMD_Grade_Task_a_Parameter>(() => new CMD_Grade_Task_a_Parameter());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Grade_Task_a_Parameter> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[97]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Task_a_Parameter() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Task_a_Parameter(CMD_Grade_Task_a_Parameter other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    submitId_ = other.submitId_;
    gradeString_ = other.gradeString_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Task_a_Parameter Clone() {
    return new CMD_Grade_Task_a_Parameter(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_id" field.</summary>
  public const int SubmitIdFieldNumber = 3;
  private uint submitId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmitId {
    get { return submitId_; }
    set {
      submitId_ = value;
    }
  }

  /// <summary>Field number for the "grade_string" field.</summary>
  public const int GradeStringFieldNumber = 4;
  private string gradeString_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GradeString {
    get { return gradeString_; }
    set {
      gradeString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Grade_Task_a_Parameter);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Grade_Task_a_Parameter other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (SubmitId != other.SubmitId) return false;
    if (GradeString != other.GradeString) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (SubmitId != 0) hash ^= SubmitId.GetHashCode();
    if (GradeString.Length != 0) hash ^= GradeString.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (SubmitId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(SubmitId);
    }
    if (GradeString.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(GradeString);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (SubmitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmitId);
    }
    if (GradeString.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GradeString);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Grade_Task_a_Parameter other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.SubmitId != 0) {
      SubmitId = other.SubmitId;
    }
    if (other.GradeString.Length != 0) {
      GradeString = other.GradeString;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 24: {
          SubmitId = input.ReadUInt32();
          break;
        }
        case 34: {
          GradeString = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_task_info_r		   = 261;
/// </summary>
public sealed partial class CMD_Get_Task_Info_r_Parameter : pb::IMessage<CMD_Get_Task_Info_r_Parameter> {
  private static readonly pb::MessageParser<CMD_Get_Task_Info_r_Parameter> _parser = new pb::MessageParser<CMD_Get_Task_Info_r_Parameter>(() => new CMD_Get_Task_Info_r_Parameter());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Task_Info_r_Parameter> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[98]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Task_Info_r_Parameter() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Task_Info_r_Parameter(CMD_Get_Task_Info_r_Parameter other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Task_Info_r_Parameter Clone() {
    return new CMD_Get_Task_Info_r_Parameter(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  /// <summary>
  ///  0 - all task
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Task_Info_r_Parameter);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Task_Info_r_Parameter other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Task_Info_r_Parameter other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_task_info_a        = 262;
/// </summary>
public sealed partial class CMD_Get_Task_Info_a_Parameter : pb::IMessage<CMD_Get_Task_Info_a_Parameter> {
  private static readonly pb::MessageParser<CMD_Get_Task_Info_a_Parameter> _parser = new pb::MessageParser<CMD_Get_Task_Info_a_Parameter>(() => new CMD_Get_Task_Info_a_Parameter());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Task_Info_a_Parameter> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[99]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Task_Info_a_Parameter() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Task_Info_a_Parameter(CMD_Get_Task_Info_a_Parameter other) : this() {
    classId_ = other.classId_;
    taskList_ = other.taskList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Task_Info_a_Parameter Clone() {
    return new CMD_Get_Task_Info_a_Parameter(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_list" field.</summary>
  public const int TaskListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::A8_Task_Info> _repeated_taskList_codec
      = pb::FieldCodec.ForMessage(18, global::A8_Task_Info.Parser);
  private readonly pbc::RepeatedField<global::A8_Task_Info> taskList_ = new pbc::RepeatedField<global::A8_Task_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::A8_Task_Info> TaskList {
    get { return taskList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Task_Info_a_Parameter);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Task_Info_a_Parameter other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if(!taskList_.Equals(other.taskList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    hash ^= taskList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    taskList_.WriteTo(output, _repeated_taskList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    size += taskList_.CalculateSize(_repeated_taskList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Task_Info_a_Parameter other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    taskList_.Add(other.taskList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          taskList_.AddEntriesFrom(input, _repeated_taskList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_task_created		   = 264;
/// </summary>
public sealed partial class CMD_Task_Created_Parameters : pb::IMessage<CMD_Task_Created_Parameters> {
  private static readonly pb::MessageParser<CMD_Task_Created_Parameters> _parser = new pb::MessageParser<CMD_Task_Created_Parameters>(() => new CMD_Task_Created_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Task_Created_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[100]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Created_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Created_Parameters(CMD_Task_Created_Parameters other) : this() {
    classId_ = other.classId_;
    TaskInfo = other.taskInfo_ != null ? other.TaskInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Created_Parameters Clone() {
    return new CMD_Task_Created_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_info" field.</summary>
  public const int TaskInfoFieldNumber = 2;
  private global::A8_Task_Info taskInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Task_Info TaskInfo {
    get { return taskInfo_; }
    set {
      taskInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Task_Created_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Task_Created_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (taskInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (taskInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Task_Created_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.taskInfo_ != null) {
      if (taskInfo_ == null) {
        taskInfo_ = new global::A8_Task_Info();
      }
      TaskInfo.MergeFrom(other.TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (taskInfo_ == null) {
            taskInfo_ = new global::A8_Task_Info();
          }
          input.ReadMessage(taskInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_task_updated		   = 266;
/// </summary>
public sealed partial class CMD_Task_Updated_Parameters : pb::IMessage<CMD_Task_Updated_Parameters> {
  private static readonly pb::MessageParser<CMD_Task_Updated_Parameters> _parser = new pb::MessageParser<CMD_Task_Updated_Parameters>(() => new CMD_Task_Updated_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Task_Updated_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[101]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Updated_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Updated_Parameters(CMD_Task_Updated_Parameters other) : this() {
    classId_ = other.classId_;
    TaskInfo = other.taskInfo_ != null ? other.TaskInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Updated_Parameters Clone() {
    return new CMD_Task_Updated_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_info" field.</summary>
  public const int TaskInfoFieldNumber = 2;
  private global::A8_Task_Info taskInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Task_Info TaskInfo {
    get { return taskInfo_; }
    set {
      taskInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Task_Updated_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Task_Updated_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (taskInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (taskInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Task_Updated_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.taskInfo_ != null) {
      if (taskInfo_ == null) {
        taskInfo_ = new global::A8_Task_Info();
      }
      TaskInfo.MergeFrom(other.TaskInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (taskInfo_ == null) {
            taskInfo_ = new global::A8_Task_Info();
          }
          input.ReadMessage(taskInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_task_deleted		   = 268;
/// </summary>
public sealed partial class CMD_Task_Deleted_Parameters : pb::IMessage<CMD_Task_Deleted_Parameters> {
  private static readonly pb::MessageParser<CMD_Task_Deleted_Parameters> _parser = new pb::MessageParser<CMD_Task_Deleted_Parameters>(() => new CMD_Task_Deleted_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Task_Deleted_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[102]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Deleted_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Deleted_Parameters(CMD_Task_Deleted_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Deleted_Parameters Clone() {
    return new CMD_Task_Deleted_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Task_Deleted_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Task_Deleted_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Task_Deleted_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_task_submited		   = 270;
/// </summary>
public sealed partial class CMD_Task_Submited_Parameters : pb::IMessage<CMD_Task_Submited_Parameters> {
  private static readonly pb::MessageParser<CMD_Task_Submited_Parameters> _parser = new pb::MessageParser<CMD_Task_Submited_Parameters>(() => new CMD_Task_Submited_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Task_Submited_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[103]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Submited_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Submited_Parameters(CMD_Task_Submited_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    SubmitTask = other.submitTask_ != null ? other.SubmitTask.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Submited_Parameters Clone() {
    return new CMD_Task_Submited_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_task" field.</summary>
  public const int SubmitTaskFieldNumber = 3;
  private global::A8_Student_Submit_Task submitTask_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_Student_Submit_Task SubmitTask {
    get { return submitTask_; }
    set {
      submitTask_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Task_Submited_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Task_Submited_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (!object.Equals(SubmitTask, other.SubmitTask)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (submitTask_ != null) hash ^= SubmitTask.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (submitTask_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SubmitTask);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (submitTask_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubmitTask);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Task_Submited_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.submitTask_ != null) {
      if (submitTask_ == null) {
        submitTask_ = new global::A8_Student_Submit_Task();
      }
      SubmitTask.MergeFrom(other.SubmitTask);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (submitTask_ == null) {
            submitTask_ = new global::A8_Student_Submit_Task();
          }
          input.ReadMessage(submitTask_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_task_graded			   = 272;
/// </summary>
public sealed partial class CMD_Task_Graded_Parameters : pb::IMessage<CMD_Task_Graded_Parameters> {
  private static readonly pb::MessageParser<CMD_Task_Graded_Parameters> _parser = new pb::MessageParser<CMD_Task_Graded_Parameters>(() => new CMD_Task_Graded_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Task_Graded_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[104]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Graded_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Graded_Parameters(CMD_Task_Graded_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    submitId_ = other.submitId_;
    gradeString_ = other.gradeString_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Task_Graded_Parameters Clone() {
    return new CMD_Task_Graded_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_id" field.</summary>
  public const int SubmitIdFieldNumber = 3;
  private uint submitId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmitId {
    get { return submitId_; }
    set {
      submitId_ = value;
    }
  }

  /// <summary>Field number for the "grade_string" field.</summary>
  public const int GradeStringFieldNumber = 4;
  private string gradeString_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GradeString {
    get { return gradeString_; }
    set {
      gradeString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Task_Graded_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Task_Graded_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (SubmitId != other.SubmitId) return false;
    if (GradeString != other.GradeString) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (SubmitId != 0) hash ^= SubmitId.GetHashCode();
    if (GradeString.Length != 0) hash ^= GradeString.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (SubmitId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(SubmitId);
    }
    if (GradeString.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(GradeString);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (SubmitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmitId);
    }
    if (GradeString.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GradeString);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Task_Graded_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.SubmitId != 0) {
      SubmitId = other.SubmitId;
    }
    if (other.GradeString.Length != 0) {
      GradeString = other.GradeString;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 24: {
          SubmitId = input.ReadUInt32();
          break;
        }
        case 34: {
          GradeString = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_submit_r		   = 273;
/// </summary>
public sealed partial class CMD_Del_Submit_r_Parameters : pb::IMessage<CMD_Del_Submit_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Submit_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Submit_r_Parameters>(() => new CMD_Del_Submit_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Submit_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[105]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Submit_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Submit_r_Parameters(CMD_Del_Submit_r_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    submitId_ = other.submitId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Submit_r_Parameters Clone() {
    return new CMD_Del_Submit_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_id" field.</summary>
  public const int SubmitIdFieldNumber = 3;
  private uint submitId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmitId {
    get { return submitId_; }
    set {
      submitId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Submit_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Submit_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (SubmitId != other.SubmitId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (SubmitId != 0) hash ^= SubmitId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (SubmitId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(SubmitId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (SubmitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmitId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Submit_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.SubmitId != 0) {
      SubmitId = other.SubmitId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 24: {
          SubmitId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_submit_a		   = 274;
/// </summary>
public sealed partial class CMD_Del_Submit_a_Parameters : pb::IMessage<CMD_Del_Submit_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Submit_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Submit_a_Parameters>(() => new CMD_Del_Submit_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Submit_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[106]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Submit_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Submit_a_Parameters(CMD_Del_Submit_a_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    submitId_ = other.submitId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Submit_a_Parameters Clone() {
    return new CMD_Del_Submit_a_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_id" field.</summary>
  public const int SubmitIdFieldNumber = 3;
  private uint submitId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmitId {
    get { return submitId_; }
    set {
      submitId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Submit_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Submit_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (SubmitId != other.SubmitId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (SubmitId != 0) hash ^= SubmitId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (SubmitId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(SubmitId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (SubmitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmitId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Submit_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.SubmitId != 0) {
      SubmitId = other.SubmitId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 24: {
          SubmitId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_submit_deleted		   = 276;
/// </summary>
public sealed partial class CMD_Submit_Deleted_Parameters : pb::IMessage<CMD_Submit_Deleted_Parameters> {
  private static readonly pb::MessageParser<CMD_Submit_Deleted_Parameters> _parser = new pb::MessageParser<CMD_Submit_Deleted_Parameters>(() => new CMD_Submit_Deleted_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Submit_Deleted_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[107]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Deleted_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Deleted_Parameters(CMD_Submit_Deleted_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    submitId_ = other.submitId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Submit_Deleted_Parameters Clone() {
    return new CMD_Submit_Deleted_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "submit_id" field.</summary>
  public const int SubmitIdFieldNumber = 3;
  private uint submitId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmitId {
    get { return submitId_; }
    set {
      submitId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Submit_Deleted_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Submit_Deleted_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (SubmitId != other.SubmitId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    if (SubmitId != 0) hash ^= SubmitId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    if (SubmitId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(SubmitId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    if (SubmitId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmitId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Submit_Deleted_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    if (other.SubmitId != 0) {
      SubmitId = other.SubmitId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 24: {
          SubmitId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_task_attach_r   = 277;
/// </summary>
public sealed partial class CMD_Modify_Task_Attach_r_Parameters : pb::IMessage<CMD_Modify_Task_Attach_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Task_Attach_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Task_Attach_r_Parameters>(() => new CMD_Modify_Task_Attach_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Task_Attach_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[108]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Task_Attach_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Task_Attach_r_Parameters(CMD_Modify_Task_Attach_r_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    modifyInfo_ = other.modifyInfo_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Task_Attach_r_Parameters Clone() {
    return new CMD_Modify_Task_Attach_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "modify_info" field.</summary>
  public const int ModifyInfoFieldNumber = 3;
  private static readonly pbc::MapField<uint, global::K8_Attach_Unit>.Codec _map_modifyInfo_codec
      = new pbc::MapField<uint, global::K8_Attach_Unit>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::K8_Attach_Unit.Parser), 26);
  private readonly pbc::MapField<uint, global::K8_Attach_Unit> modifyInfo_ = new pbc::MapField<uint, global::K8_Attach_Unit>();
  /// <summary>
  ///  attach_id &lt;---> unit info
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::K8_Attach_Unit> ModifyInfo {
    get { return modifyInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Task_Attach_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Task_Attach_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (!ModifyInfo.Equals(other.ModifyInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    hash ^= ModifyInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    modifyInfo_.WriteTo(output, _map_modifyInfo_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    size += modifyInfo_.CalculateSize(_map_modifyInfo_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Task_Attach_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    modifyInfo_.Add(other.modifyInfo_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 26: {
          modifyInfo_.AddEntriesFrom(input, _map_modifyInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_task_attach_a   = 278;
/// </summary>
public sealed partial class CMD_Modify_Task_Attach_a_Parameters : pb::IMessage<CMD_Modify_Task_Attach_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Task_Attach_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Task_Attach_a_Parameters>(() => new CMD_Modify_Task_Attach_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Task_Attach_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[109]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Task_Attach_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Task_Attach_a_Parameters(CMD_Modify_Task_Attach_a_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    modifyInfo_ = other.modifyInfo_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Task_Attach_a_Parameters Clone() {
    return new CMD_Modify_Task_Attach_a_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "modify_info" field.</summary>
  public const int ModifyInfoFieldNumber = 3;
  private static readonly pbc::MapField<uint, global::K8_Attach_Unit>.Codec _map_modifyInfo_codec
      = new pbc::MapField<uint, global::K8_Attach_Unit>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::K8_Attach_Unit.Parser), 26);
  private readonly pbc::MapField<uint, global::K8_Attach_Unit> modifyInfo_ = new pbc::MapField<uint, global::K8_Attach_Unit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::K8_Attach_Unit> ModifyInfo {
    get { return modifyInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Task_Attach_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Task_Attach_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (!ModifyInfo.Equals(other.ModifyInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    hash ^= ModifyInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    modifyInfo_.WriteTo(output, _map_modifyInfo_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    size += modifyInfo_.CalculateSize(_map_modifyInfo_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Task_Attach_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    modifyInfo_.Add(other.modifyInfo_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 26: {
          modifyInfo_.AddEntriesFrom(input, _map_modifyInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_task_attach_r	   = 279;
/// </summary>
public sealed partial class CMD_Del_Task_Attach_r_Parameters : pb::IMessage<CMD_Del_Task_Attach_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Task_Attach_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Task_Attach_r_Parameters>(() => new CMD_Del_Task_Attach_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Task_Attach_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[110]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_Attach_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_Attach_r_Parameters(CMD_Del_Task_Attach_r_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    attachIds_ = other.attachIds_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_Attach_r_Parameters Clone() {
    return new CMD_Del_Task_Attach_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "attach_ids" field.</summary>
  public const int AttachIdsFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_attachIds_codec
      = pb::FieldCodec.ForUInt32(26);
  private readonly pbc::RepeatedField<uint> attachIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> AttachIds {
    get { return attachIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Task_Attach_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Task_Attach_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if(!attachIds_.Equals(other.attachIds_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    hash ^= attachIds_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    attachIds_.WriteTo(output, _repeated_attachIds_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    size += attachIds_.CalculateSize(_repeated_attachIds_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Task_Attach_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    attachIds_.Add(other.attachIds_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          attachIds_.AddEntriesFrom(input, _repeated_attachIds_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_task_attach_a	   = 280;
/// </summary>
public sealed partial class CMD_Del_Task_Attach_a_Parameters : pb::IMessage<CMD_Del_Task_Attach_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Task_Attach_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Task_Attach_a_Parameters>(() => new CMD_Del_Task_Attach_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Task_Attach_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[111]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_Attach_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_Attach_a_Parameters(CMD_Del_Task_Attach_a_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    attachIds_ = other.attachIds_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Task_Attach_a_Parameters Clone() {
    return new CMD_Del_Task_Attach_a_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "attach_ids" field.</summary>
  public const int AttachIdsFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_attachIds_codec
      = pb::FieldCodec.ForUInt32(26);
  private readonly pbc::RepeatedField<uint> attachIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> AttachIds {
    get { return attachIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Task_Attach_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Task_Attach_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if(!attachIds_.Equals(other.attachIds_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    hash ^= attachIds_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    attachIds_.WriteTo(output, _repeated_attachIds_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    size += attachIds_.CalculateSize(_repeated_attachIds_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Task_Attach_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    attachIds_.Add(other.attachIds_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 26:
        case 24: {
          attachIds_.AddEntriesFrom(input, _repeated_attachIds_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_task_attach_r	   = 281;
/// </summary>
public sealed partial class CMD_Add_Task_Attach_r_Parameters : pb::IMessage<CMD_Add_Task_Attach_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Task_Attach_r_Parameters> _parser = new pb::MessageParser<CMD_Add_Task_Attach_r_Parameters>(() => new CMD_Add_Task_Attach_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Task_Attach_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[112]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Task_Attach_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Task_Attach_r_Parameters(CMD_Add_Task_Attach_r_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    addInfo_ = other.addInfo_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Task_Attach_r_Parameters Clone() {
    return new CMD_Add_Task_Attach_r_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "add_info" field.</summary>
  public const int AddInfoFieldNumber = 4;
  private static readonly pb::FieldCodec<global::K8_Attach_Unit> _repeated_addInfo_codec
      = pb::FieldCodec.ForMessage(34, global::K8_Attach_Unit.Parser);
  private readonly pbc::RepeatedField<global::K8_Attach_Unit> addInfo_ = new pbc::RepeatedField<global::K8_Attach_Unit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::K8_Attach_Unit> AddInfo {
    get { return addInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Task_Attach_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Task_Attach_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if(!addInfo_.Equals(other.addInfo_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    hash ^= addInfo_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    addInfo_.WriteTo(output, _repeated_addInfo_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    size += addInfo_.CalculateSize(_repeated_addInfo_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Task_Attach_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    addInfo_.Add(other.addInfo_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 34: {
          addInfo_.AddEntriesFrom(input, _repeated_addInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_task_attach_a	   = 282;
/// </summary>
public sealed partial class CMD_Add_Task_Attach_a_Parameters : pb::IMessage<CMD_Add_Task_Attach_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Task_Attach_a_Parameters> _parser = new pb::MessageParser<CMD_Add_Task_Attach_a_Parameters>(() => new CMD_Add_Task_Attach_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Task_Attach_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[113]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Task_Attach_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Task_Attach_a_Parameters(CMD_Add_Task_Attach_a_Parameters other) : this() {
    classId_ = other.classId_;
    taskId_ = other.taskId_;
    addInfo_ = other.addInfo_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Task_Attach_a_Parameters Clone() {
    return new CMD_Add_Task_Attach_a_Parameters(this);
  }

  /// <summary>Field number for the "class_id" field.</summary>
  public const int ClassIdFieldNumber = 1;
  private uint classId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ClassId {
    get { return classId_; }
    set {
      classId_ = value;
    }
  }

  /// <summary>Field number for the "task_id" field.</summary>
  public const int TaskIdFieldNumber = 2;
  private uint taskId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TaskId {
    get { return taskId_; }
    set {
      taskId_ = value;
    }
  }

  /// <summary>Field number for the "add_info" field.</summary>
  public const int AddInfoFieldNumber = 4;
  private static readonly pbc::MapField<uint, global::K8_Attach_Unit>.Codec _map_addInfo_codec
      = new pbc::MapField<uint, global::K8_Attach_Unit>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::K8_Attach_Unit.Parser), 34);
  private readonly pbc::MapField<uint, global::K8_Attach_Unit> addInfo_ = new pbc::MapField<uint, global::K8_Attach_Unit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::K8_Attach_Unit> AddInfo {
    get { return addInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Task_Attach_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Task_Attach_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClassId != other.ClassId) return false;
    if (TaskId != other.TaskId) return false;
    if (!AddInfo.Equals(other.AddInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClassId != 0) hash ^= ClassId.GetHashCode();
    if (TaskId != 0) hash ^= TaskId.GetHashCode();
    hash ^= AddInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClassId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ClassId);
    }
    if (TaskId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(TaskId);
    }
    addInfo_.WriteTo(output, _map_addInfo_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClassId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClassId);
    }
    if (TaskId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskId);
    }
    size += addInfo_.CalculateSize(_map_addInfo_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Task_Attach_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ClassId != 0) {
      ClassId = other.ClassId;
    }
    if (other.TaskId != 0) {
      TaskId = other.TaskId;
    }
    addInfo_.Add(other.addInfo_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ClassId = input.ReadUInt32();
          break;
        }
        case 16: {
          TaskId = input.ReadUInt32();
          break;
        }
        case 34: {
          addInfo_.AddEntriesFrom(input, _map_addInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_maillist_r		   = 401;
/// </summary>
public sealed partial class CMD_Get_Maillist_r_Parameters : pb::IMessage<CMD_Get_Maillist_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Maillist_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Maillist_r_Parameters>(() => new CMD_Get_Maillist_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Maillist_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[114]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Maillist_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Maillist_r_Parameters(CMD_Get_Maillist_r_Parameters other) : this() {
    requestType_ = other.requestType_;
    sentMail_ = other.sentMail_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Maillist_r_Parameters Clone() {
    return new CMD_Get_Maillist_r_Parameters(this);
  }

  /// <summary>Field number for the "request_type" field.</summary>
  public const int RequestTypeFieldNumber = 1;
  private uint requestType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint RequestType {
    get { return requestType_; }
    set {
      requestType_ = value;
    }
  }

  /// <summary>Field number for the "sent_mail" field.</summary>
  public const int SentMailFieldNumber = 2;
  private uint sentMail_;
  /// <summary>
  /// 0 别人发送给自己的 1 自己发送给别人的。 默认值0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SentMail {
    get { return sentMail_; }
    set {
      sentMail_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Maillist_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Maillist_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RequestType != other.RequestType) return false;
    if (SentMail != other.SentMail) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RequestType != 0) hash ^= RequestType.GetHashCode();
    if (SentMail != 0) hash ^= SentMail.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RequestType != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(RequestType);
    }
    if (SentMail != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(SentMail);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RequestType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestType);
    }
    if (SentMail != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SentMail);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Maillist_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.RequestType != 0) {
      RequestType = other.RequestType;
    }
    if (other.SentMail != 0) {
      SentMail = other.SentMail;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          RequestType = input.ReadUInt32();
          break;
        }
        case 16: {
          SentMail = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_maillist_a         = 402;
/// </summary>
public sealed partial class CMD_Get_Maillist_a_Parameters : pb::IMessage<CMD_Get_Maillist_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Maillist_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Maillist_a_Parameters>(() => new CMD_Get_Maillist_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Maillist_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[115]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Maillist_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Maillist_a_Parameters(CMD_Get_Maillist_a_Parameters other) : this() {
    mailList_ = other.mailList_.Clone();
    sentMail_ = other.sentMail_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Maillist_a_Parameters Clone() {
    return new CMD_Get_Maillist_a_Parameters(this);
  }

  /// <summary>Field number for the "mail_list" field.</summary>
  public const int MailListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Mail> _repeated_mailList_codec
      = pb::FieldCodec.ForMessage(10, global::Mail.Parser);
  private readonly pbc::RepeatedField<global::Mail> mailList_ = new pbc::RepeatedField<global::Mail>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Mail> MailList {
    get { return mailList_; }
  }

  /// <summary>Field number for the "sent_mail" field.</summary>
  public const int SentMailFieldNumber = 2;
  private uint sentMail_;
  /// <summary>
  /// 0 别人发送给自己的 1 自己发送给别人的。 默认值0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SentMail {
    get { return sentMail_; }
    set {
      sentMail_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Maillist_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Maillist_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!mailList_.Equals(other.mailList_)) return false;
    if (SentMail != other.SentMail) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= mailList_.GetHashCode();
    if (SentMail != 0) hash ^= SentMail.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    mailList_.WriteTo(output, _repeated_mailList_codec);
    if (SentMail != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(SentMail);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += mailList_.CalculateSize(_repeated_mailList_codec);
    if (SentMail != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SentMail);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Maillist_a_Parameters other) {
    if (other == null) {
      return;
    }
    mailList_.Add(other.mailList_);
    if (other.SentMail != 0) {
      SentMail = other.SentMail;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          mailList_.AddEntriesFrom(input, _repeated_mailList_codec);
          break;
        }
        case 16: {
          SentMail = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_read_mail_r			   = 403
/// </summary>
public sealed partial class CMD_Read_mail_r_Parameters : pb::IMessage<CMD_Read_mail_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Read_mail_r_Parameters> _parser = new pb::MessageParser<CMD_Read_mail_r_Parameters>(() => new CMD_Read_mail_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Read_mail_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[116]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Read_mail_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Read_mail_r_Parameters(CMD_Read_mail_r_Parameters other) : this() {
    mailId_ = other.mailId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Read_mail_r_Parameters Clone() {
    return new CMD_Read_mail_r_Parameters(this);
  }

  /// <summary>Field number for the "mail_id" field.</summary>
  public const int MailIdFieldNumber = 1;
  private ulong mailId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong MailId {
    get { return mailId_; }
    set {
      mailId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Read_mail_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Read_mail_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId != 0UL) hash ^= MailId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MailId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MailId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MailId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Read_mail_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.MailId != 0UL) {
      MailId = other.MailId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          MailId = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_read_mail_a            = 404;
/// </summary>
public sealed partial class CMD_Read_Mail_a_Parameters : pb::IMessage<CMD_Read_Mail_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Read_Mail_a_Parameters> _parser = new pb::MessageParser<CMD_Read_Mail_a_Parameters>(() => new CMD_Read_Mail_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Read_Mail_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[117]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Read_Mail_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Read_Mail_a_Parameters(CMD_Read_Mail_a_Parameters other) : this() {
    mailId_ = other.mailId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Read_Mail_a_Parameters Clone() {
    return new CMD_Read_Mail_a_Parameters(this);
  }

  /// <summary>Field number for the "mail_id" field.</summary>
  public const int MailIdFieldNumber = 1;
  private ulong mailId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong MailId {
    get { return mailId_; }
    set {
      mailId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Read_Mail_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Read_Mail_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId != 0UL) hash ^= MailId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MailId != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MailId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MailId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Read_Mail_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.MailId != 0UL) {
      MailId = other.MailId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          MailId = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_mail_r			   = 405;
/// </summary>
public sealed partial class CMD_Del_Mail_r_Parameters : pb::IMessage<CMD_Del_Mail_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Mail_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Mail_r_Parameters>(() => new CMD_Del_Mail_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Mail_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[118]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Mail_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Mail_r_Parameters(CMD_Del_Mail_r_Parameters other) : this() {
    mailIds_ = other.mailIds_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Mail_r_Parameters Clone() {
    return new CMD_Del_Mail_r_Parameters(this);
  }

  /// <summary>Field number for the "mail_ids" field.</summary>
  public const int MailIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<ulong> _repeated_mailIds_codec
      = pb::FieldCodec.ForUInt64(10);
  private readonly pbc::RepeatedField<ulong> mailIds_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<ulong> MailIds {
    get { return mailIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Mail_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Mail_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!mailIds_.Equals(other.mailIds_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= mailIds_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    mailIds_.WriteTo(output, _repeated_mailIds_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += mailIds_.CalculateSize(_repeated_mailIds_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Mail_r_Parameters other) {
    if (other == null) {
      return;
    }
    mailIds_.Add(other.mailIds_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10:
        case 8: {
          mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_mail_a             = 406;
/// </summary>
public sealed partial class CMD_Del_Mail_a_Parameters : pb::IMessage<CMD_Del_Mail_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Mail_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Mail_a_Parameters>(() => new CMD_Del_Mail_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Mail_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[119]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Mail_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Mail_a_Parameters(CMD_Del_Mail_a_Parameters other) : this() {
    mailIds_ = other.mailIds_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Mail_a_Parameters Clone() {
    return new CMD_Del_Mail_a_Parameters(this);
  }

  /// <summary>Field number for the "mail_ids" field.</summary>
  public const int MailIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<ulong> _repeated_mailIds_codec
      = pb::FieldCodec.ForUInt64(10);
  private readonly pbc::RepeatedField<ulong> mailIds_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<ulong> MailIds {
    get { return mailIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Mail_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Mail_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!mailIds_.Equals(other.mailIds_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= mailIds_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    mailIds_.WriteTo(output, _repeated_mailIds_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += mailIds_.CalculateSize(_repeated_mailIds_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Mail_a_Parameters other) {
    if (other == null) {
      return;
    }
    mailIds_.Add(other.mailIds_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10:
        case 8: {
          mailIds_.AddEntriesFrom(input, _repeated_mailIds_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_send_mail_r			   = 407;
/// </summary>
public sealed partial class CMD_Send_Mail_r_Parameters : pb::IMessage<CMD_Send_Mail_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Send_Mail_r_Parameters> _parser = new pb::MessageParser<CMD_Send_Mail_r_Parameters>(() => new CMD_Send_Mail_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Send_Mail_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[120]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Send_Mail_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Send_Mail_r_Parameters(CMD_Send_Mail_r_Parameters other) : this() {
    SendMail = other.sendMail_ != null ? other.SendMail.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Send_Mail_r_Parameters Clone() {
    return new CMD_Send_Mail_r_Parameters(this);
  }

  /// <summary>Field number for the "send_mail" field.</summary>
  public const int SendMailFieldNumber = 1;
  private global::Mail sendMail_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Mail SendMail {
    get { return sendMail_; }
    set {
      sendMail_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Send_Mail_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Send_Mail_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(SendMail, other.SendMail)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (sendMail_ != null) hash ^= SendMail.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (sendMail_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(SendMail);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (sendMail_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendMail);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Send_Mail_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.sendMail_ != null) {
      if (sendMail_ == null) {
        sendMail_ = new global::Mail();
      }
      SendMail.MergeFrom(other.SendMail);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (sendMail_ == null) {
            sendMail_ = new global::Mail();
          }
          input.ReadMessage(sendMail_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_send_mail_a			   = 408;
/// </summary>
public sealed partial class CMD_Send_Mail_a_Parameters : pb::IMessage<CMD_Send_Mail_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Send_Mail_a_Parameters> _parser = new pb::MessageParser<CMD_Send_Mail_a_Parameters>(() => new CMD_Send_Mail_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Send_Mail_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[121]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Send_Mail_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Send_Mail_a_Parameters(CMD_Send_Mail_a_Parameters other) : this() {
    SentMail = other.sentMail_ != null ? other.SentMail.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Send_Mail_a_Parameters Clone() {
    return new CMD_Send_Mail_a_Parameters(this);
  }

  /// <summary>Field number for the "sent_mail" field.</summary>
  public const int SentMailFieldNumber = 1;
  private global::Mail sentMail_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Mail SentMail {
    get { return sentMail_; }
    set {
      sentMail_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Send_Mail_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Send_Mail_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(SentMail, other.SentMail)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (sentMail_ != null) hash ^= SentMail.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (sentMail_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(SentMail);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (sentMail_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SentMail);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Send_Mail_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.sentMail_ != null) {
      if (sentMail_ == null) {
        sentMail_ = new global::Mail();
      }
      SentMail.MergeFrom(other.SentMail);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (sentMail_ == null) {
            sentMail_ = new global::Mail();
          }
          input.ReadMessage(sentMail_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_new_mail_notify        = 410;
/// </summary>
public sealed partial class CMD_New_Mail_Notify_Parameters : pb::IMessage<CMD_New_Mail_Notify_Parameters> {
  private static readonly pb::MessageParser<CMD_New_Mail_Notify_Parameters> _parser = new pb::MessageParser<CMD_New_Mail_Notify_Parameters>(() => new CMD_New_Mail_Notify_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_New_Mail_Notify_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[122]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_New_Mail_Notify_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_New_Mail_Notify_Parameters(CMD_New_Mail_Notify_Parameters other) : this() {
    NewMail = other.newMail_ != null ? other.NewMail.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_New_Mail_Notify_Parameters Clone() {
    return new CMD_New_Mail_Notify_Parameters(this);
  }

  /// <summary>Field number for the "new_mail" field.</summary>
  public const int NewMailFieldNumber = 1;
  private global::Mail newMail_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Mail NewMail {
    get { return newMail_; }
    set {
      newMail_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_New_Mail_Notify_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_New_Mail_Notify_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(NewMail, other.NewMail)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (newMail_ != null) hash ^= NewMail.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (newMail_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(NewMail);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (newMail_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewMail);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_New_Mail_Notify_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.newMail_ != null) {
      if (newMail_ == null) {
        newMail_ = new global::Mail();
      }
      NewMail.MergeFrom(other.NewMail);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (newMail_ == null) {
            newMail_ = new global::Mail();
          }
          input.ReadMessage(newMail_);
          break;
        }
      }
    }
  }

}

public sealed partial class GB_Attach_Info : pb::IMessage<GB_Attach_Info> {
  private static readonly pb::MessageParser<GB_Attach_Info> _parser = new pb::MessageParser<GB_Attach_Info>(() => new GB_Attach_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GB_Attach_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[123]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GB_Attach_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GB_Attach_Info(GB_Attach_Info other) : this() {
    attachUrlImage_ = other.attachUrlImage_.Clone();
    attachUrlVideo_ = other.attachUrlVideo_.Clone();
    attachUrlCourse_ = other.attachUrlCourse_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GB_Attach_Info Clone() {
    return new GB_Attach_Info(this);
  }

  /// <summary>Field number for the "attach_url_image" field.</summary>
  public const int AttachUrlImageFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_attachUrlImage_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> attachUrlImage_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> AttachUrlImage {
    get { return attachUrlImage_; }
  }

  /// <summary>Field number for the "attach_url_video" field.</summary>
  public const int AttachUrlVideoFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_attachUrlVideo_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> attachUrlVideo_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> AttachUrlVideo {
    get { return attachUrlVideo_; }
  }

  /// <summary>Field number for the "attach_url_course" field.</summary>
  public const int AttachUrlCourseFieldNumber = 3;
  private static readonly pb::FieldCodec<string> _repeated_attachUrlCourse_codec
      = pb::FieldCodec.ForString(26);
  private readonly pbc::RepeatedField<string> attachUrlCourse_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> AttachUrlCourse {
    get { return attachUrlCourse_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GB_Attach_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GB_Attach_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!attachUrlImage_.Equals(other.attachUrlImage_)) return false;
    if(!attachUrlVideo_.Equals(other.attachUrlVideo_)) return false;
    if(!attachUrlCourse_.Equals(other.attachUrlCourse_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= attachUrlImage_.GetHashCode();
    hash ^= attachUrlVideo_.GetHashCode();
    hash ^= attachUrlCourse_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    attachUrlImage_.WriteTo(output, _repeated_attachUrlImage_codec);
    attachUrlVideo_.WriteTo(output, _repeated_attachUrlVideo_codec);
    attachUrlCourse_.WriteTo(output, _repeated_attachUrlCourse_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += attachUrlImage_.CalculateSize(_repeated_attachUrlImage_codec);
    size += attachUrlVideo_.CalculateSize(_repeated_attachUrlVideo_codec);
    size += attachUrlCourse_.CalculateSize(_repeated_attachUrlCourse_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GB_Attach_Info other) {
    if (other == null) {
      return;
    }
    attachUrlImage_.Add(other.attachUrlImage_);
    attachUrlVideo_.Add(other.attachUrlVideo_);
    attachUrlCourse_.Add(other.attachUrlCourse_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          attachUrlImage_.AddEntriesFrom(input, _repeated_attachUrlImage_codec);
          break;
        }
        case 18: {
          attachUrlVideo_.AddEntriesFrom(input, _repeated_attachUrlVideo_codec);
          break;
        }
        case 26: {
          attachUrlCourse_.AddEntriesFrom(input, _repeated_attachUrlCourse_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GameBoard : pb::IMessage<GameBoard> {
  private static readonly pb::MessageParser<GameBoard> _parser = new pb::MessageParser<GameBoard>(() => new GameBoard());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameBoard> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[124]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameBoard() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameBoard(GameBoard other) : this() {
    gbId_ = other.gbId_;
    gbName_ = other.gbName_;
    gbDescription_ = other.gbDescription_;
    gbScriptShow_ = other.gbScriptShow_;
    gbDownloadCount_ = other.gbDownloadCount_;
    gbCreateId_ = other.gbCreateId_;
    gbCreateTime_ = other.gbCreateTime_;
    gbSenceId_ = other.gbSenceId_;
    gbLikeList_ = other.gbLikeList_.Clone();
    gbAnswerList_ = other.gbAnswerList_.Clone();
    projPath_ = other.projPath_;
    gbCreaterNickname_ = other.gbCreaterNickname_;
    gbType_ = other.gbType_;
    GbAttachInfo = other.gbAttachInfo_ != null ? other.GbAttachInfo.Clone() : null;
    gbParameters_ = other.gbParameters_;
    gbAllowRepeatAnswer_ = other.gbAllowRepeatAnswer_;
    gbMaxAnswerId_ = other.gbMaxAnswerId_;
    gbProjectLanguageType_ = other.gbProjectLanguageType_;
    gbUpdateTime_ = other.gbUpdateTime_;
    GbAttachInfoNew = other.gbAttachInfoNew_ != null ? other.GbAttachInfoNew.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameBoard Clone() {
    return new GameBoard(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "gb_name" field.</summary>
  public const int GbNameFieldNumber = 2;
  private string gbName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbName {
    get { return gbName_; }
    set {
      gbName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_description" field.</summary>
  public const int GbDescriptionFieldNumber = 3;
  private string gbDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbDescription {
    get { return gbDescription_; }
    set {
      gbDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_script_show" field.</summary>
  public const int GbScriptShowFieldNumber = 4;
  private uint gbScriptShow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbScriptShow {
    get { return gbScriptShow_; }
    set {
      gbScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "gb_download_count" field.</summary>
  public const int GbDownloadCountFieldNumber = 5;
  private uint gbDownloadCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbDownloadCount {
    get { return gbDownloadCount_; }
    set {
      gbDownloadCount_ = value;
    }
  }

  /// <summary>Field number for the "gb_create_id" field.</summary>
  public const int GbCreateIdFieldNumber = 6;
  private uint gbCreateId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbCreateId {
    get { return gbCreateId_; }
    set {
      gbCreateId_ = value;
    }
  }

  /// <summary>Field number for the "gb_create_time" field.</summary>
  public const int GbCreateTimeFieldNumber = 7;
  private ulong gbCreateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong GbCreateTime {
    get { return gbCreateTime_; }
    set {
      gbCreateTime_ = value;
    }
  }

  /// <summary>Field number for the "gb_sence_id" field.</summary>
  public const int GbSenceIdFieldNumber = 8;
  private uint gbSenceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbSenceId {
    get { return gbSenceId_; }
    set {
      gbSenceId_ = value;
    }
  }

  /// <summary>Field number for the "gb_like_list" field.</summary>
  public const int GbLikeListFieldNumber = 9;
  private static readonly pbc::MapField<uint, global::GBLike_Info>.Codec _map_gbLikeList_codec
      = new pbc::MapField<uint, global::GBLike_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::GBLike_Info.Parser), 74);
  private readonly pbc::MapField<uint, global::GBLike_Info> gbLikeList_ = new pbc::MapField<uint, global::GBLike_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::GBLike_Info> GbLikeList {
    get { return gbLikeList_; }
  }

  /// <summary>Field number for the "gb_answer_list" field.</summary>
  public const int GbAnswerListFieldNumber = 10;
  private static readonly pbc::MapField<uint, global::GBAnswer>.Codec _map_gbAnswerList_codec
      = new pbc::MapField<uint, global::GBAnswer>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::GBAnswer.Parser), 82);
  private readonly pbc::MapField<uint, global::GBAnswer> gbAnswerList_ = new pbc::MapField<uint, global::GBAnswer>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::GBAnswer> GbAnswerList {
    get { return gbAnswerList_; }
  }

  /// <summary>Field number for the "proj_path" field.</summary>
  public const int ProjPathFieldNumber = 11;
  private string projPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjPath {
    get { return projPath_; }
    set {
      projPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_creater_nickname" field.</summary>
  public const int GbCreaterNicknameFieldNumber = 12;
  private string gbCreaterNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbCreaterNickname {
    get { return gbCreaterNickname_; }
    set {
      gbCreaterNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_type" field.</summary>
  public const int GbTypeFieldNumber = 13;
  private uint gbType_;
  /// <summary>
  /// default 0, mini-course 1
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbType {
    get { return gbType_; }
    set {
      gbType_ = value;
    }
  }

  /// <summary>Field number for the "gb_attach_info" field.</summary>
  public const int GbAttachInfoFieldNumber = 14;
  private global::GB_Attach_Info gbAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GB_Attach_Info GbAttachInfo {
    get { return gbAttachInfo_; }
    set {
      gbAttachInfo_ = value;
    }
  }

  /// <summary>Field number for the "gb_parameters" field.</summary>
  public const int GbParametersFieldNumber = 15;
  private string gbParameters_ = "";
  /// <summary>
  ///  json string
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbParameters {
    get { return gbParameters_; }
    set {
      gbParameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_allow_repeat_answer" field.</summary>
  public const int GbAllowRepeatAnswerFieldNumber = 16;
  private bool gbAllowRepeatAnswer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool GbAllowRepeatAnswer {
    get { return gbAllowRepeatAnswer_; }
    set {
      gbAllowRepeatAnswer_ = value;
    }
  }

  /// <summary>Field number for the "gb_max_answer_id" field.</summary>
  public const int GbMaxAnswerIdFieldNumber = 17;
  private uint gbMaxAnswerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbMaxAnswerId {
    get { return gbMaxAnswerId_; }
    set {
      gbMaxAnswerId_ = value;
    }
  }

  /// <summary>Field number for the "gb_project_language_type" field.</summary>
  public const int GbProjectLanguageTypeFieldNumber = 18;
  private global::Project_Language_Type gbProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type GbProjectLanguageType {
    get { return gbProjectLanguageType_; }
    set {
      gbProjectLanguageType_ = value;
    }
  }

  /// <summary>Field number for the "gb_update_time" field.</summary>
  public const int GbUpdateTimeFieldNumber = 19;
  private ulong gbUpdateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong GbUpdateTime {
    get { return gbUpdateTime_; }
    set {
      gbUpdateTime_ = value;
    }
  }

  /// <summary>Field number for the "gb_attach_info_new" field.</summary>
  public const int GbAttachInfoNewFieldNumber = 20;
  private global::K8_Attach_Info gbAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info GbAttachInfoNew {
    get { return gbAttachInfoNew_; }
    set {
      gbAttachInfoNew_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameBoard);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameBoard other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (GbName != other.GbName) return false;
    if (GbDescription != other.GbDescription) return false;
    if (GbScriptShow != other.GbScriptShow) return false;
    if (GbDownloadCount != other.GbDownloadCount) return false;
    if (GbCreateId != other.GbCreateId) return false;
    if (GbCreateTime != other.GbCreateTime) return false;
    if (GbSenceId != other.GbSenceId) return false;
    if (!GbLikeList.Equals(other.GbLikeList)) return false;
    if (!GbAnswerList.Equals(other.GbAnswerList)) return false;
    if (ProjPath != other.ProjPath) return false;
    if (GbCreaterNickname != other.GbCreaterNickname) return false;
    if (GbType != other.GbType) return false;
    if (!object.Equals(GbAttachInfo, other.GbAttachInfo)) return false;
    if (GbParameters != other.GbParameters) return false;
    if (GbAllowRepeatAnswer != other.GbAllowRepeatAnswer) return false;
    if (GbMaxAnswerId != other.GbMaxAnswerId) return false;
    if (GbProjectLanguageType != other.GbProjectLanguageType) return false;
    if (GbUpdateTime != other.GbUpdateTime) return false;
    if (!object.Equals(GbAttachInfoNew, other.GbAttachInfoNew)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (GbName.Length != 0) hash ^= GbName.GetHashCode();
    if (GbDescription.Length != 0) hash ^= GbDescription.GetHashCode();
    if (GbScriptShow != 0) hash ^= GbScriptShow.GetHashCode();
    if (GbDownloadCount != 0) hash ^= GbDownloadCount.GetHashCode();
    if (GbCreateId != 0) hash ^= GbCreateId.GetHashCode();
    if (GbCreateTime != 0UL) hash ^= GbCreateTime.GetHashCode();
    if (GbSenceId != 0) hash ^= GbSenceId.GetHashCode();
    hash ^= GbLikeList.GetHashCode();
    hash ^= GbAnswerList.GetHashCode();
    if (ProjPath.Length != 0) hash ^= ProjPath.GetHashCode();
    if (GbCreaterNickname.Length != 0) hash ^= GbCreaterNickname.GetHashCode();
    if (GbType != 0) hash ^= GbType.GetHashCode();
    if (gbAttachInfo_ != null) hash ^= GbAttachInfo.GetHashCode();
    if (GbParameters.Length != 0) hash ^= GbParameters.GetHashCode();
    if (GbAllowRepeatAnswer != false) hash ^= GbAllowRepeatAnswer.GetHashCode();
    if (GbMaxAnswerId != 0) hash ^= GbMaxAnswerId.GetHashCode();
    if (GbProjectLanguageType != 0) hash ^= GbProjectLanguageType.GetHashCode();
    if (GbUpdateTime != 0UL) hash ^= GbUpdateTime.GetHashCode();
    if (gbAttachInfoNew_ != null) hash ^= GbAttachInfoNew.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (GbName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(GbName);
    }
    if (GbDescription.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(GbDescription);
    }
    if (GbScriptShow != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(GbScriptShow);
    }
    if (GbDownloadCount != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(GbDownloadCount);
    }
    if (GbCreateId != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(GbCreateId);
    }
    if (GbCreateTime != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(GbCreateTime);
    }
    if (GbSenceId != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(GbSenceId);
    }
    gbLikeList_.WriteTo(output, _map_gbLikeList_codec);
    gbAnswerList_.WriteTo(output, _map_gbAnswerList_codec);
    if (ProjPath.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(ProjPath);
    }
    if (GbCreaterNickname.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(GbCreaterNickname);
    }
    if (GbType != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(GbType);
    }
    if (gbAttachInfo_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(GbAttachInfo);
    }
    if (GbParameters.Length != 0) {
      output.WriteRawTag(122);
      output.WriteString(GbParameters);
    }
    if (GbAllowRepeatAnswer != false) {
      output.WriteRawTag(128, 1);
      output.WriteBool(GbAllowRepeatAnswer);
    }
    if (GbMaxAnswerId != 0) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(GbMaxAnswerId);
    }
    if (GbProjectLanguageType != 0) {
      output.WriteRawTag(144, 1);
      output.WriteEnum((int) GbProjectLanguageType);
    }
    if (GbUpdateTime != 0UL) {
      output.WriteRawTag(152, 1);
      output.WriteUInt64(GbUpdateTime);
    }
    if (gbAttachInfoNew_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(GbAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (GbName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbName);
    }
    if (GbDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbDescription);
    }
    if (GbScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbScriptShow);
    }
    if (GbDownloadCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbDownloadCount);
    }
    if (GbCreateId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbCreateId);
    }
    if (GbCreateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GbCreateTime);
    }
    if (GbSenceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbSenceId);
    }
    size += gbLikeList_.CalculateSize(_map_gbLikeList_codec);
    size += gbAnswerList_.CalculateSize(_map_gbAnswerList_codec);
    if (ProjPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjPath);
    }
    if (GbCreaterNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbCreaterNickname);
    }
    if (GbType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbType);
    }
    if (gbAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbAttachInfo);
    }
    if (GbParameters.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbParameters);
    }
    if (GbAllowRepeatAnswer != false) {
      size += 2 + 1;
    }
    if (GbMaxAnswerId != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GbMaxAnswerId);
    }
    if (GbProjectLanguageType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GbProjectLanguageType);
    }
    if (GbUpdateTime != 0UL) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(GbUpdateTime);
    }
    if (gbAttachInfoNew_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GbAttachInfoNew);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameBoard other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.GbName.Length != 0) {
      GbName = other.GbName;
    }
    if (other.GbDescription.Length != 0) {
      GbDescription = other.GbDescription;
    }
    if (other.GbScriptShow != 0) {
      GbScriptShow = other.GbScriptShow;
    }
    if (other.GbDownloadCount != 0) {
      GbDownloadCount = other.GbDownloadCount;
    }
    if (other.GbCreateId != 0) {
      GbCreateId = other.GbCreateId;
    }
    if (other.GbCreateTime != 0UL) {
      GbCreateTime = other.GbCreateTime;
    }
    if (other.GbSenceId != 0) {
      GbSenceId = other.GbSenceId;
    }
    gbLikeList_.Add(other.gbLikeList_);
    gbAnswerList_.Add(other.gbAnswerList_);
    if (other.ProjPath.Length != 0) {
      ProjPath = other.ProjPath;
    }
    if (other.GbCreaterNickname.Length != 0) {
      GbCreaterNickname = other.GbCreaterNickname;
    }
    if (other.GbType != 0) {
      GbType = other.GbType;
    }
    if (other.gbAttachInfo_ != null) {
      if (gbAttachInfo_ == null) {
        gbAttachInfo_ = new global::GB_Attach_Info();
      }
      GbAttachInfo.MergeFrom(other.GbAttachInfo);
    }
    if (other.GbParameters.Length != 0) {
      GbParameters = other.GbParameters;
    }
    if (other.GbAllowRepeatAnswer != false) {
      GbAllowRepeatAnswer = other.GbAllowRepeatAnswer;
    }
    if (other.GbMaxAnswerId != 0) {
      GbMaxAnswerId = other.GbMaxAnswerId;
    }
    if (other.GbProjectLanguageType != 0) {
      GbProjectLanguageType = other.GbProjectLanguageType;
    }
    if (other.GbUpdateTime != 0UL) {
      GbUpdateTime = other.GbUpdateTime;
    }
    if (other.gbAttachInfoNew_ != null) {
      if (gbAttachInfoNew_ == null) {
        gbAttachInfoNew_ = new global::K8_Attach_Info();
      }
      GbAttachInfoNew.MergeFrom(other.GbAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 18: {
          GbName = input.ReadString();
          break;
        }
        case 26: {
          GbDescription = input.ReadString();
          break;
        }
        case 32: {
          GbScriptShow = input.ReadUInt32();
          break;
        }
        case 40: {
          GbDownloadCount = input.ReadUInt32();
          break;
        }
        case 48: {
          GbCreateId = input.ReadUInt32();
          break;
        }
        case 56: {
          GbCreateTime = input.ReadUInt64();
          break;
        }
        case 64: {
          GbSenceId = input.ReadUInt32();
          break;
        }
        case 74: {
          gbLikeList_.AddEntriesFrom(input, _map_gbLikeList_codec);
          break;
        }
        case 82: {
          gbAnswerList_.AddEntriesFrom(input, _map_gbAnswerList_codec);
          break;
        }
        case 90: {
          ProjPath = input.ReadString();
          break;
        }
        case 98: {
          GbCreaterNickname = input.ReadString();
          break;
        }
        case 104: {
          GbType = input.ReadUInt32();
          break;
        }
        case 114: {
          if (gbAttachInfo_ == null) {
            gbAttachInfo_ = new global::GB_Attach_Info();
          }
          input.ReadMessage(gbAttachInfo_);
          break;
        }
        case 122: {
          GbParameters = input.ReadString();
          break;
        }
        case 128: {
          GbAllowRepeatAnswer = input.ReadBool();
          break;
        }
        case 136: {
          GbMaxAnswerId = input.ReadUInt32();
          break;
        }
        case 144: {
          gbProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
        case 152: {
          GbUpdateTime = input.ReadUInt64();
          break;
        }
        case 162: {
          if (gbAttachInfoNew_ == null) {
            gbAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(gbAttachInfoNew_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_gameboard_r	   = 501; 
/// </summary>
public sealed partial class CMD_Create_Gameboard_r_Parameters : pb::IMessage<CMD_Create_Gameboard_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Gameboard_r_Parameters> _parser = new pb::MessageParser<CMD_Create_Gameboard_r_Parameters>(() => new CMD_Create_Gameboard_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Gameboard_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[125]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Gameboard_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Gameboard_r_Parameters(CMD_Create_Gameboard_r_Parameters other) : this() {
    gbName_ = other.gbName_;
    gbScriptShow_ = other.gbScriptShow_;
    gbSenceId_ = other.gbSenceId_;
    gbDescription_ = other.gbDescription_;
    gbSavedPath_ = other.gbSavedPath_;
    GbAttachInfo = other.gbAttachInfo_ != null ? other.GbAttachInfo.Clone() : null;
    gbParameters_ = other.gbParameters_;
    gbAllowRepeatAnswer_ = other.gbAllowRepeatAnswer_;
    gbProjectLanguageType_ = other.gbProjectLanguageType_;
    GbFiles = other.gbFiles_ != null ? other.GbFiles.Clone() : null;
    GbAttachInfoNew = other.gbAttachInfoNew_ != null ? other.GbAttachInfoNew.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Gameboard_r_Parameters Clone() {
    return new CMD_Create_Gameboard_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_name" field.</summary>
  public const int GbNameFieldNumber = 1;
  private string gbName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbName {
    get { return gbName_; }
    set {
      gbName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_script_show" field.</summary>
  public const int GbScriptShowFieldNumber = 2;
  private uint gbScriptShow_;
  /// <summary>
  ///  0 未设置 1 隐藏 2 显示
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbScriptShow {
    get { return gbScriptShow_; }
    set {
      gbScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "gb_sence_id" field.</summary>
  public const int GbSenceIdFieldNumber = 3;
  private uint gbSenceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbSenceId {
    get { return gbSenceId_; }
    set {
      gbSenceId_ = value;
    }
  }

  /// <summary>Field number for the "gb_description" field.</summary>
  public const int GbDescriptionFieldNumber = 4;
  private string gbDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbDescription {
    get { return gbDescription_; }
    set {
      gbDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_saved_path" field.</summary>
  public const int GbSavedPathFieldNumber = 6;
  private string gbSavedPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbSavedPath {
    get { return gbSavedPath_; }
    set {
      gbSavedPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_attach_info" field.</summary>
  public const int GbAttachInfoFieldNumber = 7;
  private global::GB_Attach_Info gbAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GB_Attach_Info GbAttachInfo {
    get { return gbAttachInfo_; }
    set {
      gbAttachInfo_ = value;
    }
  }

  /// <summary>Field number for the "gb_parameters" field.</summary>
  public const int GbParametersFieldNumber = 8;
  private string gbParameters_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbParameters {
    get { return gbParameters_; }
    set {
      gbParameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_allow_repeat_answer" field.</summary>
  public const int GbAllowRepeatAnswerFieldNumber = 9;
  private bool gbAllowRepeatAnswer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool GbAllowRepeatAnswer {
    get { return gbAllowRepeatAnswer_; }
    set {
      gbAllowRepeatAnswer_ = value;
    }
  }

  /// <summary>Field number for the "gb_project_language_type" field.</summary>
  public const int GbProjectLanguageTypeFieldNumber = 10;
  private global::Project_Language_Type gbProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type GbProjectLanguageType {
    get { return gbProjectLanguageType_; }
    set {
      gbProjectLanguageType_ = value;
    }
  }

  /// <summary>Field number for the "gb_files" field.</summary>
  public const int GbFilesFieldNumber = 11;
  private global::FileList gbFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList GbFiles {
    get { return gbFiles_; }
    set {
      gbFiles_ = value;
    }
  }

  /// <summary>Field number for the "gb_attach_info_new" field.</summary>
  public const int GbAttachInfoNewFieldNumber = 12;
  private global::K8_Attach_Info gbAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info GbAttachInfoNew {
    get { return gbAttachInfoNew_; }
    set {
      gbAttachInfoNew_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Gameboard_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Gameboard_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbName != other.GbName) return false;
    if (GbScriptShow != other.GbScriptShow) return false;
    if (GbSenceId != other.GbSenceId) return false;
    if (GbDescription != other.GbDescription) return false;
    if (GbSavedPath != other.GbSavedPath) return false;
    if (!object.Equals(GbAttachInfo, other.GbAttachInfo)) return false;
    if (GbParameters != other.GbParameters) return false;
    if (GbAllowRepeatAnswer != other.GbAllowRepeatAnswer) return false;
    if (GbProjectLanguageType != other.GbProjectLanguageType) return false;
    if (!object.Equals(GbFiles, other.GbFiles)) return false;
    if (!object.Equals(GbAttachInfoNew, other.GbAttachInfoNew)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbName.Length != 0) hash ^= GbName.GetHashCode();
    if (GbScriptShow != 0) hash ^= GbScriptShow.GetHashCode();
    if (GbSenceId != 0) hash ^= GbSenceId.GetHashCode();
    if (GbDescription.Length != 0) hash ^= GbDescription.GetHashCode();
    if (GbSavedPath.Length != 0) hash ^= GbSavedPath.GetHashCode();
    if (gbAttachInfo_ != null) hash ^= GbAttachInfo.GetHashCode();
    if (GbParameters.Length != 0) hash ^= GbParameters.GetHashCode();
    if (GbAllowRepeatAnswer != false) hash ^= GbAllowRepeatAnswer.GetHashCode();
    if (GbProjectLanguageType != 0) hash ^= GbProjectLanguageType.GetHashCode();
    if (gbFiles_ != null) hash ^= GbFiles.GetHashCode();
    if (gbAttachInfoNew_ != null) hash ^= GbAttachInfoNew.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GbName);
    }
    if (GbScriptShow != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GbScriptShow);
    }
    if (GbSenceId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(GbSenceId);
    }
    if (GbDescription.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(GbDescription);
    }
    if (GbSavedPath.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(GbSavedPath);
    }
    if (gbAttachInfo_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(GbAttachInfo);
    }
    if (GbParameters.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(GbParameters);
    }
    if (GbAllowRepeatAnswer != false) {
      output.WriteRawTag(72);
      output.WriteBool(GbAllowRepeatAnswer);
    }
    if (GbProjectLanguageType != 0) {
      output.WriteRawTag(80);
      output.WriteEnum((int) GbProjectLanguageType);
    }
    if (gbFiles_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(GbFiles);
    }
    if (gbAttachInfoNew_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(GbAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbName);
    }
    if (GbScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbScriptShow);
    }
    if (GbSenceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbSenceId);
    }
    if (GbDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbDescription);
    }
    if (GbSavedPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbSavedPath);
    }
    if (gbAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbAttachInfo);
    }
    if (GbParameters.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbParameters);
    }
    if (GbAllowRepeatAnswer != false) {
      size += 1 + 1;
    }
    if (GbProjectLanguageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GbProjectLanguageType);
    }
    if (gbFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbFiles);
    }
    if (gbAttachInfoNew_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbAttachInfoNew);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Gameboard_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbName.Length != 0) {
      GbName = other.GbName;
    }
    if (other.GbScriptShow != 0) {
      GbScriptShow = other.GbScriptShow;
    }
    if (other.GbSenceId != 0) {
      GbSenceId = other.GbSenceId;
    }
    if (other.GbDescription.Length != 0) {
      GbDescription = other.GbDescription;
    }
    if (other.GbSavedPath.Length != 0) {
      GbSavedPath = other.GbSavedPath;
    }
    if (other.gbAttachInfo_ != null) {
      if (gbAttachInfo_ == null) {
        gbAttachInfo_ = new global::GB_Attach_Info();
      }
      GbAttachInfo.MergeFrom(other.GbAttachInfo);
    }
    if (other.GbParameters.Length != 0) {
      GbParameters = other.GbParameters;
    }
    if (other.GbAllowRepeatAnswer != false) {
      GbAllowRepeatAnswer = other.GbAllowRepeatAnswer;
    }
    if (other.GbProjectLanguageType != 0) {
      GbProjectLanguageType = other.GbProjectLanguageType;
    }
    if (other.gbFiles_ != null) {
      if (gbFiles_ == null) {
        gbFiles_ = new global::FileList();
      }
      GbFiles.MergeFrom(other.GbFiles);
    }
    if (other.gbAttachInfoNew_ != null) {
      if (gbAttachInfoNew_ == null) {
        gbAttachInfoNew_ = new global::K8_Attach_Info();
      }
      GbAttachInfoNew.MergeFrom(other.GbAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          GbName = input.ReadString();
          break;
        }
        case 16: {
          GbScriptShow = input.ReadUInt32();
          break;
        }
        case 24: {
          GbSenceId = input.ReadUInt32();
          break;
        }
        case 34: {
          GbDescription = input.ReadString();
          break;
        }
        case 50: {
          GbSavedPath = input.ReadString();
          break;
        }
        case 58: {
          if (gbAttachInfo_ == null) {
            gbAttachInfo_ = new global::GB_Attach_Info();
          }
          input.ReadMessage(gbAttachInfo_);
          break;
        }
        case 66: {
          GbParameters = input.ReadString();
          break;
        }
        case 72: {
          GbAllowRepeatAnswer = input.ReadBool();
          break;
        }
        case 80: {
          gbProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
        case 90: {
          if (gbFiles_ == null) {
            gbFiles_ = new global::FileList();
          }
          input.ReadMessage(gbFiles_);
          break;
        }
        case 98: {
          if (gbAttachInfoNew_ == null) {
            gbAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(gbAttachInfoNew_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_gameboard_a	   = 502;
/// </summary>
public sealed partial class CMD_Create_Gameboard_a_Parameters : pb::IMessage<CMD_Create_Gameboard_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Gameboard_a_Parameters> _parser = new pb::MessageParser<CMD_Create_Gameboard_a_Parameters>(() => new CMD_Create_Gameboard_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Gameboard_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[126]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Gameboard_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Gameboard_a_Parameters(CMD_Create_Gameboard_a_Parameters other) : this() {
    gbName_ = other.gbName_;
    gbScriptShow_ = other.gbScriptShow_;
    gbId_ = other.gbId_;
    gbPath_ = other.gbPath_;
    GbInfo = other.gbInfo_ != null ? other.GbInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Gameboard_a_Parameters Clone() {
    return new CMD_Create_Gameboard_a_Parameters(this);
  }

  /// <summary>Field number for the "gb_name" field.</summary>
  public const int GbNameFieldNumber = 1;
  private string gbName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbName {
    get { return gbName_; }
    set {
      gbName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_script_show" field.</summary>
  public const int GbScriptShowFieldNumber = 2;
  private uint gbScriptShow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbScriptShow {
    get { return gbScriptShow_; }
    set {
      gbScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 11;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "gb_path" field.</summary>
  public const int GbPathFieldNumber = 12;
  private string gbPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbPath {
    get { return gbPath_; }
    set {
      gbPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_info" field.</summary>
  public const int GbInfoFieldNumber = 13;
  private global::GameBoard gbInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameBoard GbInfo {
    get { return gbInfo_; }
    set {
      gbInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Gameboard_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Gameboard_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbName != other.GbName) return false;
    if (GbScriptShow != other.GbScriptShow) return false;
    if (GbId != other.GbId) return false;
    if (GbPath != other.GbPath) return false;
    if (!object.Equals(GbInfo, other.GbInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbName.Length != 0) hash ^= GbName.GetHashCode();
    if (GbScriptShow != 0) hash ^= GbScriptShow.GetHashCode();
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (GbPath.Length != 0) hash ^= GbPath.GetHashCode();
    if (gbInfo_ != null) hash ^= GbInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GbName);
    }
    if (GbScriptShow != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GbScriptShow);
    }
    if (GbId != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(GbId);
    }
    if (GbPath.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(GbPath);
    }
    if (gbInfo_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(GbInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbName);
    }
    if (GbScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbScriptShow);
    }
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (GbPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbPath);
    }
    if (gbInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Gameboard_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbName.Length != 0) {
      GbName = other.GbName;
    }
    if (other.GbScriptShow != 0) {
      GbScriptShow = other.GbScriptShow;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.GbPath.Length != 0) {
      GbPath = other.GbPath;
    }
    if (other.gbInfo_ != null) {
      if (gbInfo_ == null) {
        gbInfo_ = new global::GameBoard();
      }
      GbInfo.MergeFrom(other.GbInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          GbName = input.ReadString();
          break;
        }
        case 16: {
          GbScriptShow = input.ReadUInt32();
          break;
        }
        case 88: {
          GbId = input.ReadUInt32();
          break;
        }
        case 98: {
          GbPath = input.ReadString();
          break;
        }
        case 106: {
          if (gbInfo_ == null) {
            gbInfo_ = new global::GameBoard();
          }
          input.ReadMessage(gbInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_gameboard_r	   = 503;
/// </summary>
public sealed partial class CMD_Modify_Gameboard_r_Parameters : pb::IMessage<CMD_Modify_Gameboard_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Gameboard_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Gameboard_r_Parameters>(() => new CMD_Modify_Gameboard_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Gameboard_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[127]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Gameboard_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Gameboard_r_Parameters(CMD_Modify_Gameboard_r_Parameters other) : this() {
    gbId_ = other.gbId_;
    gbScriptShow_ = other.gbScriptShow_;
    GbAttachInfo = other.gbAttachInfo_ != null ? other.GbAttachInfo.Clone() : null;
    gbParameters_ = other.gbParameters_;
    GbFiles = other.gbFiles_ != null ? other.GbFiles.Clone() : null;
    GbAttachInfoNew = other.gbAttachInfoNew_ != null ? other.GbAttachInfoNew.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Gameboard_r_Parameters Clone() {
    return new CMD_Modify_Gameboard_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "gb_script_show" field.</summary>
  public const int GbScriptShowFieldNumber = 2;
  private uint gbScriptShow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbScriptShow {
    get { return gbScriptShow_; }
    set {
      gbScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "gb_attach_info" field.</summary>
  public const int GbAttachInfoFieldNumber = 4;
  private global::GB_Attach_Info gbAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GB_Attach_Info GbAttachInfo {
    get { return gbAttachInfo_; }
    set {
      gbAttachInfo_ = value;
    }
  }

  /// <summary>Field number for the "gb_parameters" field.</summary>
  public const int GbParametersFieldNumber = 5;
  private string gbParameters_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbParameters {
    get { return gbParameters_; }
    set {
      gbParameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_files" field.</summary>
  public const int GbFilesFieldNumber = 6;
  private global::FileList gbFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList GbFiles {
    get { return gbFiles_; }
    set {
      gbFiles_ = value;
    }
  }

  /// <summary>Field number for the "gb_attach_info_new" field.</summary>
  public const int GbAttachInfoNewFieldNumber = 7;
  private global::K8_Attach_Info gbAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info GbAttachInfoNew {
    get { return gbAttachInfoNew_; }
    set {
      gbAttachInfoNew_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Gameboard_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Gameboard_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (GbScriptShow != other.GbScriptShow) return false;
    if (!object.Equals(GbAttachInfo, other.GbAttachInfo)) return false;
    if (GbParameters != other.GbParameters) return false;
    if (!object.Equals(GbFiles, other.GbFiles)) return false;
    if (!object.Equals(GbAttachInfoNew, other.GbAttachInfoNew)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (GbScriptShow != 0) hash ^= GbScriptShow.GetHashCode();
    if (gbAttachInfo_ != null) hash ^= GbAttachInfo.GetHashCode();
    if (GbParameters.Length != 0) hash ^= GbParameters.GetHashCode();
    if (gbFiles_ != null) hash ^= GbFiles.GetHashCode();
    if (gbAttachInfoNew_ != null) hash ^= GbAttachInfoNew.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (GbScriptShow != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GbScriptShow);
    }
    if (gbAttachInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GbAttachInfo);
    }
    if (GbParameters.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(GbParameters);
    }
    if (gbFiles_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GbFiles);
    }
    if (gbAttachInfoNew_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(GbAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (GbScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbScriptShow);
    }
    if (gbAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbAttachInfo);
    }
    if (GbParameters.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbParameters);
    }
    if (gbFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbFiles);
    }
    if (gbAttachInfoNew_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbAttachInfoNew);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Gameboard_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.GbScriptShow != 0) {
      GbScriptShow = other.GbScriptShow;
    }
    if (other.gbAttachInfo_ != null) {
      if (gbAttachInfo_ == null) {
        gbAttachInfo_ = new global::GB_Attach_Info();
      }
      GbAttachInfo.MergeFrom(other.GbAttachInfo);
    }
    if (other.GbParameters.Length != 0) {
      GbParameters = other.GbParameters;
    }
    if (other.gbFiles_ != null) {
      if (gbFiles_ == null) {
        gbFiles_ = new global::FileList();
      }
      GbFiles.MergeFrom(other.GbFiles);
    }
    if (other.gbAttachInfoNew_ != null) {
      if (gbAttachInfoNew_ == null) {
        gbAttachInfoNew_ = new global::K8_Attach_Info();
      }
      GbAttachInfoNew.MergeFrom(other.GbAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 16: {
          GbScriptShow = input.ReadUInt32();
          break;
        }
        case 34: {
          if (gbAttachInfo_ == null) {
            gbAttachInfo_ = new global::GB_Attach_Info();
          }
          input.ReadMessage(gbAttachInfo_);
          break;
        }
        case 42: {
          GbParameters = input.ReadString();
          break;
        }
        case 50: {
          if (gbFiles_ == null) {
            gbFiles_ = new global::FileList();
          }
          input.ReadMessage(gbFiles_);
          break;
        }
        case 58: {
          if (gbAttachInfoNew_ == null) {
            gbAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(gbAttachInfoNew_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_gameboard_a	   = 504;
/// </summary>
public sealed partial class CMD_Modify_Gameboard_a_Parameters : pb::IMessage<CMD_Modify_Gameboard_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Gameboard_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Gameboard_a_Parameters>(() => new CMD_Modify_Gameboard_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Gameboard_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[128]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Gameboard_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Gameboard_a_Parameters(CMD_Modify_Gameboard_a_Parameters other) : this() {
    gbId_ = other.gbId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Gameboard_a_Parameters Clone() {
    return new CMD_Modify_Gameboard_a_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Gameboard_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Gameboard_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Gameboard_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_gameboard_r		   = 505;
/// </summary>
public sealed partial class CMD_Del_Gameboard_r_Parameters : pb::IMessage<CMD_Del_Gameboard_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Gameboard_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Gameboard_r_Parameters>(() => new CMD_Del_Gameboard_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Gameboard_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[129]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_r_Parameters(CMD_Del_Gameboard_r_Parameters other) : this() {
    gbId_ = other.gbId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_r_Parameters Clone() {
    return new CMD_Del_Gameboard_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Gameboard_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Gameboard_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Gameboard_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_gameboard_a        = 506;
/// </summary>
public sealed partial class CMD_Del_Gameboard_a_Parameters : pb::IMessage<CMD_Del_Gameboard_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Gameboard_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Gameboard_a_Parameters>(() => new CMD_Del_Gameboard_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Gameboard_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[130]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_a_Parameters(CMD_Del_Gameboard_a_Parameters other) : this() {
    gbId_ = other.gbId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_a_Parameters Clone() {
    return new CMD_Del_Gameboard_a_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Gameboard_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Gameboard_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Gameboard_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_gameboard_r		   = 507;
/// </summary>
public sealed partial class CMD_Get_Gameboard_r_Parameters : pb::IMessage<CMD_Get_Gameboard_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Gameboard_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Gameboard_r_Parameters>(() => new CMD_Get_Gameboard_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Gameboard_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[131]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboard_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboard_r_Parameters(CMD_Get_Gameboard_r_Parameters other) : this() {
    gbId_ = other.gbId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboard_r_Parameters Clone() {
    return new CMD_Get_Gameboard_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Gameboard_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Gameboard_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Gameboard_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_gameboard_a        = 508;
/// </summary>
public sealed partial class CMD_Get_Gameboard_a_Parameters : pb::IMessage<CMD_Get_Gameboard_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Gameboard_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Gameboard_a_Parameters>(() => new CMD_Get_Gameboard_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Gameboard_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[132]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboard_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboard_a_Parameters(CMD_Get_Gameboard_a_Parameters other) : this() {
    GbInfo = other.gbInfo_ != null ? other.GbInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboard_a_Parameters Clone() {
    return new CMD_Get_Gameboard_a_Parameters(this);
  }

  /// <summary>Field number for the "gb_info" field.</summary>
  public const int GbInfoFieldNumber = 1;
  private global::GameBoard gbInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameBoard GbInfo {
    get { return gbInfo_; }
    set {
      gbInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Gameboard_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Gameboard_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GbInfo, other.GbInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (gbInfo_ != null) hash ^= GbInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (gbInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GbInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (gbInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Gameboard_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.gbInfo_ != null) {
      if (gbInfo_ == null) {
        gbInfo_ = new global::GameBoard();
      }
      GbInfo.MergeFrom(other.GbInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (gbInfo_ == null) {
            gbInfo_ = new global::GameBoard();
          }
          input.ReadMessage(gbInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_gameboardlist_r	   = 509;
/// </summary>
public sealed partial class CMD_Get_Gameboardlist_r_Parameters : pb::IMessage<CMD_Get_Gameboardlist_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Gameboardlist_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Gameboardlist_r_Parameters>(() => new CMD_Get_Gameboardlist_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Gameboardlist_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[133]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboardlist_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboardlist_r_Parameters(CMD_Get_Gameboardlist_r_Parameters other) : this() {
    sortType_ = other.sortType_;
    showScript_ = other.showScript_;
    startPos_ = other.startPos_;
    limitCount_ = other.limitCount_;
    desc_ = other.desc_;
    reqLanguageType_ = other.reqLanguageType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboardlist_r_Parameters Clone() {
    return new CMD_Get_Gameboardlist_r_Parameters(this);
  }

  /// <summary>Field number for the "sort_type" field.</summary>
  public const int SortTypeFieldNumber = 1;
  private global::GBSort_Type sortType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GBSort_Type SortType {
    get { return sortType_; }
    set {
      sortType_ = value;
    }
  }

  /// <summary>Field number for the "show_script" field.</summary>
  public const int ShowScriptFieldNumber = 2;
  private uint showScript_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ShowScript {
    get { return showScript_; }
    set {
      showScript_ = value;
    }
  }

  /// <summary>Field number for the "start_pos" field.</summary>
  public const int StartPosFieldNumber = 3;
  private uint startPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint StartPos {
    get { return startPos_; }
    set {
      startPos_ = value;
    }
  }

  /// <summary>Field number for the "limit_count" field.</summary>
  public const int LimitCountFieldNumber = 4;
  private uint limitCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint LimitCount {
    get { return limitCount_; }
    set {
      limitCount_ = value;
    }
  }

  /// <summary>Field number for the "desc" field.</summary>
  public const int DescFieldNumber = 5;
  private uint desc_;
  /// <summary>
  /// 0 正序 1 倒序
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Desc {
    get { return desc_; }
    set {
      desc_ = value;
    }
  }

  /// <summary>Field number for the "req_language_type" field.</summary>
  public const int ReqLanguageTypeFieldNumber = 6;
  private global::Project_Language_Type reqLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type ReqLanguageType {
    get { return reqLanguageType_; }
    set {
      reqLanguageType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Gameboardlist_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Gameboardlist_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SortType != other.SortType) return false;
    if (ShowScript != other.ShowScript) return false;
    if (StartPos != other.StartPos) return false;
    if (LimitCount != other.LimitCount) return false;
    if (Desc != other.Desc) return false;
    if (ReqLanguageType != other.ReqLanguageType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SortType != 0) hash ^= SortType.GetHashCode();
    if (ShowScript != 0) hash ^= ShowScript.GetHashCode();
    if (StartPos != 0) hash ^= StartPos.GetHashCode();
    if (LimitCount != 0) hash ^= LimitCount.GetHashCode();
    if (Desc != 0) hash ^= Desc.GetHashCode();
    if (ReqLanguageType != 0) hash ^= ReqLanguageType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SortType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SortType);
    }
    if (ShowScript != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ShowScript);
    }
    if (StartPos != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(StartPos);
    }
    if (LimitCount != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(LimitCount);
    }
    if (Desc != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(Desc);
    }
    if (ReqLanguageType != 0) {
      output.WriteRawTag(48);
      output.WriteEnum((int) ReqLanguageType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SortType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SortType);
    }
    if (ShowScript != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShowScript);
    }
    if (StartPos != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartPos);
    }
    if (LimitCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LimitCount);
    }
    if (Desc != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Desc);
    }
    if (ReqLanguageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqLanguageType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Gameboardlist_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SortType != 0) {
      SortType = other.SortType;
    }
    if (other.ShowScript != 0) {
      ShowScript = other.ShowScript;
    }
    if (other.StartPos != 0) {
      StartPos = other.StartPos;
    }
    if (other.LimitCount != 0) {
      LimitCount = other.LimitCount;
    }
    if (other.Desc != 0) {
      Desc = other.Desc;
    }
    if (other.ReqLanguageType != 0) {
      ReqLanguageType = other.ReqLanguageType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          sortType_ = (global::GBSort_Type) input.ReadEnum();
          break;
        }
        case 16: {
          ShowScript = input.ReadUInt32();
          break;
        }
        case 24: {
          StartPos = input.ReadUInt32();
          break;
        }
        case 32: {
          LimitCount = input.ReadUInt32();
          break;
        }
        case 40: {
          Desc = input.ReadUInt32();
          break;
        }
        case 48: {
          reqLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_gameboardlist_a    = 510;
/// </summary>
public sealed partial class CMD_Get_Gameboardlist_a_Parameters : pb::IMessage<CMD_Get_Gameboardlist_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Gameboardlist_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Gameboardlist_a_Parameters>(() => new CMD_Get_Gameboardlist_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Gameboardlist_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[134]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboardlist_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboardlist_a_Parameters(CMD_Get_Gameboardlist_a_Parameters other) : this() {
    gbList_ = other.gbList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Gameboardlist_a_Parameters Clone() {
    return new CMD_Get_Gameboardlist_a_Parameters(this);
  }

  /// <summary>Field number for the "gb_list" field.</summary>
  public const int GbListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GameBoard> _repeated_gbList_codec
      = pb::FieldCodec.ForMessage(10, global::GameBoard.Parser);
  private readonly pbc::RepeatedField<global::GameBoard> gbList_ = new pbc::RepeatedField<global::GameBoard>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GameBoard> GbList {
    get { return gbList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Gameboardlist_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Gameboardlist_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!gbList_.Equals(other.gbList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= gbList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    gbList_.WriteTo(output, _repeated_gbList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += gbList_.CalculateSize(_repeated_gbList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Gameboardlist_a_Parameters other) {
    if (other == null) {
      return;
    }
    gbList_.Add(other.gbList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          gbList_.AddEntriesFrom(input, _repeated_gbList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_answer_gameboard_r	   = 511;
/// </summary>
public sealed partial class CMD_Answer_Gameboard_r_Paramerers : pb::IMessage<CMD_Answer_Gameboard_r_Paramerers> {
  private static readonly pb::MessageParser<CMD_Answer_Gameboard_r_Paramerers> _parser = new pb::MessageParser<CMD_Answer_Gameboard_r_Paramerers>(() => new CMD_Answer_Gameboard_r_Paramerers());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Answer_Gameboard_r_Paramerers> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[135]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Gameboard_r_Paramerers() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Gameboard_r_Paramerers(CMD_Answer_Gameboard_r_Paramerers other) : this() {
    gbId_ = other.gbId_;
    GbAnswerInfo = other.gbAnswerInfo_ != null ? other.GbAnswerInfo.Clone() : null;
    GbFiles = other.gbFiles_ != null ? other.GbFiles.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Gameboard_r_Paramerers Clone() {
    return new CMD_Answer_Gameboard_r_Paramerers(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "gb_answer_info" field.</summary>
  public const int GbAnswerInfoFieldNumber = 7;
  private global::GBAnswer gbAnswerInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GBAnswer GbAnswerInfo {
    get { return gbAnswerInfo_; }
    set {
      gbAnswerInfo_ = value;
    }
  }

  /// <summary>Field number for the "gb_files" field.</summary>
  public const int GbFilesFieldNumber = 8;
  private global::FileList gbFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList GbFiles {
    get { return gbFiles_; }
    set {
      gbFiles_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Answer_Gameboard_r_Paramerers);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Answer_Gameboard_r_Paramerers other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (!object.Equals(GbAnswerInfo, other.GbAnswerInfo)) return false;
    if (!object.Equals(GbFiles, other.GbFiles)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (gbAnswerInfo_ != null) hash ^= GbAnswerInfo.GetHashCode();
    if (gbFiles_ != null) hash ^= GbFiles.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (gbAnswerInfo_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(GbAnswerInfo);
    }
    if (gbFiles_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(GbFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (gbAnswerInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbAnswerInfo);
    }
    if (gbFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbFiles);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Answer_Gameboard_r_Paramerers other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.gbAnswerInfo_ != null) {
      if (gbAnswerInfo_ == null) {
        gbAnswerInfo_ = new global::GBAnswer();
      }
      GbAnswerInfo.MergeFrom(other.GbAnswerInfo);
    }
    if (other.gbFiles_ != null) {
      if (gbFiles_ == null) {
        gbFiles_ = new global::FileList();
      }
      GbFiles.MergeFrom(other.GbFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 58: {
          if (gbAnswerInfo_ == null) {
            gbAnswerInfo_ = new global::GBAnswer();
          }
          input.ReadMessage(gbAnswerInfo_);
          break;
        }
        case 66: {
          if (gbFiles_ == null) {
            gbFiles_ = new global::FileList();
          }
          input.ReadMessage(gbFiles_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_answer_gameboard_a	   = 512;
/// </summary>
public sealed partial class CMD_Answer_Gameboard_a_Paramerers : pb::IMessage<CMD_Answer_Gameboard_a_Paramerers> {
  private static readonly pb::MessageParser<CMD_Answer_Gameboard_a_Paramerers> _parser = new pb::MessageParser<CMD_Answer_Gameboard_a_Paramerers>(() => new CMD_Answer_Gameboard_a_Paramerers());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Answer_Gameboard_a_Paramerers> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[136]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Gameboard_a_Paramerers() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Gameboard_a_Paramerers(CMD_Answer_Gameboard_a_Paramerers other) : this() {
    gbId_ = other.gbId_;
    GbAnswerInfo = other.gbAnswerInfo_ != null ? other.GbAnswerInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Gameboard_a_Paramerers Clone() {
    return new CMD_Answer_Gameboard_a_Paramerers(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "gb_answer_info" field.</summary>
  public const int GbAnswerInfoFieldNumber = 2;
  private global::GBAnswer gbAnswerInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GBAnswer GbAnswerInfo {
    get { return gbAnswerInfo_; }
    set {
      gbAnswerInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Answer_Gameboard_a_Paramerers);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Answer_Gameboard_a_Paramerers other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (!object.Equals(GbAnswerInfo, other.GbAnswerInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (gbAnswerInfo_ != null) hash ^= GbAnswerInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (gbAnswerInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GbAnswerInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (gbAnswerInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbAnswerInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Answer_Gameboard_a_Paramerers other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.gbAnswerInfo_ != null) {
      if (gbAnswerInfo_ == null) {
        gbAnswerInfo_ = new global::GBAnswer();
      }
      GbAnswerInfo.MergeFrom(other.GbAnswerInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (gbAnswerInfo_ == null) {
            gbAnswerInfo_ = new global::GBAnswer();
          }
          input.ReadMessage(gbAnswerInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_like_gameboard_r	   = 513;
/// </summary>
public sealed partial class CMD_Like_Gameboard_r_Parameters : pb::IMessage<CMD_Like_Gameboard_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Like_Gameboard_r_Parameters> _parser = new pb::MessageParser<CMD_Like_Gameboard_r_Parameters>(() => new CMD_Like_Gameboard_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Like_Gameboard_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[137]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_Gameboard_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_Gameboard_r_Parameters(CMD_Like_Gameboard_r_Parameters other) : this() {
    gbId_ = other.gbId_;
    gbLike_ = other.gbLike_;
    answerId_ = other.answerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_Gameboard_r_Parameters Clone() {
    return new CMD_Like_Gameboard_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "gb_like" field.</summary>
  public const int GbLikeFieldNumber = 2;
  private int gbLike_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GbLike {
    get { return gbLike_; }
    set {
      gbLike_ = value;
    }
  }

  /// <summary>Field number for the "answer_id" field.</summary>
  public const int AnswerIdFieldNumber = 3;
  private uint answerId_;
  /// <summary>
  /// 点赞回答
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerId {
    get { return answerId_; }
    set {
      answerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Like_Gameboard_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Like_Gameboard_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (GbLike != other.GbLike) return false;
    if (AnswerId != other.AnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (GbLike != 0) hash ^= GbLike.GetHashCode();
    if (AnswerId != 0) hash ^= AnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (GbLike != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GbLike);
    }
    if (AnswerId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(AnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (GbLike != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GbLike);
    }
    if (AnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Like_Gameboard_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.GbLike != 0) {
      GbLike = other.GbLike;
    }
    if (other.AnswerId != 0) {
      AnswerId = other.AnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 16: {
          GbLike = input.ReadInt32();
          break;
        }
        case 24: {
          AnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_like_gameboard_a	   = 514;
/// </summary>
public sealed partial class CMD_Like_Gameboard_a_Parameters : pb::IMessage<CMD_Like_Gameboard_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Like_Gameboard_a_Parameters> _parser = new pb::MessageParser<CMD_Like_Gameboard_a_Parameters>(() => new CMD_Like_Gameboard_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Like_Gameboard_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[138]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_Gameboard_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_Gameboard_a_Parameters(CMD_Like_Gameboard_a_Parameters other) : this() {
    gbId_ = other.gbId_;
    gbLike_ = other.gbLike_;
    answerId_ = other.answerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_Gameboard_a_Parameters Clone() {
    return new CMD_Like_Gameboard_a_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "gb_like" field.</summary>
  public const int GbLikeFieldNumber = 2;
  private int gbLike_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GbLike {
    get { return gbLike_; }
    set {
      gbLike_ = value;
    }
  }

  /// <summary>Field number for the "answer_id" field.</summary>
  public const int AnswerIdFieldNumber = 3;
  private uint answerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerId {
    get { return answerId_; }
    set {
      answerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Like_Gameboard_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Like_Gameboard_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (GbLike != other.GbLike) return false;
    if (AnswerId != other.AnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (GbLike != 0) hash ^= GbLike.GetHashCode();
    if (AnswerId != 0) hash ^= AnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (GbLike != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GbLike);
    }
    if (AnswerId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(AnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (GbLike != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GbLike);
    }
    if (AnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Like_Gameboard_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.GbLike != 0) {
      GbLike = other.GbLike;
    }
    if (other.AnswerId != 0) {
      AnswerId = other.AnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 16: {
          GbLike = input.ReadInt32();
          break;
        }
        case 24: {
          AnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_download_gameboard_r   = 515; //服务器内部命令
/// </summary>
public sealed partial class CMD_Download_Gameboard_r_Parameters : pb::IMessage<CMD_Download_Gameboard_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Download_Gameboard_r_Parameters> _parser = new pb::MessageParser<CMD_Download_Gameboard_r_Parameters>(() => new CMD_Download_Gameboard_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Download_Gameboard_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[139]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Gameboard_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Gameboard_r_Parameters(CMD_Download_Gameboard_r_Parameters other) : this() {
    gbPath_ = other.gbPath_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Gameboard_r_Parameters Clone() {
    return new CMD_Download_Gameboard_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_path" field.</summary>
  public const int GbPathFieldNumber = 1;
  private string gbPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbPath {
    get { return gbPath_; }
    set {
      gbPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Download_Gameboard_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Download_Gameboard_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbPath != other.GbPath) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbPath.Length != 0) hash ^= GbPath.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GbPath);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbPath);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Download_Gameboard_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbPath.Length != 0) {
      GbPath = other.GbPath;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          GbPath = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_download_gameboard_a   = 516;
/// </summary>
public sealed partial class CMD_Download_Gameboard_a_Parameters : pb::IMessage<CMD_Download_Gameboard_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Download_Gameboard_a_Parameters> _parser = new pb::MessageParser<CMD_Download_Gameboard_a_Parameters>(() => new CMD_Download_Gameboard_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Download_Gameboard_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[140]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Gameboard_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Gameboard_a_Parameters(CMD_Download_Gameboard_a_Parameters other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Gameboard_a_Parameters Clone() {
    return new CMD_Download_Gameboard_a_Parameters(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Download_Gameboard_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Download_Gameboard_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Download_Gameboard_a_Parameters other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// 	cmd_grade_gameboard_r	   = 517;
/// </summary>
public sealed partial class CMD_Grade_Gameboard_r_Parameters : pb::IMessage<CMD_Grade_Gameboard_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Grade_Gameboard_r_Parameters> _parser = new pb::MessageParser<CMD_Grade_Gameboard_r_Parameters>(() => new CMD_Grade_Gameboard_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Grade_Gameboard_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[141]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Gameboard_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Gameboard_r_Parameters(CMD_Grade_Gameboard_r_Parameters other) : this() {
    gbId_ = other.gbId_;
    answerId_ = other.answerId_;
    gbScore_ = other.gbScore_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Gameboard_r_Parameters Clone() {
    return new CMD_Grade_Gameboard_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "answer_id" field.</summary>
  public const int AnswerIdFieldNumber = 2;
  private uint answerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerId {
    get { return answerId_; }
    set {
      answerId_ = value;
    }
  }

  /// <summary>Field number for the "gb_score" field.</summary>
  public const int GbScoreFieldNumber = 3;
  private int gbScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GbScore {
    get { return gbScore_; }
    set {
      gbScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Grade_Gameboard_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Grade_Gameboard_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (AnswerId != other.AnswerId) return false;
    if (GbScore != other.GbScore) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (AnswerId != 0) hash ^= AnswerId.GetHashCode();
    if (GbScore != 0) hash ^= GbScore.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (AnswerId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(AnswerId);
    }
    if (GbScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(GbScore);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (AnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerId);
    }
    if (GbScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GbScore);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Grade_Gameboard_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.AnswerId != 0) {
      AnswerId = other.AnswerId;
    }
    if (other.GbScore != 0) {
      GbScore = other.GbScore;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 16: {
          AnswerId = input.ReadUInt32();
          break;
        }
        case 24: {
          GbScore = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_grade_gameboard_a	   = 518;
/// </summary>
public sealed partial class CMD_Grade_Gameboard_a_Parameters : pb::IMessage<CMD_Grade_Gameboard_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Grade_Gameboard_a_Parameters> _parser = new pb::MessageParser<CMD_Grade_Gameboard_a_Parameters>(() => new CMD_Grade_Gameboard_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Grade_Gameboard_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[142]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Gameboard_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Gameboard_a_Parameters(CMD_Grade_Gameboard_a_Parameters other) : this() {
    gbId_ = other.gbId_;
    answerId_ = other.answerId_;
    gbScore_ = other.gbScore_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Grade_Gameboard_a_Parameters Clone() {
    return new CMD_Grade_Gameboard_a_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "answer_id" field.</summary>
  public const int AnswerIdFieldNumber = 2;
  private uint answerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerId {
    get { return answerId_; }
    set {
      answerId_ = value;
    }
  }

  /// <summary>Field number for the "gb_score" field.</summary>
  public const int GbScoreFieldNumber = 3;
  private int gbScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GbScore {
    get { return gbScore_; }
    set {
      gbScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Grade_Gameboard_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Grade_Gameboard_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (AnswerId != other.AnswerId) return false;
    if (GbScore != other.GbScore) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (AnswerId != 0) hash ^= AnswerId.GetHashCode();
    if (GbScore != 0) hash ^= GbScore.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (AnswerId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(AnswerId);
    }
    if (GbScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(GbScore);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (AnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerId);
    }
    if (GbScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GbScore);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Grade_Gameboard_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.AnswerId != 0) {
      AnswerId = other.AnswerId;
    }
    if (other.GbScore != 0) {
      GbScore = other.GbScore;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 16: {
          AnswerId = input.ReadUInt32();
          break;
        }
        case 24: {
          GbScore = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_gameboard_answer_r = 519;
/// </summary>
public sealed partial class CMD_Del_Gameboard_Answer_r_Parameters : pb::IMessage<CMD_Del_Gameboard_Answer_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Gameboard_Answer_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Gameboard_Answer_r_Parameters>(() => new CMD_Del_Gameboard_Answer_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Gameboard_Answer_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[143]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_Answer_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_Answer_r_Parameters(CMD_Del_Gameboard_Answer_r_Parameters other) : this() {
    gbId_ = other.gbId_;
    answerId_ = other.answerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_Answer_r_Parameters Clone() {
    return new CMD_Del_Gameboard_Answer_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "answer_id" field.</summary>
  public const int AnswerIdFieldNumber = 2;
  private uint answerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerId {
    get { return answerId_; }
    set {
      answerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Gameboard_Answer_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Gameboard_Answer_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (AnswerId != other.AnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (AnswerId != 0) hash ^= AnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (AnswerId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(AnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (AnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Gameboard_Answer_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.AnswerId != 0) {
      AnswerId = other.AnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 16: {
          AnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_gameboard_answer_a = 520;
/// </summary>
public sealed partial class CMD_Del_Gameboard_Answer_a_Parameters : pb::IMessage<CMD_Del_Gameboard_Answer_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Gameboard_Answer_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Gameboard_Answer_a_Parameters>(() => new CMD_Del_Gameboard_Answer_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Gameboard_Answer_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[144]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_Answer_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_Answer_a_Parameters(CMD_Del_Gameboard_Answer_a_Parameters other) : this() {
    gbId_ = other.gbId_;
    answerId_ = other.answerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Gameboard_Answer_a_Parameters Clone() {
    return new CMD_Del_Gameboard_Answer_a_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "answer_id" field.</summary>
  public const int AnswerIdFieldNumber = 2;
  private uint answerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerId {
    get { return answerId_; }
    set {
      answerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Gameboard_Answer_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Gameboard_Answer_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (AnswerId != other.AnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (AnswerId != 0) hash ^= AnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (AnswerId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(AnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (AnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Gameboard_Answer_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.AnswerId != 0) {
      AnswerId = other.AnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 16: {
          AnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_user_setting_r	   = 105;
/// </summary>
public sealed partial class CMD_Get_User_Setting_r_Parameters : pb::IMessage<CMD_Get_User_Setting_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_User_Setting_r_Parameters> _parser = new pb::MessageParser<CMD_Get_User_Setting_r_Parameters>(() => new CMD_Get_User_Setting_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_User_Setting_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[145]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_User_Setting_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_User_Setting_r_Parameters(CMD_Get_User_Setting_r_Parameters other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_User_Setting_r_Parameters Clone() {
    return new CMD_Get_User_Setting_r_Parameters(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_User_Setting_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_User_Setting_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_User_Setting_r_Parameters other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// 	cmd_get_user_setting_a	   = 106;
/// </summary>
public sealed partial class CMD_Get_User_Setting_a_Parameters : pb::IMessage<CMD_Get_User_Setting_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_User_Setting_a_Parameters> _parser = new pb::MessageParser<CMD_Get_User_Setting_a_Parameters>(() => new CMD_Get_User_Setting_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_User_Setting_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[146]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_User_Setting_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_User_Setting_a_Parameters(CMD_Get_User_Setting_a_Parameters other) : this() {
    jsonString_ = other.jsonString_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_User_Setting_a_Parameters Clone() {
    return new CMD_Get_User_Setting_a_Parameters(this);
  }

  /// <summary>Field number for the "json_string" field.</summary>
  public const int JsonStringFieldNumber = 1;
  private string jsonString_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonString {
    get { return jsonString_; }
    set {
      jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_User_Setting_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_User_Setting_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (JsonString != other.JsonString) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (JsonString.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(JsonString);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (JsonString.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_User_Setting_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.JsonString.Length != 0) {
      JsonString = other.JsonString;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          JsonString = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_user_setting_r  = 107;
/// </summary>
public sealed partial class CMD_Update_User_Setting_r_Parameters : pb::IMessage<CMD_Update_User_Setting_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_User_Setting_r_Parameters> _parser = new pb::MessageParser<CMD_Update_User_Setting_r_Parameters>(() => new CMD_Update_User_Setting_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_User_Setting_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[147]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_User_Setting_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_User_Setting_r_Parameters(CMD_Update_User_Setting_r_Parameters other) : this() {
    jsonString_ = other.jsonString_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_User_Setting_r_Parameters Clone() {
    return new CMD_Update_User_Setting_r_Parameters(this);
  }

  /// <summary>Field number for the "json_string" field.</summary>
  public const int JsonStringFieldNumber = 1;
  private string jsonString_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonString {
    get { return jsonString_; }
    set {
      jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_User_Setting_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_User_Setting_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (JsonString != other.JsonString) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (JsonString.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(JsonString);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (JsonString.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_User_Setting_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.JsonString.Length != 0) {
      JsonString = other.JsonString;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          JsonString = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_user_setting_a  = 108;
/// </summary>
public sealed partial class CMD_Update_User_Setting_a_Parameters : pb::IMessage<CMD_Update_User_Setting_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_User_Setting_a_Parameters> _parser = new pb::MessageParser<CMD_Update_User_Setting_a_Parameters>(() => new CMD_Update_User_Setting_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_User_Setting_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[148]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_User_Setting_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_User_Setting_a_Parameters(CMD_Update_User_Setting_a_Parameters other) : this() {
    jsonString_ = other.jsonString_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_User_Setting_a_Parameters Clone() {
    return new CMD_Update_User_Setting_a_Parameters(this);
  }

  /// <summary>Field number for the "json_string" field.</summary>
  public const int JsonStringFieldNumber = 1;
  private string jsonString_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonString {
    get { return jsonString_; }
    set {
      jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_User_Setting_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_User_Setting_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (JsonString != other.JsonString) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (JsonString.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(JsonString);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (JsonString.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_User_Setting_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.JsonString.Length != 0) {
      JsonString = other.JsonString;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          JsonString = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Rank_Unit : pb::IMessage<Rank_Unit> {
  private static readonly pb::MessageParser<Rank_Unit> _parser = new pb::MessageParser<Rank_Unit>(() => new Rank_Unit());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Rank_Unit> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[149]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rank_Unit() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rank_Unit(Rank_Unit other) : this() {
    UserDisplayInfo = other.userDisplayInfo_ != null ? other.UserDisplayInfo.Clone() : null;
    rankId_ = other.rankId_;
    rankScore_ = other.rankScore_;
    rankSampleCount_ = other.rankSampleCount_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rank_Unit Clone() {
    return new Rank_Unit(this);
  }

  /// <summary>Field number for the "user_display_info" field.</summary>
  public const int UserDisplayInfoFieldNumber = 1;
  private global::A8_User_Display_Info userDisplayInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_User_Display_Info UserDisplayInfo {
    get { return userDisplayInfo_; }
    set {
      userDisplayInfo_ = value;
    }
  }

  /// <summary>Field number for the "rank_id" field.</summary>
  public const int RankIdFieldNumber = 2;
  private uint rankId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint RankId {
    get { return rankId_; }
    set {
      rankId_ = value;
    }
  }

  /// <summary>Field number for the "rank_score" field.</summary>
  public const int RankScoreFieldNumber = 3;
  private int rankScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RankScore {
    get { return rankScore_; }
    set {
      rankScore_ = value;
    }
  }

  /// <summary>Field number for the "rank_sample_count" field.</summary>
  public const int RankSampleCountFieldNumber = 4;
  private uint rankSampleCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint RankSampleCount {
    get { return rankSampleCount_; }
    set {
      rankSampleCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Rank_Unit);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Rank_Unit other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(UserDisplayInfo, other.UserDisplayInfo)) return false;
    if (RankId != other.RankId) return false;
    if (RankScore != other.RankScore) return false;
    if (RankSampleCount != other.RankSampleCount) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (userDisplayInfo_ != null) hash ^= UserDisplayInfo.GetHashCode();
    if (RankId != 0) hash ^= RankId.GetHashCode();
    if (RankScore != 0) hash ^= RankScore.GetHashCode();
    if (RankSampleCount != 0) hash ^= RankSampleCount.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (userDisplayInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(UserDisplayInfo);
    }
    if (RankId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(RankId);
    }
    if (RankScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RankScore);
    }
    if (RankSampleCount != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(RankSampleCount);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (userDisplayInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserDisplayInfo);
    }
    if (RankId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankId);
    }
    if (RankScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankScore);
    }
    if (RankSampleCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankSampleCount);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Rank_Unit other) {
    if (other == null) {
      return;
    }
    if (other.userDisplayInfo_ != null) {
      if (userDisplayInfo_ == null) {
        userDisplayInfo_ = new global::A8_User_Display_Info();
      }
      UserDisplayInfo.MergeFrom(other.UserDisplayInfo);
    }
    if (other.RankId != 0) {
      RankId = other.RankId;
    }
    if (other.RankScore != 0) {
      RankScore = other.RankScore;
    }
    if (other.RankSampleCount != 0) {
      RankSampleCount = other.RankSampleCount;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (userDisplayInfo_ == null) {
            userDisplayInfo_ = new global::A8_User_Display_Info();
          }
          input.ReadMessage(userDisplayInfo_);
          break;
        }
        case 16: {
          RankId = input.ReadUInt32();
          break;
        }
        case 24: {
          RankScore = input.ReadInt32();
          break;
        }
        case 32: {
          RankSampleCount = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_ranklist_r		   = 109;
/// </summary>
public sealed partial class CMD_Get_Ranklist_r_Parameters : pb::IMessage<CMD_Get_Ranklist_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Ranklist_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Ranklist_r_Parameters>(() => new CMD_Get_Ranklist_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Ranklist_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[150]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Ranklist_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Ranklist_r_Parameters(CMD_Get_Ranklist_r_Parameters other) : this() {
    gbId_ = other.gbId_;
    pkId_ = other.pkId_;
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Ranklist_r_Parameters Clone() {
    return new CMD_Get_Ranklist_r_Parameters(this);
  }

  /// <summary>Field number for the "gb_id" field.</summary>
  public const int GbIdFieldNumber = 1;
  private uint gbId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbId {
    get { return gbId_; }
    set {
      gbId_ = value;
    }
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 2;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 3;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 4;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Ranklist_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Ranklist_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbId != other.GbId) return false;
    if (PkId != other.PkId) return false;
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbId != 0) hash ^= GbId.GetHashCode();
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbId);
    }
    if (PkId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PkId);
    }
    if (CourseId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(PeriodId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbId);
    }
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Ranklist_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.GbId != 0) {
      GbId = other.GbId;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbId = input.ReadUInt32();
          break;
        }
        case 16: {
          PkId = input.ReadUInt32();
          break;
        }
        case 24: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 32: {
          PeriodId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_ranklist_a		   = 110;
/// </summary>
public sealed partial class CMD_Get_Ranklist_a_Parameters : pb::IMessage<CMD_Get_Ranklist_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Ranklist_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Ranklist_a_Parameters>(() => new CMD_Get_Ranklist_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Ranklist_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[151]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Ranklist_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Ranklist_a_Parameters(CMD_Get_Ranklist_a_Parameters other) : this() {
    ReqInfo = other.reqInfo_ != null ? other.ReqInfo.Clone() : null;
    rankList_ = other.rankList_.Clone();
    SelfInfo = other.selfInfo_ != null ? other.SelfInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Ranklist_a_Parameters Clone() {
    return new CMD_Get_Ranklist_a_Parameters(this);
  }

  /// <summary>Field number for the "req_info" field.</summary>
  public const int ReqInfoFieldNumber = 1;
  private global::CMD_Get_Ranklist_r_Parameters reqInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CMD_Get_Ranklist_r_Parameters ReqInfo {
    get { return reqInfo_; }
    set {
      reqInfo_ = value;
    }
  }

  /// <summary>Field number for the "rank_list" field.</summary>
  public const int RankListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Rank_Unit> _repeated_rankList_codec
      = pb::FieldCodec.ForMessage(18, global::Rank_Unit.Parser);
  private readonly pbc::RepeatedField<global::Rank_Unit> rankList_ = new pbc::RepeatedField<global::Rank_Unit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Rank_Unit> RankList {
    get { return rankList_; }
  }

  /// <summary>Field number for the "self_info" field.</summary>
  public const int SelfInfoFieldNumber = 3;
  private global::Rank_Unit selfInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Rank_Unit SelfInfo {
    get { return selfInfo_; }
    set {
      selfInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Ranklist_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Ranklist_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ReqInfo, other.ReqInfo)) return false;
    if(!rankList_.Equals(other.rankList_)) return false;
    if (!object.Equals(SelfInfo, other.SelfInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (reqInfo_ != null) hash ^= ReqInfo.GetHashCode();
    hash ^= rankList_.GetHashCode();
    if (selfInfo_ != null) hash ^= SelfInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (reqInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ReqInfo);
    }
    rankList_.WriteTo(output, _repeated_rankList_codec);
    if (selfInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SelfInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (reqInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqInfo);
    }
    size += rankList_.CalculateSize(_repeated_rankList_codec);
    if (selfInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Ranklist_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.reqInfo_ != null) {
      if (reqInfo_ == null) {
        reqInfo_ = new global::CMD_Get_Ranklist_r_Parameters();
      }
      ReqInfo.MergeFrom(other.ReqInfo);
    }
    rankList_.Add(other.rankList_);
    if (other.selfInfo_ != null) {
      if (selfInfo_ == null) {
        selfInfo_ = new global::Rank_Unit();
      }
      SelfInfo.MergeFrom(other.SelfInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (reqInfo_ == null) {
            reqInfo_ = new global::CMD_Get_Ranklist_r_Parameters();
          }
          input.ReadMessage(reqInfo_);
          break;
        }
        case 18: {
          rankList_.AddEntriesFrom(input, _repeated_rankList_codec);
          break;
        }
        case 26: {
          if (selfInfo_ == null) {
            selfInfo_ = new global::Rank_Unit();
          }
          input.ReadMessage(selfInfo_);
          break;
        }
      }
    }
  }

}

public sealed partial class PK_Result : pb::IMessage<PK_Result> {
  private static readonly pb::MessageParser<PK_Result> _parser = new pb::MessageParser<PK_Result>(() => new PK_Result());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PK_Result> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[152]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK_Result() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK_Result(PK_Result other) : this() {
    chanllengerAnswerId_ = other.chanllengerAnswerId_;
    chanllengerScore_ = other.chanllengerScore_;
    accepterId_ = other.accepterId_;
    accepterScore_ = other.accepterScore_;
    pkTime_ = other.pkTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK_Result Clone() {
    return new PK_Result(this);
  }

  /// <summary>Field number for the "chanllenger_answer_id" field.</summary>
  public const int ChanllengerAnswerIdFieldNumber = 1;
  private uint chanllengerAnswerId_;
  /// <summary>
  /// 挑战者的回答id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ChanllengerAnswerId {
    get { return chanllengerAnswerId_; }
    set {
      chanllengerAnswerId_ = value;
    }
  }

  /// <summary>Field number for the "chanllenger_score" field.</summary>
  public const int ChanllengerScoreFieldNumber = 2;
  private int chanllengerScore_;
  /// <summary>
  /// 挑战者得分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChanllengerScore {
    get { return chanllengerScore_; }
    set {
      chanllengerScore_ = value;
    }
  }

  /// <summary>Field number for the "accepter_id" field.</summary>
  public const int AccepterIdFieldNumber = 3;
  private uint accepterId_;
  /// <summary>
  /// 应战者的回答id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AccepterId {
    get { return accepterId_; }
    set {
      accepterId_ = value;
    }
  }

  /// <summary>Field number for the "accepter_score" field.</summary>
  public const int AccepterScoreFieldNumber = 4;
  private int accepterScore_;
  /// <summary>
  /// 应战者得分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AccepterScore {
    get { return accepterScore_; }
    set {
      accepterScore_ = value;
    }
  }

  /// <summary>Field number for the "pk_time" field.</summary>
  public const int PkTimeFieldNumber = 5;
  private ulong pkTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong PkTime {
    get { return pkTime_; }
    set {
      pkTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PK_Result);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PK_Result other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChanllengerAnswerId != other.ChanllengerAnswerId) return false;
    if (ChanllengerScore != other.ChanllengerScore) return false;
    if (AccepterId != other.AccepterId) return false;
    if (AccepterScore != other.AccepterScore) return false;
    if (PkTime != other.PkTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChanllengerAnswerId != 0) hash ^= ChanllengerAnswerId.GetHashCode();
    if (ChanllengerScore != 0) hash ^= ChanllengerScore.GetHashCode();
    if (AccepterId != 0) hash ^= AccepterId.GetHashCode();
    if (AccepterScore != 0) hash ^= AccepterScore.GetHashCode();
    if (PkTime != 0UL) hash ^= PkTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ChanllengerAnswerId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ChanllengerAnswerId);
    }
    if (ChanllengerScore != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChanllengerScore);
    }
    if (AccepterId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(AccepterId);
    }
    if (AccepterScore != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(AccepterScore);
    }
    if (PkTime != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(PkTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChanllengerAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChanllengerAnswerId);
    }
    if (ChanllengerScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChanllengerScore);
    }
    if (AccepterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccepterId);
    }
    if (AccepterScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccepterScore);
    }
    if (PkTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PkTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PK_Result other) {
    if (other == null) {
      return;
    }
    if (other.ChanllengerAnswerId != 0) {
      ChanllengerAnswerId = other.ChanllengerAnswerId;
    }
    if (other.ChanllengerScore != 0) {
      ChanllengerScore = other.ChanllengerScore;
    }
    if (other.AccepterId != 0) {
      AccepterId = other.AccepterId;
    }
    if (other.AccepterScore != 0) {
      AccepterScore = other.AccepterScore;
    }
    if (other.PkTime != 0UL) {
      PkTime = other.PkTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ChanllengerAnswerId = input.ReadUInt32();
          break;
        }
        case 16: {
          ChanllengerScore = input.ReadInt32();
          break;
        }
        case 24: {
          AccepterId = input.ReadUInt32();
          break;
        }
        case 32: {
          AccepterScore = input.ReadInt32();
          break;
        }
        case 40: {
          PkTime = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class PKLike_Info : pb::IMessage<PKLike_Info> {
  private static readonly pb::MessageParser<PKLike_Info> _parser = new pb::MessageParser<PKLike_Info>(() => new PKLike_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PKLike_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[153]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PKLike_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PKLike_Info(PKLike_Info other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PKLike_Info Clone() {
    return new PKLike_Info(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PKLike_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PKLike_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PKLike_Info other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class PKAnswer : pb::IMessage<PKAnswer> {
  private static readonly pb::MessageParser<PKAnswer> _parser = new pb::MessageParser<PKAnswer>(() => new PKAnswer());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PKAnswer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[154]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PKAnswer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PKAnswer(PKAnswer other) : this() {
    pkScriptShow_ = other.pkScriptShow_;
    downloadCount_ = other.downloadCount_;
    projPath_ = other.projPath_;
    answerTime_ = other.answerTime_;
    answerName_ = other.answerName_;
    pkLikeList_ = other.pkLikeList_.Clone();
    answerId_ = other.answerId_;
    pkResultList_ = other.pkResultList_.Clone();
    pkWinCount_ = other.pkWinCount_;
    pkLostCount_ = other.pkLostCount_;
    pkDrawCount_ = other.pkDrawCount_;
    answerUserId_ = other.answerUserId_;
    answerNickname_ = other.answerNickname_;
    answerProjectType_ = other.answerProjectType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PKAnswer Clone() {
    return new PKAnswer(this);
  }

  /// <summary>Field number for the "pk_script_show" field.</summary>
  public const int PkScriptShowFieldNumber = 1;
  private uint pkScriptShow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkScriptShow {
    get { return pkScriptShow_; }
    set {
      pkScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "download_count" field.</summary>
  public const int DownloadCountFieldNumber = 2;
  private uint downloadCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DownloadCount {
    get { return downloadCount_; }
    set {
      downloadCount_ = value;
    }
  }

  /// <summary>Field number for the "proj_path" field.</summary>
  public const int ProjPathFieldNumber = 3;
  private string projPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjPath {
    get { return projPath_; }
    set {
      projPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "answer_time" field.</summary>
  public const int AnswerTimeFieldNumber = 4;
  private ulong answerTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong AnswerTime {
    get { return answerTime_; }
    set {
      answerTime_ = value;
    }
  }

  /// <summary>Field number for the "answer_name" field.</summary>
  public const int AnswerNameFieldNumber = 5;
  private string answerName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AnswerName {
    get { return answerName_; }
    set {
      answerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_like_list" field.</summary>
  public const int PkLikeListFieldNumber = 6;
  private static readonly pbc::MapField<uint, global::PKLike_Info>.Codec _map_pkLikeList_codec
      = new pbc::MapField<uint, global::PKLike_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::PKLike_Info.Parser), 50);
  private readonly pbc::MapField<uint, global::PKLike_Info> pkLikeList_ = new pbc::MapField<uint, global::PKLike_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::PKLike_Info> PkLikeList {
    get { return pkLikeList_; }
  }

  /// <summary>Field number for the "answer_id" field.</summary>
  public const int AnswerIdFieldNumber = 7;
  private uint answerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerId {
    get { return answerId_; }
    set {
      answerId_ = value;
    }
  }

  /// <summary>Field number for the "pk_result_list" field.</summary>
  public const int PkResultListFieldNumber = 8;
  private static readonly pb::FieldCodec<global::PK_Result> _repeated_pkResultList_codec
      = pb::FieldCodec.ForMessage(66, global::PK_Result.Parser);
  private readonly pbc::RepeatedField<global::PK_Result> pkResultList_ = new pbc::RepeatedField<global::PK_Result>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PK_Result> PkResultList {
    get { return pkResultList_; }
  }

  /// <summary>Field number for the "pk_win_count" field.</summary>
  public const int PkWinCountFieldNumber = 9;
  private uint pkWinCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkWinCount {
    get { return pkWinCount_; }
    set {
      pkWinCount_ = value;
    }
  }

  /// <summary>Field number for the "pk_lost_count" field.</summary>
  public const int PkLostCountFieldNumber = 10;
  private uint pkLostCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkLostCount {
    get { return pkLostCount_; }
    set {
      pkLostCount_ = value;
    }
  }

  /// <summary>Field number for the "pk_draw_count" field.</summary>
  public const int PkDrawCountFieldNumber = 11;
  private uint pkDrawCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkDrawCount {
    get { return pkDrawCount_; }
    set {
      pkDrawCount_ = value;
    }
  }

  /// <summary>Field number for the "answer_user_id" field.</summary>
  public const int AnswerUserIdFieldNumber = 12;
  private uint answerUserId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerUserId {
    get { return answerUserId_; }
    set {
      answerUserId_ = value;
    }
  }

  /// <summary>Field number for the "answer_nickname" field.</summary>
  public const int AnswerNicknameFieldNumber = 13;
  private string answerNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AnswerNickname {
    get { return answerNickname_; }
    set {
      answerNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "answer_project_type" field.</summary>
  public const int AnswerProjectTypeFieldNumber = 14;
  private uint answerProjectType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerProjectType {
    get { return answerProjectType_; }
    set {
      answerProjectType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PKAnswer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PKAnswer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkScriptShow != other.PkScriptShow) return false;
    if (DownloadCount != other.DownloadCount) return false;
    if (ProjPath != other.ProjPath) return false;
    if (AnswerTime != other.AnswerTime) return false;
    if (AnswerName != other.AnswerName) return false;
    if (!PkLikeList.Equals(other.PkLikeList)) return false;
    if (AnswerId != other.AnswerId) return false;
    if(!pkResultList_.Equals(other.pkResultList_)) return false;
    if (PkWinCount != other.PkWinCount) return false;
    if (PkLostCount != other.PkLostCount) return false;
    if (PkDrawCount != other.PkDrawCount) return false;
    if (AnswerUserId != other.AnswerUserId) return false;
    if (AnswerNickname != other.AnswerNickname) return false;
    if (AnswerProjectType != other.AnswerProjectType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkScriptShow != 0) hash ^= PkScriptShow.GetHashCode();
    if (DownloadCount != 0) hash ^= DownloadCount.GetHashCode();
    if (ProjPath.Length != 0) hash ^= ProjPath.GetHashCode();
    if (AnswerTime != 0UL) hash ^= AnswerTime.GetHashCode();
    if (AnswerName.Length != 0) hash ^= AnswerName.GetHashCode();
    hash ^= PkLikeList.GetHashCode();
    if (AnswerId != 0) hash ^= AnswerId.GetHashCode();
    hash ^= pkResultList_.GetHashCode();
    if (PkWinCount != 0) hash ^= PkWinCount.GetHashCode();
    if (PkLostCount != 0) hash ^= PkLostCount.GetHashCode();
    if (PkDrawCount != 0) hash ^= PkDrawCount.GetHashCode();
    if (AnswerUserId != 0) hash ^= AnswerUserId.GetHashCode();
    if (AnswerNickname.Length != 0) hash ^= AnswerNickname.GetHashCode();
    if (AnswerProjectType != 0) hash ^= AnswerProjectType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkScriptShow != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkScriptShow);
    }
    if (DownloadCount != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(DownloadCount);
    }
    if (ProjPath.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ProjPath);
    }
    if (AnswerTime != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(AnswerTime);
    }
    if (AnswerName.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(AnswerName);
    }
    pkLikeList_.WriteTo(output, _map_pkLikeList_codec);
    if (AnswerId != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(AnswerId);
    }
    pkResultList_.WriteTo(output, _repeated_pkResultList_codec);
    if (PkWinCount != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(PkWinCount);
    }
    if (PkLostCount != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(PkLostCount);
    }
    if (PkDrawCount != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(PkDrawCount);
    }
    if (AnswerUserId != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(AnswerUserId);
    }
    if (AnswerNickname.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(AnswerNickname);
    }
    if (AnswerProjectType != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(AnswerProjectType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkScriptShow);
    }
    if (DownloadCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DownloadCount);
    }
    if (ProjPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjPath);
    }
    if (AnswerTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AnswerTime);
    }
    if (AnswerName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AnswerName);
    }
    size += pkLikeList_.CalculateSize(_map_pkLikeList_codec);
    if (AnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerId);
    }
    size += pkResultList_.CalculateSize(_repeated_pkResultList_codec);
    if (PkWinCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkWinCount);
    }
    if (PkLostCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkLostCount);
    }
    if (PkDrawCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkDrawCount);
    }
    if (AnswerUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerUserId);
    }
    if (AnswerNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AnswerNickname);
    }
    if (AnswerProjectType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerProjectType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PKAnswer other) {
    if (other == null) {
      return;
    }
    if (other.PkScriptShow != 0) {
      PkScriptShow = other.PkScriptShow;
    }
    if (other.DownloadCount != 0) {
      DownloadCount = other.DownloadCount;
    }
    if (other.ProjPath.Length != 0) {
      ProjPath = other.ProjPath;
    }
    if (other.AnswerTime != 0UL) {
      AnswerTime = other.AnswerTime;
    }
    if (other.AnswerName.Length != 0) {
      AnswerName = other.AnswerName;
    }
    pkLikeList_.Add(other.pkLikeList_);
    if (other.AnswerId != 0) {
      AnswerId = other.AnswerId;
    }
    pkResultList_.Add(other.pkResultList_);
    if (other.PkWinCount != 0) {
      PkWinCount = other.PkWinCount;
    }
    if (other.PkLostCount != 0) {
      PkLostCount = other.PkLostCount;
    }
    if (other.PkDrawCount != 0) {
      PkDrawCount = other.PkDrawCount;
    }
    if (other.AnswerUserId != 0) {
      AnswerUserId = other.AnswerUserId;
    }
    if (other.AnswerNickname.Length != 0) {
      AnswerNickname = other.AnswerNickname;
    }
    if (other.AnswerProjectType != 0) {
      AnswerProjectType = other.AnswerProjectType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkScriptShow = input.ReadUInt32();
          break;
        }
        case 16: {
          DownloadCount = input.ReadUInt32();
          break;
        }
        case 26: {
          ProjPath = input.ReadString();
          break;
        }
        case 32: {
          AnswerTime = input.ReadUInt64();
          break;
        }
        case 42: {
          AnswerName = input.ReadString();
          break;
        }
        case 50: {
          pkLikeList_.AddEntriesFrom(input, _map_pkLikeList_codec);
          break;
        }
        case 56: {
          AnswerId = input.ReadUInt32();
          break;
        }
        case 66: {
          pkResultList_.AddEntriesFrom(input, _repeated_pkResultList_codec);
          break;
        }
        case 72: {
          PkWinCount = input.ReadUInt32();
          break;
        }
        case 80: {
          PkLostCount = input.ReadUInt32();
          break;
        }
        case 88: {
          PkDrawCount = input.ReadUInt32();
          break;
        }
        case 96: {
          AnswerUserId = input.ReadUInt32();
          break;
        }
        case 106: {
          AnswerNickname = input.ReadString();
          break;
        }
        case 112: {
          AnswerProjectType = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PK_Attach_Info : pb::IMessage<PK_Attach_Info> {
  private static readonly pb::MessageParser<PK_Attach_Info> _parser = new pb::MessageParser<PK_Attach_Info>(() => new PK_Attach_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PK_Attach_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[155]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK_Attach_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK_Attach_Info(PK_Attach_Info other) : this() {
    attachUrlImage_ = other.attachUrlImage_.Clone();
    attachUrlVideo_ = other.attachUrlVideo_.Clone();
    attachUrlCourse_ = other.attachUrlCourse_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK_Attach_Info Clone() {
    return new PK_Attach_Info(this);
  }

  /// <summary>Field number for the "attach_url_image" field.</summary>
  public const int AttachUrlImageFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_attachUrlImage_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> attachUrlImage_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> AttachUrlImage {
    get { return attachUrlImage_; }
  }

  /// <summary>Field number for the "attach_url_video" field.</summary>
  public const int AttachUrlVideoFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_attachUrlVideo_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> attachUrlVideo_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> AttachUrlVideo {
    get { return attachUrlVideo_; }
  }

  /// <summary>Field number for the "attach_url_course" field.</summary>
  public const int AttachUrlCourseFieldNumber = 3;
  private static readonly pb::FieldCodec<string> _repeated_attachUrlCourse_codec
      = pb::FieldCodec.ForString(26);
  private readonly pbc::RepeatedField<string> attachUrlCourse_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> AttachUrlCourse {
    get { return attachUrlCourse_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PK_Attach_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PK_Attach_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!attachUrlImage_.Equals(other.attachUrlImage_)) return false;
    if(!attachUrlVideo_.Equals(other.attachUrlVideo_)) return false;
    if(!attachUrlCourse_.Equals(other.attachUrlCourse_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= attachUrlImage_.GetHashCode();
    hash ^= attachUrlVideo_.GetHashCode();
    hash ^= attachUrlCourse_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    attachUrlImage_.WriteTo(output, _repeated_attachUrlImage_codec);
    attachUrlVideo_.WriteTo(output, _repeated_attachUrlVideo_codec);
    attachUrlCourse_.WriteTo(output, _repeated_attachUrlCourse_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += attachUrlImage_.CalculateSize(_repeated_attachUrlImage_codec);
    size += attachUrlVideo_.CalculateSize(_repeated_attachUrlVideo_codec);
    size += attachUrlCourse_.CalculateSize(_repeated_attachUrlCourse_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PK_Attach_Info other) {
    if (other == null) {
      return;
    }
    attachUrlImage_.Add(other.attachUrlImage_);
    attachUrlVideo_.Add(other.attachUrlVideo_);
    attachUrlCourse_.Add(other.attachUrlCourse_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          attachUrlImage_.AddEntriesFrom(input, _repeated_attachUrlImage_codec);
          break;
        }
        case 18: {
          attachUrlVideo_.AddEntriesFrom(input, _repeated_attachUrlVideo_codec);
          break;
        }
        case 26: {
          attachUrlCourse_.AddEntriesFrom(input, _repeated_attachUrlCourse_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class PK : pb::IMessage<PK> {
  private static readonly pb::MessageParser<PK> _parser = new pb::MessageParser<PK>(() => new PK());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PK> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[156]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK(PK other) : this() {
    pkId_ = other.pkId_;
    pkName_ = other.pkName_;
    pkDescription_ = other.pkDescription_;
    pkScriptShow_ = other.pkScriptShow_;
    pkDownloadCount_ = other.pkDownloadCount_;
    pkCreateId_ = other.pkCreateId_;
    pkCreateTime_ = other.pkCreateTime_;
    pkSenceId_ = other.pkSenceId_;
    pkLikeList_ = other.pkLikeList_.Clone();
    pkAnswerList_ = other.pkAnswerList_.Clone();
    projPath_ = other.projPath_;
    pkParameters_ = other.pkParameters_;
    pkAllowRepeatAnswer_ = other.pkAllowRepeatAnswer_;
    PkAttachInfo = other.pkAttachInfo_ != null ? other.PkAttachInfo.Clone() : null;
    pkCreaterNickname_ = other.pkCreaterNickname_;
    pkMaxAnswer_ = other.pkMaxAnswer_;
    pkProjectLanguageType_ = other.pkProjectLanguageType_;
    pkUpdateTime_ = other.pkUpdateTime_;
    PkAttachInfoNew = other.pkAttachInfoNew_ != null ? other.PkAttachInfoNew.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PK Clone() {
    return new PK(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_name" field.</summary>
  public const int PkNameFieldNumber = 2;
  private string pkName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PkName {
    get { return pkName_; }
    set {
      pkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_description" field.</summary>
  public const int PkDescriptionFieldNumber = 3;
  private string pkDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PkDescription {
    get { return pkDescription_; }
    set {
      pkDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_script_show" field.</summary>
  public const int PkScriptShowFieldNumber = 4;
  private uint pkScriptShow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkScriptShow {
    get { return pkScriptShow_; }
    set {
      pkScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "pk_download_count" field.</summary>
  public const int PkDownloadCountFieldNumber = 5;
  private uint pkDownloadCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkDownloadCount {
    get { return pkDownloadCount_; }
    set {
      pkDownloadCount_ = value;
    }
  }

  /// <summary>Field number for the "pk_create_id" field.</summary>
  public const int PkCreateIdFieldNumber = 6;
  private uint pkCreateId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkCreateId {
    get { return pkCreateId_; }
    set {
      pkCreateId_ = value;
    }
  }

  /// <summary>Field number for the "pk_create_time" field.</summary>
  public const int PkCreateTimeFieldNumber = 7;
  private ulong pkCreateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong PkCreateTime {
    get { return pkCreateTime_; }
    set {
      pkCreateTime_ = value;
    }
  }

  /// <summary>Field number for the "pk_sence_id" field.</summary>
  public const int PkSenceIdFieldNumber = 8;
  private uint pkSenceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkSenceId {
    get { return pkSenceId_; }
    set {
      pkSenceId_ = value;
    }
  }

  /// <summary>Field number for the "pk_like_list" field.</summary>
  public const int PkLikeListFieldNumber = 9;
  private static readonly pbc::MapField<uint, global::PKLike_Info>.Codec _map_pkLikeList_codec
      = new pbc::MapField<uint, global::PKLike_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::PKLike_Info.Parser), 74);
  private readonly pbc::MapField<uint, global::PKLike_Info> pkLikeList_ = new pbc::MapField<uint, global::PKLike_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::PKLike_Info> PkLikeList {
    get { return pkLikeList_; }
  }

  /// <summary>Field number for the "pk_answer_list" field.</summary>
  public const int PkAnswerListFieldNumber = 10;
  private static readonly pbc::MapField<uint, global::PKAnswer>.Codec _map_pkAnswerList_codec
      = new pbc::MapField<uint, global::PKAnswer>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::PKAnswer.Parser), 82);
  private readonly pbc::MapField<uint, global::PKAnswer> pkAnswerList_ = new pbc::MapField<uint, global::PKAnswer>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::PKAnswer> PkAnswerList {
    get { return pkAnswerList_; }
  }

  /// <summary>Field number for the "proj_path" field.</summary>
  public const int ProjPathFieldNumber = 11;
  private string projPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjPath {
    get { return projPath_; }
    set {
      projPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_parameters" field.</summary>
  public const int PkParametersFieldNumber = 12;
  private string pkParameters_ = "";
  /// <summary>
  /// json string
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PkParameters {
    get { return pkParameters_; }
    set {
      pkParameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_allow_repeat_answer" field.</summary>
  public const int PkAllowRepeatAnswerFieldNumber = 13;
  private uint pkAllowRepeatAnswer_;
  /// <summary>
  /// 0 允许 1-不允许
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkAllowRepeatAnswer {
    get { return pkAllowRepeatAnswer_; }
    set {
      pkAllowRepeatAnswer_ = value;
    }
  }

  /// <summary>Field number for the "pk_attach_info" field.</summary>
  public const int PkAttachInfoFieldNumber = 14;
  private global::PK_Attach_Info pkAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PK_Attach_Info PkAttachInfo {
    get { return pkAttachInfo_; }
    set {
      pkAttachInfo_ = value;
    }
  }

  /// <summary>Field number for the "pk_creater_nickname" field.</summary>
  public const int PkCreaterNicknameFieldNumber = 15;
  private string pkCreaterNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PkCreaterNickname {
    get { return pkCreaterNickname_; }
    set {
      pkCreaterNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_max_answer" field.</summary>
  public const int PkMaxAnswerFieldNumber = 16;
  private uint pkMaxAnswer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkMaxAnswer {
    get { return pkMaxAnswer_; }
    set {
      pkMaxAnswer_ = value;
    }
  }

  /// <summary>Field number for the "pk_project_language_type" field.</summary>
  public const int PkProjectLanguageTypeFieldNumber = 17;
  private global::Project_Language_Type pkProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type PkProjectLanguageType {
    get { return pkProjectLanguageType_; }
    set {
      pkProjectLanguageType_ = value;
    }
  }

  /// <summary>Field number for the "pk_update_time" field.</summary>
  public const int PkUpdateTimeFieldNumber = 18;
  private ulong pkUpdateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong PkUpdateTime {
    get { return pkUpdateTime_; }
    set {
      pkUpdateTime_ = value;
    }
  }

  /// <summary>Field number for the "pk_attach_info_new" field.</summary>
  public const int PkAttachInfoNewFieldNumber = 19;
  private global::K8_Attach_Info pkAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info PkAttachInfoNew {
    get { return pkAttachInfoNew_; }
    set {
      pkAttachInfoNew_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PK);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PK other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (PkName != other.PkName) return false;
    if (PkDescription != other.PkDescription) return false;
    if (PkScriptShow != other.PkScriptShow) return false;
    if (PkDownloadCount != other.PkDownloadCount) return false;
    if (PkCreateId != other.PkCreateId) return false;
    if (PkCreateTime != other.PkCreateTime) return false;
    if (PkSenceId != other.PkSenceId) return false;
    if (!PkLikeList.Equals(other.PkLikeList)) return false;
    if (!PkAnswerList.Equals(other.PkAnswerList)) return false;
    if (ProjPath != other.ProjPath) return false;
    if (PkParameters != other.PkParameters) return false;
    if (PkAllowRepeatAnswer != other.PkAllowRepeatAnswer) return false;
    if (!object.Equals(PkAttachInfo, other.PkAttachInfo)) return false;
    if (PkCreaterNickname != other.PkCreaterNickname) return false;
    if (PkMaxAnswer != other.PkMaxAnswer) return false;
    if (PkProjectLanguageType != other.PkProjectLanguageType) return false;
    if (PkUpdateTime != other.PkUpdateTime) return false;
    if (!object.Equals(PkAttachInfoNew, other.PkAttachInfoNew)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (PkName.Length != 0) hash ^= PkName.GetHashCode();
    if (PkDescription.Length != 0) hash ^= PkDescription.GetHashCode();
    if (PkScriptShow != 0) hash ^= PkScriptShow.GetHashCode();
    if (PkDownloadCount != 0) hash ^= PkDownloadCount.GetHashCode();
    if (PkCreateId != 0) hash ^= PkCreateId.GetHashCode();
    if (PkCreateTime != 0UL) hash ^= PkCreateTime.GetHashCode();
    if (PkSenceId != 0) hash ^= PkSenceId.GetHashCode();
    hash ^= PkLikeList.GetHashCode();
    hash ^= PkAnswerList.GetHashCode();
    if (ProjPath.Length != 0) hash ^= ProjPath.GetHashCode();
    if (PkParameters.Length != 0) hash ^= PkParameters.GetHashCode();
    if (PkAllowRepeatAnswer != 0) hash ^= PkAllowRepeatAnswer.GetHashCode();
    if (pkAttachInfo_ != null) hash ^= PkAttachInfo.GetHashCode();
    if (PkCreaterNickname.Length != 0) hash ^= PkCreaterNickname.GetHashCode();
    if (PkMaxAnswer != 0) hash ^= PkMaxAnswer.GetHashCode();
    if (PkProjectLanguageType != 0) hash ^= PkProjectLanguageType.GetHashCode();
    if (PkUpdateTime != 0UL) hash ^= PkUpdateTime.GetHashCode();
    if (pkAttachInfoNew_ != null) hash ^= PkAttachInfoNew.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (PkName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PkName);
    }
    if (PkDescription.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(PkDescription);
    }
    if (PkScriptShow != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(PkScriptShow);
    }
    if (PkDownloadCount != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(PkDownloadCount);
    }
    if (PkCreateId != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(PkCreateId);
    }
    if (PkCreateTime != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(PkCreateTime);
    }
    if (PkSenceId != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(PkSenceId);
    }
    pkLikeList_.WriteTo(output, _map_pkLikeList_codec);
    pkAnswerList_.WriteTo(output, _map_pkAnswerList_codec);
    if (ProjPath.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(ProjPath);
    }
    if (PkParameters.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(PkParameters);
    }
    if (PkAllowRepeatAnswer != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(PkAllowRepeatAnswer);
    }
    if (pkAttachInfo_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(PkAttachInfo);
    }
    if (PkCreaterNickname.Length != 0) {
      output.WriteRawTag(122);
      output.WriteString(PkCreaterNickname);
    }
    if (PkMaxAnswer != 0) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(PkMaxAnswer);
    }
    if (PkProjectLanguageType != 0) {
      output.WriteRawTag(136, 1);
      output.WriteEnum((int) PkProjectLanguageType);
    }
    if (PkUpdateTime != 0UL) {
      output.WriteRawTag(144, 1);
      output.WriteUInt64(PkUpdateTime);
    }
    if (pkAttachInfoNew_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(PkAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (PkName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PkName);
    }
    if (PkDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PkDescription);
    }
    if (PkScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkScriptShow);
    }
    if (PkDownloadCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkDownloadCount);
    }
    if (PkCreateId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkCreateId);
    }
    if (PkCreateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PkCreateTime);
    }
    if (PkSenceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkSenceId);
    }
    size += pkLikeList_.CalculateSize(_map_pkLikeList_codec);
    size += pkAnswerList_.CalculateSize(_map_pkAnswerList_codec);
    if (ProjPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjPath);
    }
    if (PkParameters.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PkParameters);
    }
    if (PkAllowRepeatAnswer != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkAllowRepeatAnswer);
    }
    if (pkAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAttachInfo);
    }
    if (PkCreaterNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PkCreaterNickname);
    }
    if (PkMaxAnswer != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PkMaxAnswer);
    }
    if (PkProjectLanguageType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PkProjectLanguageType);
    }
    if (PkUpdateTime != 0UL) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(PkUpdateTime);
    }
    if (pkAttachInfoNew_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PkAttachInfoNew);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PK other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.PkName.Length != 0) {
      PkName = other.PkName;
    }
    if (other.PkDescription.Length != 0) {
      PkDescription = other.PkDescription;
    }
    if (other.PkScriptShow != 0) {
      PkScriptShow = other.PkScriptShow;
    }
    if (other.PkDownloadCount != 0) {
      PkDownloadCount = other.PkDownloadCount;
    }
    if (other.PkCreateId != 0) {
      PkCreateId = other.PkCreateId;
    }
    if (other.PkCreateTime != 0UL) {
      PkCreateTime = other.PkCreateTime;
    }
    if (other.PkSenceId != 0) {
      PkSenceId = other.PkSenceId;
    }
    pkLikeList_.Add(other.pkLikeList_);
    pkAnswerList_.Add(other.pkAnswerList_);
    if (other.ProjPath.Length != 0) {
      ProjPath = other.ProjPath;
    }
    if (other.PkParameters.Length != 0) {
      PkParameters = other.PkParameters;
    }
    if (other.PkAllowRepeatAnswer != 0) {
      PkAllowRepeatAnswer = other.PkAllowRepeatAnswer;
    }
    if (other.pkAttachInfo_ != null) {
      if (pkAttachInfo_ == null) {
        pkAttachInfo_ = new global::PK_Attach_Info();
      }
      PkAttachInfo.MergeFrom(other.PkAttachInfo);
    }
    if (other.PkCreaterNickname.Length != 0) {
      PkCreaterNickname = other.PkCreaterNickname;
    }
    if (other.PkMaxAnswer != 0) {
      PkMaxAnswer = other.PkMaxAnswer;
    }
    if (other.PkProjectLanguageType != 0) {
      PkProjectLanguageType = other.PkProjectLanguageType;
    }
    if (other.PkUpdateTime != 0UL) {
      PkUpdateTime = other.PkUpdateTime;
    }
    if (other.pkAttachInfoNew_ != null) {
      if (pkAttachInfoNew_ == null) {
        pkAttachInfoNew_ = new global::K8_Attach_Info();
      }
      PkAttachInfoNew.MergeFrom(other.PkAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 18: {
          PkName = input.ReadString();
          break;
        }
        case 26: {
          PkDescription = input.ReadString();
          break;
        }
        case 32: {
          PkScriptShow = input.ReadUInt32();
          break;
        }
        case 40: {
          PkDownloadCount = input.ReadUInt32();
          break;
        }
        case 48: {
          PkCreateId = input.ReadUInt32();
          break;
        }
        case 56: {
          PkCreateTime = input.ReadUInt64();
          break;
        }
        case 64: {
          PkSenceId = input.ReadUInt32();
          break;
        }
        case 74: {
          pkLikeList_.AddEntriesFrom(input, _map_pkLikeList_codec);
          break;
        }
        case 82: {
          pkAnswerList_.AddEntriesFrom(input, _map_pkAnswerList_codec);
          break;
        }
        case 90: {
          ProjPath = input.ReadString();
          break;
        }
        case 98: {
          PkParameters = input.ReadString();
          break;
        }
        case 104: {
          PkAllowRepeatAnswer = input.ReadUInt32();
          break;
        }
        case 114: {
          if (pkAttachInfo_ == null) {
            pkAttachInfo_ = new global::PK_Attach_Info();
          }
          input.ReadMessage(pkAttachInfo_);
          break;
        }
        case 122: {
          PkCreaterNickname = input.ReadString();
          break;
        }
        case 128: {
          PkMaxAnswer = input.ReadUInt32();
          break;
        }
        case 136: {
          pkProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
        case 144: {
          PkUpdateTime = input.ReadUInt64();
          break;
        }
        case 154: {
          if (pkAttachInfoNew_ == null) {
            pkAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(pkAttachInfoNew_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_pk_r			   = 601;
/// </summary>
public sealed partial class CMD_Create_PK_r_Parameters : pb::IMessage<CMD_Create_PK_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_PK_r_Parameters> _parser = new pb::MessageParser<CMD_Create_PK_r_Parameters>(() => new CMD_Create_PK_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_PK_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[157]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_PK_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_PK_r_Parameters(CMD_Create_PK_r_Parameters other) : this() {
    pkName_ = other.pkName_;
    pkScriptShow_ = other.pkScriptShow_;
    pkSenceId_ = other.pkSenceId_;
    pkDescription_ = other.pkDescription_;
    pkParameters_ = other.pkParameters_;
    pkAllowRepeatAnswer_ = other.pkAllowRepeatAnswer_;
    PkAttachInfo = other.pkAttachInfo_ != null ? other.PkAttachInfo.Clone() : null;
    pkProjectLanguageType_ = other.pkProjectLanguageType_;
    PkFiles = other.pkFiles_ != null ? other.PkFiles.Clone() : null;
    PkAttachInfoNew = other.pkAttachInfoNew_ != null ? other.PkAttachInfoNew.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_PK_r_Parameters Clone() {
    return new CMD_Create_PK_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_name" field.</summary>
  public const int PkNameFieldNumber = 1;
  private string pkName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PkName {
    get { return pkName_; }
    set {
      pkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_script_show" field.</summary>
  public const int PkScriptShowFieldNumber = 2;
  private uint pkScriptShow_;
  /// <summary>
  ///  0 未设置 1 隐藏 2 显示
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkScriptShow {
    get { return pkScriptShow_; }
    set {
      pkScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "pk_sence_id" field.</summary>
  public const int PkSenceIdFieldNumber = 3;
  private uint pkSenceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkSenceId {
    get { return pkSenceId_; }
    set {
      pkSenceId_ = value;
    }
  }

  /// <summary>Field number for the "pk_description" field.</summary>
  public const int PkDescriptionFieldNumber = 4;
  private string pkDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PkDescription {
    get { return pkDescription_; }
    set {
      pkDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_parameters" field.</summary>
  public const int PkParametersFieldNumber = 6;
  private string pkParameters_ = "";
  /// <summary>
  /// json string
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PkParameters {
    get { return pkParameters_; }
    set {
      pkParameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pk_allow_repeat_answer" field.</summary>
  public const int PkAllowRepeatAnswerFieldNumber = 7;
  private uint pkAllowRepeatAnswer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkAllowRepeatAnswer {
    get { return pkAllowRepeatAnswer_; }
    set {
      pkAllowRepeatAnswer_ = value;
    }
  }

  /// <summary>Field number for the "pk_attach_info" field.</summary>
  public const int PkAttachInfoFieldNumber = 8;
  private global::PK_Attach_Info pkAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PK_Attach_Info PkAttachInfo {
    get { return pkAttachInfo_; }
    set {
      pkAttachInfo_ = value;
    }
  }

  /// <summary>Field number for the "pk_project_language_type" field.</summary>
  public const int PkProjectLanguageTypeFieldNumber = 9;
  private global::Project_Language_Type pkProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type PkProjectLanguageType {
    get { return pkProjectLanguageType_; }
    set {
      pkProjectLanguageType_ = value;
    }
  }

  /// <summary>Field number for the "pk_files" field.</summary>
  public const int PkFilesFieldNumber = 10;
  private global::FileList pkFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList PkFiles {
    get { return pkFiles_; }
    set {
      pkFiles_ = value;
    }
  }

  /// <summary>Field number for the "pk_attach_info_new" field.</summary>
  public const int PkAttachInfoNewFieldNumber = 11;
  private global::K8_Attach_Info pkAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info PkAttachInfoNew {
    get { return pkAttachInfoNew_; }
    set {
      pkAttachInfoNew_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_PK_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_PK_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkName != other.PkName) return false;
    if (PkScriptShow != other.PkScriptShow) return false;
    if (PkSenceId != other.PkSenceId) return false;
    if (PkDescription != other.PkDescription) return false;
    if (PkParameters != other.PkParameters) return false;
    if (PkAllowRepeatAnswer != other.PkAllowRepeatAnswer) return false;
    if (!object.Equals(PkAttachInfo, other.PkAttachInfo)) return false;
    if (PkProjectLanguageType != other.PkProjectLanguageType) return false;
    if (!object.Equals(PkFiles, other.PkFiles)) return false;
    if (!object.Equals(PkAttachInfoNew, other.PkAttachInfoNew)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkName.Length != 0) hash ^= PkName.GetHashCode();
    if (PkScriptShow != 0) hash ^= PkScriptShow.GetHashCode();
    if (PkSenceId != 0) hash ^= PkSenceId.GetHashCode();
    if (PkDescription.Length != 0) hash ^= PkDescription.GetHashCode();
    if (PkParameters.Length != 0) hash ^= PkParameters.GetHashCode();
    if (PkAllowRepeatAnswer != 0) hash ^= PkAllowRepeatAnswer.GetHashCode();
    if (pkAttachInfo_ != null) hash ^= PkAttachInfo.GetHashCode();
    if (PkProjectLanguageType != 0) hash ^= PkProjectLanguageType.GetHashCode();
    if (pkFiles_ != null) hash ^= PkFiles.GetHashCode();
    if (pkAttachInfoNew_ != null) hash ^= PkAttachInfoNew.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PkName);
    }
    if (PkScriptShow != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PkScriptShow);
    }
    if (PkSenceId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PkSenceId);
    }
    if (PkDescription.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(PkDescription);
    }
    if (PkParameters.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(PkParameters);
    }
    if (PkAllowRepeatAnswer != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(PkAllowRepeatAnswer);
    }
    if (pkAttachInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(PkAttachInfo);
    }
    if (PkProjectLanguageType != 0) {
      output.WriteRawTag(72);
      output.WriteEnum((int) PkProjectLanguageType);
    }
    if (pkFiles_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(PkFiles);
    }
    if (pkAttachInfoNew_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(PkAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PkName);
    }
    if (PkScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkScriptShow);
    }
    if (PkSenceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkSenceId);
    }
    if (PkDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PkDescription);
    }
    if (PkParameters.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PkParameters);
    }
    if (PkAllowRepeatAnswer != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkAllowRepeatAnswer);
    }
    if (pkAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAttachInfo);
    }
    if (PkProjectLanguageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PkProjectLanguageType);
    }
    if (pkFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkFiles);
    }
    if (pkAttachInfoNew_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAttachInfoNew);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_PK_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkName.Length != 0) {
      PkName = other.PkName;
    }
    if (other.PkScriptShow != 0) {
      PkScriptShow = other.PkScriptShow;
    }
    if (other.PkSenceId != 0) {
      PkSenceId = other.PkSenceId;
    }
    if (other.PkDescription.Length != 0) {
      PkDescription = other.PkDescription;
    }
    if (other.PkParameters.Length != 0) {
      PkParameters = other.PkParameters;
    }
    if (other.PkAllowRepeatAnswer != 0) {
      PkAllowRepeatAnswer = other.PkAllowRepeatAnswer;
    }
    if (other.pkAttachInfo_ != null) {
      if (pkAttachInfo_ == null) {
        pkAttachInfo_ = new global::PK_Attach_Info();
      }
      PkAttachInfo.MergeFrom(other.PkAttachInfo);
    }
    if (other.PkProjectLanguageType != 0) {
      PkProjectLanguageType = other.PkProjectLanguageType;
    }
    if (other.pkFiles_ != null) {
      if (pkFiles_ == null) {
        pkFiles_ = new global::FileList();
      }
      PkFiles.MergeFrom(other.PkFiles);
    }
    if (other.pkAttachInfoNew_ != null) {
      if (pkAttachInfoNew_ == null) {
        pkAttachInfoNew_ = new global::K8_Attach_Info();
      }
      PkAttachInfoNew.MergeFrom(other.PkAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          PkName = input.ReadString();
          break;
        }
        case 16: {
          PkScriptShow = input.ReadUInt32();
          break;
        }
        case 24: {
          PkSenceId = input.ReadUInt32();
          break;
        }
        case 34: {
          PkDescription = input.ReadString();
          break;
        }
        case 50: {
          PkParameters = input.ReadString();
          break;
        }
        case 56: {
          PkAllowRepeatAnswer = input.ReadUInt32();
          break;
        }
        case 66: {
          if (pkAttachInfo_ == null) {
            pkAttachInfo_ = new global::PK_Attach_Info();
          }
          input.ReadMessage(pkAttachInfo_);
          break;
        }
        case 72: {
          pkProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
        case 82: {
          if (pkFiles_ == null) {
            pkFiles_ = new global::FileList();
          }
          input.ReadMessage(pkFiles_);
          break;
        }
        case 90: {
          if (pkAttachInfoNew_ == null) {
            pkAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(pkAttachInfoNew_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_pk_a			   = 602;
/// </summary>
public sealed partial class CMD_Create_PK_a_Parameters : pb::IMessage<CMD_Create_PK_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_PK_a_Parameters> _parser = new pb::MessageParser<CMD_Create_PK_a_Parameters>(() => new CMD_Create_PK_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_PK_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[158]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_PK_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_PK_a_Parameters(CMD_Create_PK_a_Parameters other) : this() {
    PkInfo = other.pkInfo_ != null ? other.PkInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_PK_a_Parameters Clone() {
    return new CMD_Create_PK_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_info" field.</summary>
  public const int PkInfoFieldNumber = 1;
  private global::PK pkInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PK PkInfo {
    get { return pkInfo_; }
    set {
      pkInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_PK_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_PK_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(PkInfo, other.PkInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (pkInfo_ != null) hash ^= PkInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (pkInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(PkInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (pkInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_PK_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.pkInfo_ != null) {
      if (pkInfo_ == null) {
        pkInfo_ = new global::PK();
      }
      PkInfo.MergeFrom(other.PkInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (pkInfo_ == null) {
            pkInfo_ = new global::PK();
          }
          input.ReadMessage(pkInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_pk_r				= 603;
/// </summary>
public sealed partial class CMD_Modify_PK_r_Parameters : pb::IMessage<CMD_Modify_PK_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_PK_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_PK_r_Parameters>(() => new CMD_Modify_PK_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_PK_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[159]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_PK_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_PK_r_Parameters(CMD_Modify_PK_r_Parameters other) : this() {
    pkId_ = other.pkId_;
    PkAttachInfo = other.pkAttachInfo_ != null ? other.PkAttachInfo.Clone() : null;
    PkAttachInfoNew = other.pkAttachInfoNew_ != null ? other.PkAttachInfoNew.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_PK_r_Parameters Clone() {
    return new CMD_Modify_PK_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_attach_info" field.</summary>
  public const int PkAttachInfoFieldNumber = 2;
  private global::PK_Attach_Info pkAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PK_Attach_Info PkAttachInfo {
    get { return pkAttachInfo_; }
    set {
      pkAttachInfo_ = value;
    }
  }

  /// <summary>Field number for the "pk_attach_info_new" field.</summary>
  public const int PkAttachInfoNewFieldNumber = 3;
  private global::K8_Attach_Info pkAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info PkAttachInfoNew {
    get { return pkAttachInfoNew_; }
    set {
      pkAttachInfoNew_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_PK_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_PK_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (!object.Equals(PkAttachInfo, other.PkAttachInfo)) return false;
    if (!object.Equals(PkAttachInfoNew, other.PkAttachInfoNew)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (pkAttachInfo_ != null) hash ^= PkAttachInfo.GetHashCode();
    if (pkAttachInfoNew_ != null) hash ^= PkAttachInfoNew.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (pkAttachInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PkAttachInfo);
    }
    if (pkAttachInfoNew_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(PkAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (pkAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAttachInfo);
    }
    if (pkAttachInfoNew_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAttachInfoNew);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_PK_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.pkAttachInfo_ != null) {
      if (pkAttachInfo_ == null) {
        pkAttachInfo_ = new global::PK_Attach_Info();
      }
      PkAttachInfo.MergeFrom(other.PkAttachInfo);
    }
    if (other.pkAttachInfoNew_ != null) {
      if (pkAttachInfoNew_ == null) {
        pkAttachInfoNew_ = new global::K8_Attach_Info();
      }
      PkAttachInfoNew.MergeFrom(other.PkAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (pkAttachInfo_ == null) {
            pkAttachInfo_ = new global::PK_Attach_Info();
          }
          input.ReadMessage(pkAttachInfo_);
          break;
        }
        case 26: {
          if (pkAttachInfoNew_ == null) {
            pkAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(pkAttachInfoNew_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_pk_a				= 604;
/// </summary>
public sealed partial class CMD_Modify_PK_a_Parameters : pb::IMessage<CMD_Modify_PK_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_PK_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_PK_a_Parameters>(() => new CMD_Modify_PK_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_PK_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[160]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_PK_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_PK_a_Parameters(CMD_Modify_PK_a_Parameters other) : this() {
    pkId_ = other.pkId_;
    PkAttachInfo = other.pkAttachInfo_ != null ? other.PkAttachInfo.Clone() : null;
    PkAttachInfoNew = other.pkAttachInfoNew_ != null ? other.PkAttachInfoNew.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_PK_a_Parameters Clone() {
    return new CMD_Modify_PK_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_attach_info" field.</summary>
  public const int PkAttachInfoFieldNumber = 2;
  private global::PK_Attach_Info pkAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PK_Attach_Info PkAttachInfo {
    get { return pkAttachInfo_; }
    set {
      pkAttachInfo_ = value;
    }
  }

  /// <summary>Field number for the "pk_attach_info_new" field.</summary>
  public const int PkAttachInfoNewFieldNumber = 3;
  private global::K8_Attach_Info pkAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info PkAttachInfoNew {
    get { return pkAttachInfoNew_; }
    set {
      pkAttachInfoNew_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_PK_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_PK_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (!object.Equals(PkAttachInfo, other.PkAttachInfo)) return false;
    if (!object.Equals(PkAttachInfoNew, other.PkAttachInfoNew)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (pkAttachInfo_ != null) hash ^= PkAttachInfo.GetHashCode();
    if (pkAttachInfoNew_ != null) hash ^= PkAttachInfoNew.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (pkAttachInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PkAttachInfo);
    }
    if (pkAttachInfoNew_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(PkAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (pkAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAttachInfo);
    }
    if (pkAttachInfoNew_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAttachInfoNew);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_PK_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.pkAttachInfo_ != null) {
      if (pkAttachInfo_ == null) {
        pkAttachInfo_ = new global::PK_Attach_Info();
      }
      PkAttachInfo.MergeFrom(other.PkAttachInfo);
    }
    if (other.pkAttachInfoNew_ != null) {
      if (pkAttachInfoNew_ == null) {
        pkAttachInfoNew_ = new global::K8_Attach_Info();
      }
      PkAttachInfoNew.MergeFrom(other.PkAttachInfoNew);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (pkAttachInfo_ == null) {
            pkAttachInfo_ = new global::PK_Attach_Info();
          }
          input.ReadMessage(pkAttachInfo_);
          break;
        }
        case 26: {
          if (pkAttachInfoNew_ == null) {
            pkAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(pkAttachInfoNew_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_pk_r				= 605;
/// </summary>
public sealed partial class CMD_Del_PK_r_Parameters : pb::IMessage<CMD_Del_PK_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_PK_r_Parameters> _parser = new pb::MessageParser<CMD_Del_PK_r_Parameters>(() => new CMD_Del_PK_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_PK_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[161]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_r_Parameters(CMD_Del_PK_r_Parameters other) : this() {
    pkId_ = other.pkId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_r_Parameters Clone() {
    return new CMD_Del_PK_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_PK_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_PK_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_PK_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_pk_a				= 606;
/// </summary>
public sealed partial class CMD_Del_PK_a_Parameters : pb::IMessage<CMD_Del_PK_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_PK_a_Parameters> _parser = new pb::MessageParser<CMD_Del_PK_a_Parameters>(() => new CMD_Del_PK_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_PK_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[162]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_a_Parameters(CMD_Del_PK_a_Parameters other) : this() {
    pkId_ = other.pkId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_a_Parameters Clone() {
    return new CMD_Del_PK_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_PK_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_PK_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_PK_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_pk_r				= 607;
/// </summary>
public sealed partial class CMD_Get_PK_r_Parameters : pb::IMessage<CMD_Get_PK_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_PK_r_Parameters> _parser = new pb::MessageParser<CMD_Get_PK_r_Parameters>(() => new CMD_Get_PK_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_PK_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[163]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PK_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PK_r_Parameters(CMD_Get_PK_r_Parameters other) : this() {
    pkId_ = other.pkId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PK_r_Parameters Clone() {
    return new CMD_Get_PK_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_PK_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_PK_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_PK_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_pk_a				= 608;
/// </summary>
public sealed partial class CMD_Get_PK_a_Parameters : pb::IMessage<CMD_Get_PK_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_PK_a_Parameters> _parser = new pb::MessageParser<CMD_Get_PK_a_Parameters>(() => new CMD_Get_PK_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_PK_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[164]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PK_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PK_a_Parameters(CMD_Get_PK_a_Parameters other) : this() {
    PkInfo = other.pkInfo_ != null ? other.PkInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PK_a_Parameters Clone() {
    return new CMD_Get_PK_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_info" field.</summary>
  public const int PkInfoFieldNumber = 1;
  private global::PK pkInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PK PkInfo {
    get { return pkInfo_; }
    set {
      pkInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_PK_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_PK_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(PkInfo, other.PkInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (pkInfo_ != null) hash ^= PkInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (pkInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(PkInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (pkInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_PK_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.pkInfo_ != null) {
      if (pkInfo_ == null) {
        pkInfo_ = new global::PK();
      }
      PkInfo.MergeFrom(other.PkInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (pkInfo_ == null) {
            pkInfo_ = new global::PK();
          }
          input.ReadMessage(pkInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_pklist_r			= 609;
/// </summary>
public sealed partial class CMD_Get_PKList_r_Parameters : pb::IMessage<CMD_Get_PKList_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_PKList_r_Parameters> _parser = new pb::MessageParser<CMD_Get_PKList_r_Parameters>(() => new CMD_Get_PKList_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_PKList_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[165]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PKList_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PKList_r_Parameters(CMD_Get_PKList_r_Parameters other) : this() {
    sortType_ = other.sortType_;
    showScript_ = other.showScript_;
    startPos_ = other.startPos_;
    limitCount_ = other.limitCount_;
    desc_ = other.desc_;
    reqLanguageType_ = other.reqLanguageType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PKList_r_Parameters Clone() {
    return new CMD_Get_PKList_r_Parameters(this);
  }

  /// <summary>Field number for the "sort_type" field.</summary>
  public const int SortTypeFieldNumber = 1;
  private global::PKSort_Type sortType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PKSort_Type SortType {
    get { return sortType_; }
    set {
      sortType_ = value;
    }
  }

  /// <summary>Field number for the "show_script" field.</summary>
  public const int ShowScriptFieldNumber = 2;
  private uint showScript_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ShowScript {
    get { return showScript_; }
    set {
      showScript_ = value;
    }
  }

  /// <summary>Field number for the "start_pos" field.</summary>
  public const int StartPosFieldNumber = 3;
  private uint startPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint StartPos {
    get { return startPos_; }
    set {
      startPos_ = value;
    }
  }

  /// <summary>Field number for the "limit_count" field.</summary>
  public const int LimitCountFieldNumber = 4;
  private uint limitCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint LimitCount {
    get { return limitCount_; }
    set {
      limitCount_ = value;
    }
  }

  /// <summary>Field number for the "desc" field.</summary>
  public const int DescFieldNumber = 5;
  private uint desc_;
  /// <summary>
  /// 0 正序 1 倒序
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Desc {
    get { return desc_; }
    set {
      desc_ = value;
    }
  }

  /// <summary>Field number for the "req_language_type" field.</summary>
  public const int ReqLanguageTypeFieldNumber = 6;
  private global::Project_Language_Type reqLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type ReqLanguageType {
    get { return reqLanguageType_; }
    set {
      reqLanguageType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_PKList_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_PKList_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SortType != other.SortType) return false;
    if (ShowScript != other.ShowScript) return false;
    if (StartPos != other.StartPos) return false;
    if (LimitCount != other.LimitCount) return false;
    if (Desc != other.Desc) return false;
    if (ReqLanguageType != other.ReqLanguageType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SortType != 0) hash ^= SortType.GetHashCode();
    if (ShowScript != 0) hash ^= ShowScript.GetHashCode();
    if (StartPos != 0) hash ^= StartPos.GetHashCode();
    if (LimitCount != 0) hash ^= LimitCount.GetHashCode();
    if (Desc != 0) hash ^= Desc.GetHashCode();
    if (ReqLanguageType != 0) hash ^= ReqLanguageType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SortType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SortType);
    }
    if (ShowScript != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ShowScript);
    }
    if (StartPos != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(StartPos);
    }
    if (LimitCount != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(LimitCount);
    }
    if (Desc != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(Desc);
    }
    if (ReqLanguageType != 0) {
      output.WriteRawTag(48);
      output.WriteEnum((int) ReqLanguageType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SortType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SortType);
    }
    if (ShowScript != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ShowScript);
    }
    if (StartPos != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartPos);
    }
    if (LimitCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LimitCount);
    }
    if (Desc != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Desc);
    }
    if (ReqLanguageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqLanguageType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_PKList_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SortType != 0) {
      SortType = other.SortType;
    }
    if (other.ShowScript != 0) {
      ShowScript = other.ShowScript;
    }
    if (other.StartPos != 0) {
      StartPos = other.StartPos;
    }
    if (other.LimitCount != 0) {
      LimitCount = other.LimitCount;
    }
    if (other.Desc != 0) {
      Desc = other.Desc;
    }
    if (other.ReqLanguageType != 0) {
      ReqLanguageType = other.ReqLanguageType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          sortType_ = (global::PKSort_Type) input.ReadEnum();
          break;
        }
        case 16: {
          ShowScript = input.ReadUInt32();
          break;
        }
        case 24: {
          StartPos = input.ReadUInt32();
          break;
        }
        case 32: {
          LimitCount = input.ReadUInt32();
          break;
        }
        case 40: {
          Desc = input.ReadUInt32();
          break;
        }
        case 48: {
          reqLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_pklist_a			= 610;
/// </summary>
public sealed partial class CMD_Get_PKList_a_Parameters : pb::IMessage<CMD_Get_PKList_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_PKList_a_Parameters> _parser = new pb::MessageParser<CMD_Get_PKList_a_Parameters>(() => new CMD_Get_PKList_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_PKList_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[166]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PKList_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PKList_a_Parameters(CMD_Get_PKList_a_Parameters other) : this() {
    pkList_ = other.pkList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_PKList_a_Parameters Clone() {
    return new CMD_Get_PKList_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_list" field.</summary>
  public const int PkListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PK> _repeated_pkList_codec
      = pb::FieldCodec.ForMessage(10, global::PK.Parser);
  private readonly pbc::RepeatedField<global::PK> pkList_ = new pbc::RepeatedField<global::PK>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PK> PkList {
    get { return pkList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_PKList_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_PKList_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!pkList_.Equals(other.pkList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= pkList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    pkList_.WriteTo(output, _repeated_pkList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += pkList_.CalculateSize(_repeated_pkList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_PKList_a_Parameters other) {
    if (other == null) {
      return;
    }
    pkList_.Add(other.pkList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          pkList_.AddEntriesFrom(input, _repeated_pkList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_answer_pk_r				= 611;
/// </summary>
public sealed partial class CMD_Answer_PK_r_Parameters : pb::IMessage<CMD_Answer_PK_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Answer_PK_r_Parameters> _parser = new pb::MessageParser<CMD_Answer_PK_r_Parameters>(() => new CMD_Answer_PK_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Answer_PK_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[167]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_PK_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_PK_r_Parameters(CMD_Answer_PK_r_Parameters other) : this() {
    pkId_ = other.pkId_;
    PkAnswerInfo = other.pkAnswerInfo_ != null ? other.PkAnswerInfo.Clone() : null;
    PkFiles = other.pkFiles_ != null ? other.PkFiles.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_PK_r_Parameters Clone() {
    return new CMD_Answer_PK_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_answer_info" field.</summary>
  public const int PkAnswerInfoFieldNumber = 7;
  private global::PKAnswer pkAnswerInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PKAnswer PkAnswerInfo {
    get { return pkAnswerInfo_; }
    set {
      pkAnswerInfo_ = value;
    }
  }

  /// <summary>Field number for the "pk_files" field.</summary>
  public const int PkFilesFieldNumber = 8;
  private global::FileList pkFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList PkFiles {
    get { return pkFiles_; }
    set {
      pkFiles_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Answer_PK_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Answer_PK_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (!object.Equals(PkAnswerInfo, other.PkAnswerInfo)) return false;
    if (!object.Equals(PkFiles, other.PkFiles)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (pkAnswerInfo_ != null) hash ^= PkAnswerInfo.GetHashCode();
    if (pkFiles_ != null) hash ^= PkFiles.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (pkAnswerInfo_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(PkAnswerInfo);
    }
    if (pkFiles_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(PkFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (pkAnswerInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAnswerInfo);
    }
    if (pkFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkFiles);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Answer_PK_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.pkAnswerInfo_ != null) {
      if (pkAnswerInfo_ == null) {
        pkAnswerInfo_ = new global::PKAnswer();
      }
      PkAnswerInfo.MergeFrom(other.PkAnswerInfo);
    }
    if (other.pkFiles_ != null) {
      if (pkFiles_ == null) {
        pkFiles_ = new global::FileList();
      }
      PkFiles.MergeFrom(other.PkFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 58: {
          if (pkAnswerInfo_ == null) {
            pkAnswerInfo_ = new global::PKAnswer();
          }
          input.ReadMessage(pkAnswerInfo_);
          break;
        }
        case 66: {
          if (pkFiles_ == null) {
            pkFiles_ = new global::FileList();
          }
          input.ReadMessage(pkFiles_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_answer_pk_a				= 612;
/// </summary>
public sealed partial class CMD_Answer_PK_a_Parameters : pb::IMessage<CMD_Answer_PK_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Answer_PK_a_Parameters> _parser = new pb::MessageParser<CMD_Answer_PK_a_Parameters>(() => new CMD_Answer_PK_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Answer_PK_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[168]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_PK_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_PK_a_Parameters(CMD_Answer_PK_a_Parameters other) : this() {
    pkId_ = other.pkId_;
    PkAnswerInfo = other.pkAnswerInfo_ != null ? other.PkAnswerInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_PK_a_Parameters Clone() {
    return new CMD_Answer_PK_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_answer_info" field.</summary>
  public const int PkAnswerInfoFieldNumber = 2;
  private global::PKAnswer pkAnswerInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PKAnswer PkAnswerInfo {
    get { return pkAnswerInfo_; }
    set {
      pkAnswerInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Answer_PK_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Answer_PK_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (!object.Equals(PkAnswerInfo, other.PkAnswerInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (pkAnswerInfo_ != null) hash ^= PkAnswerInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (pkAnswerInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PkAnswerInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (pkAnswerInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkAnswerInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Answer_PK_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.pkAnswerInfo_ != null) {
      if (pkAnswerInfo_ == null) {
        pkAnswerInfo_ = new global::PKAnswer();
      }
      PkAnswerInfo.MergeFrom(other.PkAnswerInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (pkAnswerInfo_ == null) {
            pkAnswerInfo_ = new global::PKAnswer();
          }
          input.ReadMessage(pkAnswerInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_like_pk_r				= 613;
/// </summary>
public sealed partial class CMD_Like_PK_r_Parameters : pb::IMessage<CMD_Like_PK_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Like_PK_r_Parameters> _parser = new pb::MessageParser<CMD_Like_PK_r_Parameters>(() => new CMD_Like_PK_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Like_PK_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[169]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_PK_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_PK_r_Parameters(CMD_Like_PK_r_Parameters other) : this() {
    pkId_ = other.pkId_;
    pkAnswerId_ = other.pkAnswerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_PK_r_Parameters Clone() {
    return new CMD_Like_PK_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_answer_id" field.</summary>
  public const int PkAnswerIdFieldNumber = 2;
  private uint pkAnswerId_;
  /// <summary>
  /// 点赞回答
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkAnswerId {
    get { return pkAnswerId_; }
    set {
      pkAnswerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Like_PK_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Like_PK_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (PkAnswerId != other.PkAnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (PkAnswerId != 0) hash ^= PkAnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (PkAnswerId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PkAnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (PkAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkAnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Like_PK_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.PkAnswerId != 0) {
      PkAnswerId = other.PkAnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 16: {
          PkAnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_like_pk_a				= 614;
/// </summary>
public sealed partial class CMD_Like_PK_a_Parameters : pb::IMessage<CMD_Like_PK_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Like_PK_a_Parameters> _parser = new pb::MessageParser<CMD_Like_PK_a_Parameters>(() => new CMD_Like_PK_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Like_PK_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[170]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_PK_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_PK_a_Parameters(CMD_Like_PK_a_Parameters other) : this() {
    pkId_ = other.pkId_;
    pkAnswerId_ = other.pkAnswerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Like_PK_a_Parameters Clone() {
    return new CMD_Like_PK_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_answer_id" field.</summary>
  public const int PkAnswerIdFieldNumber = 2;
  private uint pkAnswerId_;
  /// <summary>
  /// 点赞回答
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkAnswerId {
    get { return pkAnswerId_; }
    set {
      pkAnswerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Like_PK_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Like_PK_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (PkAnswerId != other.PkAnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (PkAnswerId != 0) hash ^= PkAnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (PkAnswerId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PkAnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (PkAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkAnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Like_PK_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.PkAnswerId != 0) {
      PkAnswerId = other.PkAnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 16: {
          PkAnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_download_pk_r			= 615;
/// </summary>
public sealed partial class CMD_Download_PK_r_Parameters : pb::IMessage<CMD_Download_PK_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Download_PK_r_Parameters> _parser = new pb::MessageParser<CMD_Download_PK_r_Parameters>(() => new CMD_Download_PK_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Download_PK_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[171]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_PK_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_PK_r_Parameters(CMD_Download_PK_r_Parameters other) : this() {
    pkPath_ = other.pkPath_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_PK_r_Parameters Clone() {
    return new CMD_Download_PK_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_path" field.</summary>
  public const int PkPathFieldNumber = 1;
  private string pkPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PkPath {
    get { return pkPath_; }
    set {
      pkPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Download_PK_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Download_PK_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkPath != other.PkPath) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkPath.Length != 0) hash ^= PkPath.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PkPath);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PkPath);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Download_PK_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkPath.Length != 0) {
      PkPath = other.PkPath;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          PkPath = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_download_pk_a			= 616;
/// </summary>
public sealed partial class CMD_Download_PK_a_Parameters : pb::IMessage<CMD_Download_PK_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Download_PK_a_Parameters> _parser = new pb::MessageParser<CMD_Download_PK_a_Parameters>(() => new CMD_Download_PK_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Download_PK_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[172]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_PK_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_PK_a_Parameters(CMD_Download_PK_a_Parameters other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_PK_a_Parameters Clone() {
    return new CMD_Download_PK_a_Parameters(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Download_PK_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Download_PK_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Download_PK_a_Parameters other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// 	cmd_pk_r					= 617;
/// </summary>
public sealed partial class CMD_PK_r_Parameters : pb::IMessage<CMD_PK_r_Parameters> {
  private static readonly pb::MessageParser<CMD_PK_r_Parameters> _parser = new pb::MessageParser<CMD_PK_r_Parameters>(() => new CMD_PK_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_PK_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[173]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_PK_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_PK_r_Parameters(CMD_PK_r_Parameters other) : this() {
    pkId_ = other.pkId_;
    PkResultInfo = other.pkResultInfo_ != null ? other.PkResultInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_PK_r_Parameters Clone() {
    return new CMD_PK_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_result_info" field.</summary>
  public const int PkResultInfoFieldNumber = 2;
  private global::PK_Result pkResultInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PK_Result PkResultInfo {
    get { return pkResultInfo_; }
    set {
      pkResultInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_PK_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_PK_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (!object.Equals(PkResultInfo, other.PkResultInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (pkResultInfo_ != null) hash ^= PkResultInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (pkResultInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PkResultInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (pkResultInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkResultInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_PK_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.pkResultInfo_ != null) {
      if (pkResultInfo_ == null) {
        pkResultInfo_ = new global::PK_Result();
      }
      PkResultInfo.MergeFrom(other.PkResultInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (pkResultInfo_ == null) {
            pkResultInfo_ = new global::PK_Result();
          }
          input.ReadMessage(pkResultInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_pk_a					= 618;
/// </summary>
public sealed partial class CMD_PK_a_Parameters : pb::IMessage<CMD_PK_a_Parameters> {
  private static readonly pb::MessageParser<CMD_PK_a_Parameters> _parser = new pb::MessageParser<CMD_PK_a_Parameters>(() => new CMD_PK_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_PK_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[174]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_PK_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_PK_a_Parameters(CMD_PK_a_Parameters other) : this() {
    pkId_ = other.pkId_;
    PkResultInfo = other.pkResultInfo_ != null ? other.PkResultInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_PK_a_Parameters Clone() {
    return new CMD_PK_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_result_info" field.</summary>
  public const int PkResultInfoFieldNumber = 2;
  private global::PK_Result pkResultInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PK_Result PkResultInfo {
    get { return pkResultInfo_; }
    set {
      pkResultInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_PK_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_PK_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (!object.Equals(PkResultInfo, other.PkResultInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (pkResultInfo_ != null) hash ^= PkResultInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (pkResultInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PkResultInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (pkResultInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PkResultInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_PK_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.pkResultInfo_ != null) {
      if (pkResultInfo_ == null) {
        pkResultInfo_ = new global::PK_Result();
      }
      PkResultInfo.MergeFrom(other.PkResultInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (pkResultInfo_ == null) {
            pkResultInfo_ = new global::PK_Result();
          }
          input.ReadMessage(pkResultInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_pk_answer_r			= 619;
/// </summary>
public sealed partial class CMD_Del_PK_Answer_r_Parameters : pb::IMessage<CMD_Del_PK_Answer_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_PK_Answer_r_Parameters> _parser = new pb::MessageParser<CMD_Del_PK_Answer_r_Parameters>(() => new CMD_Del_PK_Answer_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_PK_Answer_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[175]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_Answer_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_Answer_r_Parameters(CMD_Del_PK_Answer_r_Parameters other) : this() {
    pkId_ = other.pkId_;
    pkAnswerId_ = other.pkAnswerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_Answer_r_Parameters Clone() {
    return new CMD_Del_PK_Answer_r_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_answer_id" field.</summary>
  public const int PkAnswerIdFieldNumber = 2;
  private uint pkAnswerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkAnswerId {
    get { return pkAnswerId_; }
    set {
      pkAnswerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_PK_Answer_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_PK_Answer_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (PkAnswerId != other.PkAnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (PkAnswerId != 0) hash ^= PkAnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (PkAnswerId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PkAnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (PkAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkAnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_PK_Answer_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.PkAnswerId != 0) {
      PkAnswerId = other.PkAnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 16: {
          PkAnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_pk_answer_a			= 620;
/// </summary>
public sealed partial class CMD_Del_PK_Answer_a_Parameters : pb::IMessage<CMD_Del_PK_Answer_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_PK_Answer_a_Parameters> _parser = new pb::MessageParser<CMD_Del_PK_Answer_a_Parameters>(() => new CMD_Del_PK_Answer_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_PK_Answer_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[176]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_Answer_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_Answer_a_Parameters(CMD_Del_PK_Answer_a_Parameters other) : this() {
    pkId_ = other.pkId_;
    pkAnswerId_ = other.pkAnswerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_PK_Answer_a_Parameters Clone() {
    return new CMD_Del_PK_Answer_a_Parameters(this);
  }

  /// <summary>Field number for the "pk_id" field.</summary>
  public const int PkIdFieldNumber = 1;
  private uint pkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkId {
    get { return pkId_; }
    set {
      pkId_ = value;
    }
  }

  /// <summary>Field number for the "pk_answer_id" field.</summary>
  public const int PkAnswerIdFieldNumber = 2;
  private uint pkAnswerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PkAnswerId {
    get { return pkAnswerId_; }
    set {
      pkAnswerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_PK_Answer_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_PK_Answer_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PkId != other.PkId) return false;
    if (PkAnswerId != other.PkAnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PkId != 0) hash ^= PkId.GetHashCode();
    if (PkAnswerId != 0) hash ^= PkAnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PkId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PkId);
    }
    if (PkAnswerId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PkAnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkId);
    }
    if (PkAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PkAnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_PK_Answer_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.PkId != 0) {
      PkId = other.PkId;
    }
    if (other.PkAnswerId != 0) {
      PkAnswerId = other.PkAnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PkId = input.ReadUInt32();
          break;
        }
        case 16: {
          PkAnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Trophy_Setting : pb::IMessage<Trophy_Setting> {
  private static readonly pb::MessageParser<Trophy_Setting> _parser = new pb::MessageParser<Trophy_Setting>(() => new Trophy_Setting());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Trophy_Setting> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[177]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Trophy_Setting() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Trophy_Setting(Trophy_Setting other) : this() {
    trophyJsonSetting_ = other.trophyJsonSetting_;
    trophyMinScore_ = other.trophyMinScore_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Trophy_Setting Clone() {
    return new Trophy_Setting(this);
  }

  /// <summary>Field number for the "trophy_json_setting" field.</summary>
  public const int TrophyJsonSettingFieldNumber = 1;
  private string trophyJsonSetting_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TrophyJsonSetting {
    get { return trophyJsonSetting_; }
    set {
      trophyJsonSetting_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "trophy_min_score" field.</summary>
  public const int TrophyMinScoreFieldNumber = 2;
  private int trophyMinScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TrophyMinScore {
    get { return trophyMinScore_; }
    set {
      trophyMinScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Trophy_Setting);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Trophy_Setting other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TrophyJsonSetting != other.TrophyJsonSetting) return false;
    if (TrophyMinScore != other.TrophyMinScore) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TrophyJsonSetting.Length != 0) hash ^= TrophyJsonSetting.GetHashCode();
    if (TrophyMinScore != 0) hash ^= TrophyMinScore.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TrophyJsonSetting.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(TrophyJsonSetting);
    }
    if (TrophyMinScore != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TrophyMinScore);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TrophyJsonSetting.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TrophyJsonSetting);
    }
    if (TrophyMinScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrophyMinScore);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Trophy_Setting other) {
    if (other == null) {
      return;
    }
    if (other.TrophyJsonSetting.Length != 0) {
      TrophyJsonSetting = other.TrophyJsonSetting;
    }
    if (other.TrophyMinScore != 0) {
      TrophyMinScore = other.TrophyMinScore;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          TrophyJsonSetting = input.ReadString();
          break;
        }
        case 16: {
          TrophyMinScore = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Trophies_Setting : pb::IMessage<Trophies_Setting> {
  private static readonly pb::MessageParser<Trophies_Setting> _parser = new pb::MessageParser<Trophies_Setting>(() => new Trophies_Setting());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Trophies_Setting> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[178]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Trophies_Setting() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Trophies_Setting(Trophies_Setting other) : this() {
    CourseGoldTrophySetting = other.courseGoldTrophySetting_ != null ? other.CourseGoldTrophySetting.Clone() : null;
    CourseSiliverTrophySetting = other.courseSiliverTrophySetting_ != null ? other.CourseSiliverTrophySetting.Clone() : null;
    CourseBronzeTrophySetting = other.courseBronzeTrophySetting_ != null ? other.CourseBronzeTrophySetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Trophies_Setting Clone() {
    return new Trophies_Setting(this);
  }

  /// <summary>Field number for the "course_gold_trophy_setting" field.</summary>
  public const int CourseGoldTrophySettingFieldNumber = 1;
  private global::Trophy_Setting courseGoldTrophySetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophy_Setting CourseGoldTrophySetting {
    get { return courseGoldTrophySetting_; }
    set {
      courseGoldTrophySetting_ = value;
    }
  }

  /// <summary>Field number for the "course_siliver_trophy_setting" field.</summary>
  public const int CourseSiliverTrophySettingFieldNumber = 2;
  private global::Trophy_Setting courseSiliverTrophySetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophy_Setting CourseSiliverTrophySetting {
    get { return courseSiliverTrophySetting_; }
    set {
      courseSiliverTrophySetting_ = value;
    }
  }

  /// <summary>Field number for the "course_bronze_trophy_setting" field.</summary>
  public const int CourseBronzeTrophySettingFieldNumber = 3;
  private global::Trophy_Setting courseBronzeTrophySetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophy_Setting CourseBronzeTrophySetting {
    get { return courseBronzeTrophySetting_; }
    set {
      courseBronzeTrophySetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Trophies_Setting);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Trophies_Setting other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CourseGoldTrophySetting, other.CourseGoldTrophySetting)) return false;
    if (!object.Equals(CourseSiliverTrophySetting, other.CourseSiliverTrophySetting)) return false;
    if (!object.Equals(CourseBronzeTrophySetting, other.CourseBronzeTrophySetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (courseGoldTrophySetting_ != null) hash ^= CourseGoldTrophySetting.GetHashCode();
    if (courseSiliverTrophySetting_ != null) hash ^= CourseSiliverTrophySetting.GetHashCode();
    if (courseBronzeTrophySetting_ != null) hash ^= CourseBronzeTrophySetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (courseGoldTrophySetting_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CourseGoldTrophySetting);
    }
    if (courseSiliverTrophySetting_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(CourseSiliverTrophySetting);
    }
    if (courseBronzeTrophySetting_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(CourseBronzeTrophySetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (courseGoldTrophySetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseGoldTrophySetting);
    }
    if (courseSiliverTrophySetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseSiliverTrophySetting);
    }
    if (courseBronzeTrophySetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseBronzeTrophySetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Trophies_Setting other) {
    if (other == null) {
      return;
    }
    if (other.courseGoldTrophySetting_ != null) {
      if (courseGoldTrophySetting_ == null) {
        courseGoldTrophySetting_ = new global::Trophy_Setting();
      }
      CourseGoldTrophySetting.MergeFrom(other.CourseGoldTrophySetting);
    }
    if (other.courseSiliverTrophySetting_ != null) {
      if (courseSiliverTrophySetting_ == null) {
        courseSiliverTrophySetting_ = new global::Trophy_Setting();
      }
      CourseSiliverTrophySetting.MergeFrom(other.CourseSiliverTrophySetting);
    }
    if (other.courseBronzeTrophySetting_ != null) {
      if (courseBronzeTrophySetting_ == null) {
        courseBronzeTrophySetting_ = new global::Trophy_Setting();
      }
      CourseBronzeTrophySetting.MergeFrom(other.CourseBronzeTrophySetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (courseGoldTrophySetting_ == null) {
            courseGoldTrophySetting_ = new global::Trophy_Setting();
          }
          input.ReadMessage(courseGoldTrophySetting_);
          break;
        }
        case 18: {
          if (courseSiliverTrophySetting_ == null) {
            courseSiliverTrophySetting_ = new global::Trophy_Setting();
          }
          input.ReadMessage(courseSiliverTrophySetting_);
          break;
        }
        case 26: {
          if (courseBronzeTrophySetting_ == null) {
            courseBronzeTrophySetting_ = new global::Trophy_Setting();
          }
          input.ReadMessage(courseBronzeTrophySetting_);
          break;
        }
      }
    }
  }

}

public sealed partial class Certificate_Setting : pb::IMessage<Certificate_Setting> {
  private static readonly pb::MessageParser<Certificate_Setting> _parser = new pb::MessageParser<Certificate_Setting>(() => new Certificate_Setting());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Certificate_Setting> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[179]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Certificate_Setting() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Certificate_Setting(Certificate_Setting other) : this() {
    certificateJsonSetting_ = other.certificateJsonSetting_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Certificate_Setting Clone() {
    return new Certificate_Setting(this);
  }

  /// <summary>Field number for the "certificate_json_setting" field.</summary>
  public const int CertificateJsonSettingFieldNumber = 1;
  private string certificateJsonSetting_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CertificateJsonSetting {
    get { return certificateJsonSetting_; }
    set {
      certificateJsonSetting_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Certificate_Setting);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Certificate_Setting other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CertificateJsonSetting != other.CertificateJsonSetting) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CertificateJsonSetting.Length != 0) hash ^= CertificateJsonSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CertificateJsonSetting.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CertificateJsonSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CertificateJsonSetting.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CertificateJsonSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Certificate_Setting other) {
    if (other == null) {
      return;
    }
    if (other.CertificateJsonSetting.Length != 0) {
      CertificateJsonSetting = other.CertificateJsonSetting;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CertificateJsonSetting = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Course_Honor_Setting : pb::IMessage<Course_Honor_Setting> {
  private static readonly pb::MessageParser<Course_Honor_Setting> _parser = new pb::MessageParser<Course_Honor_Setting>(() => new Course_Honor_Setting());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Course_Honor_Setting> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[180]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Course_Honor_Setting() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Course_Honor_Setting(Course_Honor_Setting other) : this() {
    courseId_ = other.courseId_;
    courseRaceType_ = other.courseRaceType_;
    CourseTrophiesSetting = other.courseTrophiesSetting_ != null ? other.CourseTrophiesSetting.Clone() : null;
    CourseCertificateSetting = other.courseCertificateSetting_ != null ? other.CourseCertificateSetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Course_Honor_Setting Clone() {
    return new Course_Honor_Setting(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_race_type" field.</summary>
  public const int CourseRaceTypeFieldNumber = 2;
  private global::Course_Race_Type courseRaceType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Race_Type CourseRaceType {
    get { return courseRaceType_; }
    set {
      courseRaceType_ = value;
    }
  }

  /// <summary>Field number for the "course_trophies_setting" field.</summary>
  public const int CourseTrophiesSettingFieldNumber = 3;
  private global::Trophies_Setting courseTrophiesSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophies_Setting CourseTrophiesSetting {
    get { return courseTrophiesSetting_; }
    set {
      courseTrophiesSetting_ = value;
    }
  }

  /// <summary>Field number for the "course_certificate_setting" field.</summary>
  public const int CourseCertificateSettingFieldNumber = 4;
  private global::Certificate_Setting courseCertificateSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Certificate_Setting CourseCertificateSetting {
    get { return courseCertificateSetting_; }
    set {
      courseCertificateSetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Course_Honor_Setting);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Course_Honor_Setting other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CourseRaceType != other.CourseRaceType) return false;
    if (!object.Equals(CourseTrophiesSetting, other.CourseTrophiesSetting)) return false;
    if (!object.Equals(CourseCertificateSetting, other.CourseCertificateSetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CourseRaceType != 0) hash ^= CourseRaceType.GetHashCode();
    if (courseTrophiesSetting_ != null) hash ^= CourseTrophiesSetting.GetHashCode();
    if (courseCertificateSetting_ != null) hash ^= CourseCertificateSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CourseRaceType != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CourseRaceType);
    }
    if (courseTrophiesSetting_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(CourseTrophiesSetting);
    }
    if (courseCertificateSetting_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(CourseCertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CourseRaceType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseRaceType);
    }
    if (courseTrophiesSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseTrophiesSetting);
    }
    if (courseCertificateSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseCertificateSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Course_Honor_Setting other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CourseRaceType != 0) {
      CourseRaceType = other.CourseRaceType;
    }
    if (other.courseTrophiesSetting_ != null) {
      if (courseTrophiesSetting_ == null) {
        courseTrophiesSetting_ = new global::Trophies_Setting();
      }
      CourseTrophiesSetting.MergeFrom(other.CourseTrophiesSetting);
    }
    if (other.courseCertificateSetting_ != null) {
      if (courseCertificateSetting_ == null) {
        courseCertificateSetting_ = new global::Certificate_Setting();
      }
      CourseCertificateSetting.MergeFrom(other.CourseCertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          courseRaceType_ = (global::Course_Race_Type) input.ReadEnum();
          break;
        }
        case 26: {
          if (courseTrophiesSetting_ == null) {
            courseTrophiesSetting_ = new global::Trophies_Setting();
          }
          input.ReadMessage(courseTrophiesSetting_);
          break;
        }
        case 34: {
          if (courseCertificateSetting_ == null) {
            courseCertificateSetting_ = new global::Certificate_Setting();
          }
          input.ReadMessage(courseCertificateSetting_);
          break;
        }
      }
    }
  }

}

public sealed partial class Period_Item_Info : pb::IMessage<Period_Item_Info> {
  private static readonly pb::MessageParser<Period_Item_Info> _parser = new pb::MessageParser<Period_Item_Info>(() => new Period_Item_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Period_Item_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[181]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Item_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Item_Info(Period_Item_Info other) : this() {
    itemId_ = other.itemId_;
    itemDescription_ = other.itemDescription_;
    itemType_ = other.itemType_;
    itemUrl_ = other.itemUrl_;
    GbInfo = other.gbInfo_ != null ? other.GbInfo.Clone() : null;
    itemName_ = other.itemName_;
    itemCompletedUserCount_ = other.itemCompletedUserCount_;
    projectPath_ = other.projectPath_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Item_Info Clone() {
    return new Period_Item_Info(this);
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "item_description" field.</summary>
  public const int ItemDescriptionFieldNumber = 2;
  private string itemDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ItemDescription {
    get { return itemDescription_; }
    set {
      itemDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "item_type" field.</summary>
  public const int ItemTypeFieldNumber = 3;
  private uint itemType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemType {
    get { return itemType_; }
    set {
      itemType_ = value;
    }
  }

  /// <summary>Field number for the "item_url" field.</summary>
  public const int ItemUrlFieldNumber = 4;
  private string itemUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ItemUrl {
    get { return itemUrl_; }
    set {
      itemUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_info" field.</summary>
  public const int GbInfoFieldNumber = 6;
  private global::GameBoard gbInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameBoard GbInfo {
    get { return gbInfo_; }
    set {
      gbInfo_ = value;
    }
  }

  /// <summary>Field number for the "item_name" field.</summary>
  public const int ItemNameFieldNumber = 7;
  private string itemName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ItemName {
    get { return itemName_; }
    set {
      itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "item_completed_user_count" field.</summary>
  public const int ItemCompletedUserCountFieldNumber = 8;
  private uint itemCompletedUserCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemCompletedUserCount {
    get { return itemCompletedUserCount_; }
    set {
      itemCompletedUserCount_ = value;
    }
  }

  /// <summary>Field number for the "project_path" field.</summary>
  public const int ProjectPathFieldNumber = 9;
  private string projectPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectPath {
    get { return projectPath_; }
    set {
      projectPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Period_Item_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Period_Item_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (ItemDescription != other.ItemDescription) return false;
    if (ItemType != other.ItemType) return false;
    if (ItemUrl != other.ItemUrl) return false;
    if (!object.Equals(GbInfo, other.GbInfo)) return false;
    if (ItemName != other.ItemName) return false;
    if (ItemCompletedUserCount != other.ItemCompletedUserCount) return false;
    if (ProjectPath != other.ProjectPath) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (ItemDescription.Length != 0) hash ^= ItemDescription.GetHashCode();
    if (ItemType != 0) hash ^= ItemType.GetHashCode();
    if (ItemUrl.Length != 0) hash ^= ItemUrl.GetHashCode();
    if (gbInfo_ != null) hash ^= GbInfo.GetHashCode();
    if (ItemName.Length != 0) hash ^= ItemName.GetHashCode();
    if (ItemCompletedUserCount != 0) hash ^= ItemCompletedUserCount.GetHashCode();
    if (ProjectPath.Length != 0) hash ^= ProjectPath.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemId);
    }
    if (ItemDescription.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ItemDescription);
    }
    if (ItemType != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(ItemType);
    }
    if (ItemUrl.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ItemUrl);
    }
    if (gbInfo_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GbInfo);
    }
    if (ItemName.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(ItemName);
    }
    if (ItemCompletedUserCount != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(ItemCompletedUserCount);
    }
    if (ProjectPath.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(ProjectPath);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (ItemDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemDescription);
    }
    if (ItemType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemType);
    }
    if (ItemUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemUrl);
    }
    if (gbInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GbInfo);
    }
    if (ItemName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
    }
    if (ItemCompletedUserCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemCompletedUserCount);
    }
    if (ProjectPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectPath);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Period_Item_Info other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.ItemDescription.Length != 0) {
      ItemDescription = other.ItemDescription;
    }
    if (other.ItemType != 0) {
      ItemType = other.ItemType;
    }
    if (other.ItemUrl.Length != 0) {
      ItemUrl = other.ItemUrl;
    }
    if (other.gbInfo_ != null) {
      if (gbInfo_ == null) {
        gbInfo_ = new global::GameBoard();
      }
      GbInfo.MergeFrom(other.GbInfo);
    }
    if (other.ItemName.Length != 0) {
      ItemName = other.ItemName;
    }
    if (other.ItemCompletedUserCount != 0) {
      ItemCompletedUserCount = other.ItemCompletedUserCount;
    }
    if (other.ProjectPath.Length != 0) {
      ProjectPath = other.ProjectPath;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ItemId = input.ReadUInt32();
          break;
        }
        case 18: {
          ItemDescription = input.ReadString();
          break;
        }
        case 24: {
          ItemType = input.ReadUInt32();
          break;
        }
        case 34: {
          ItemUrl = input.ReadString();
          break;
        }
        case 50: {
          if (gbInfo_ == null) {
            gbInfo_ = new global::GameBoard();
          }
          input.ReadMessage(gbInfo_);
          break;
        }
        case 58: {
          ItemName = input.ReadString();
          break;
        }
        case 64: {
          ItemCompletedUserCount = input.ReadUInt32();
          break;
        }
        case 74: {
          ProjectPath = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Period_Finish_Condition : pb::IMessage<Period_Finish_Condition> {
  private static readonly pb::MessageParser<Period_Finish_Condition> _parser = new pb::MessageParser<Period_Finish_Condition>(() => new Period_Finish_Condition());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Period_Finish_Condition> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[182]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Finish_Condition() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Finish_Condition(Period_Finish_Condition other) : this() {
    threestarScore_ = other.threestarScore_;
    doublestarScore_ = other.doublestarScore_;
    passScore_ = other.passScore_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Finish_Condition Clone() {
    return new Period_Finish_Condition(this);
  }

  /// <summary>Field number for the "threestar_score" field.</summary>
  public const int ThreestarScoreFieldNumber = 1;
  private uint threestarScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ThreestarScore {
    get { return threestarScore_; }
    set {
      threestarScore_ = value;
    }
  }

  /// <summary>Field number for the "doublestar_score" field.</summary>
  public const int DoublestarScoreFieldNumber = 2;
  private uint doublestarScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DoublestarScore {
    get { return doublestarScore_; }
    set {
      doublestarScore_ = value;
    }
  }

  /// <summary>Field number for the "pass_score" field.</summary>
  public const int PassScoreFieldNumber = 3;
  private uint passScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PassScore {
    get { return passScore_; }
    set {
      passScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Period_Finish_Condition);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Period_Finish_Condition other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ThreestarScore != other.ThreestarScore) return false;
    if (DoublestarScore != other.DoublestarScore) return false;
    if (PassScore != other.PassScore) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ThreestarScore != 0) hash ^= ThreestarScore.GetHashCode();
    if (DoublestarScore != 0) hash ^= DoublestarScore.GetHashCode();
    if (PassScore != 0) hash ^= PassScore.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ThreestarScore != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ThreestarScore);
    }
    if (DoublestarScore != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(DoublestarScore);
    }
    if (PassScore != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PassScore);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ThreestarScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ThreestarScore);
    }
    if (DoublestarScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DoublestarScore);
    }
    if (PassScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PassScore);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Period_Finish_Condition other) {
    if (other == null) {
      return;
    }
    if (other.ThreestarScore != 0) {
      ThreestarScore = other.ThreestarScore;
    }
    if (other.DoublestarScore != 0) {
      DoublestarScore = other.DoublestarScore;
    }
    if (other.PassScore != 0) {
      PassScore = other.PassScore;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ThreestarScore = input.ReadUInt32();
          break;
        }
        case 16: {
          DoublestarScore = input.ReadUInt32();
          break;
        }
        case 24: {
          PassScore = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Period_Info : pb::IMessage<Period_Info> {
  private static readonly pb::MessageParser<Period_Info> _parser = new pb::MessageParser<Period_Info>(() => new Period_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Period_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[183]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Info(Period_Info other) : this() {
    periodId_ = other.periodId_;
    periodName_ = other.periodName_;
    periodDescription_ = other.periodDescription_;
    periodItems_ = other.periodItems_.Clone();
    PeriodFinsishCon = other.periodFinsishCon_ != null ? other.PeriodFinsishCon.Clone() : null;
    periodItemDisplayList_ = other.periodItemDisplayList_.Clone();
    maxPeriodId_ = other.maxPeriodId_;
    unlockedUserCount_ = other.unlockedUserCount_;
    periodCompletedUserCount_ = other.periodCompletedUserCount_;
    periodTotalScore_ = other.periodTotalScore_;
    periodTotalStar_ = other.periodTotalStar_;
    periodAverageBase_ = other.periodAverageBase_;
    periodType_ = other.periodType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Period_Info Clone() {
    return new Period_Info(this);
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 1;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "period_name" field.</summary>
  public const int PeriodNameFieldNumber = 2;
  private string periodName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PeriodName {
    get { return periodName_; }
    set {
      periodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "period_description" field.</summary>
  public const int PeriodDescriptionFieldNumber = 3;
  private string periodDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PeriodDescription {
    get { return periodDescription_; }
    set {
      periodDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "period_items" field.</summary>
  public const int PeriodItemsFieldNumber = 4;
  private static readonly pbc::MapField<uint, global::Period_Item_Info>.Codec _map_periodItems_codec
      = new pbc::MapField<uint, global::Period_Item_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::Period_Item_Info.Parser), 34);
  private readonly pbc::MapField<uint, global::Period_Item_Info> periodItems_ = new pbc::MapField<uint, global::Period_Item_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::Period_Item_Info> PeriodItems {
    get { return periodItems_; }
  }

  /// <summary>Field number for the "period_finsish_con" field.</summary>
  public const int PeriodFinsishConFieldNumber = 5;
  private global::Period_Finish_Condition periodFinsishCon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Finish_Condition PeriodFinsishCon {
    get { return periodFinsishCon_; }
    set {
      periodFinsishCon_ = value;
    }
  }

  /// <summary>Field number for the "period_item_display_list" field.</summary>
  public const int PeriodItemDisplayListFieldNumber = 6;
  private static readonly pb::FieldCodec<uint> _repeated_periodItemDisplayList_codec
      = pb::FieldCodec.ForUInt32(50);
  private readonly pbc::RepeatedField<uint> periodItemDisplayList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> PeriodItemDisplayList {
    get { return periodItemDisplayList_; }
  }

  /// <summary>Field number for the "max_period_id" field.</summary>
  public const int MaxPeriodIdFieldNumber = 7;
  private uint maxPeriodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint MaxPeriodId {
    get { return maxPeriodId_; }
    set {
      maxPeriodId_ = value;
    }
  }

  /// <summary>Field number for the "unlocked_user_count" field.</summary>
  public const int UnlockedUserCountFieldNumber = 9;
  private uint unlockedUserCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UnlockedUserCount {
    get { return unlockedUserCount_; }
    set {
      unlockedUserCount_ = value;
    }
  }

  /// <summary>Field number for the "period_completed_user_count" field.</summary>
  public const int PeriodCompletedUserCountFieldNumber = 10;
  private uint periodCompletedUserCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodCompletedUserCount {
    get { return periodCompletedUserCount_; }
    set {
      periodCompletedUserCount_ = value;
    }
  }

  /// <summary>Field number for the "period_total_score" field.</summary>
  public const int PeriodTotalScoreFieldNumber = 11;
  private uint periodTotalScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodTotalScore {
    get { return periodTotalScore_; }
    set {
      periodTotalScore_ = value;
    }
  }

  /// <summary>Field number for the "period_total_star" field.</summary>
  public const int PeriodTotalStarFieldNumber = 12;
  private uint periodTotalStar_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodTotalStar {
    get { return periodTotalStar_; }
    set {
      periodTotalStar_ = value;
    }
  }

  /// <summary>Field number for the "period_average_base" field.</summary>
  public const int PeriodAverageBaseFieldNumber = 13;
  private uint periodAverageBase_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodAverageBase {
    get { return periodAverageBase_; }
    set {
      periodAverageBase_ = value;
    }
  }

  /// <summary>Field number for the "period_type" field.</summary>
  public const int PeriodTypeFieldNumber = 14;
  private uint periodType_;
  /// <summary>
  /// 0-default    1-gb_player
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodType {
    get { return periodType_; }
    set {
      periodType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Period_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Period_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PeriodId != other.PeriodId) return false;
    if (PeriodName != other.PeriodName) return false;
    if (PeriodDescription != other.PeriodDescription) return false;
    if (!PeriodItems.Equals(other.PeriodItems)) return false;
    if (!object.Equals(PeriodFinsishCon, other.PeriodFinsishCon)) return false;
    if(!periodItemDisplayList_.Equals(other.periodItemDisplayList_)) return false;
    if (MaxPeriodId != other.MaxPeriodId) return false;
    if (UnlockedUserCount != other.UnlockedUserCount) return false;
    if (PeriodCompletedUserCount != other.PeriodCompletedUserCount) return false;
    if (PeriodTotalScore != other.PeriodTotalScore) return false;
    if (PeriodTotalStar != other.PeriodTotalStar) return false;
    if (PeriodAverageBase != other.PeriodAverageBase) return false;
    if (PeriodType != other.PeriodType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PeriodName.Length != 0) hash ^= PeriodName.GetHashCode();
    if (PeriodDescription.Length != 0) hash ^= PeriodDescription.GetHashCode();
    hash ^= PeriodItems.GetHashCode();
    if (periodFinsishCon_ != null) hash ^= PeriodFinsishCon.GetHashCode();
    hash ^= periodItemDisplayList_.GetHashCode();
    if (MaxPeriodId != 0) hash ^= MaxPeriodId.GetHashCode();
    if (UnlockedUserCount != 0) hash ^= UnlockedUserCount.GetHashCode();
    if (PeriodCompletedUserCount != 0) hash ^= PeriodCompletedUserCount.GetHashCode();
    if (PeriodTotalScore != 0) hash ^= PeriodTotalScore.GetHashCode();
    if (PeriodTotalStar != 0) hash ^= PeriodTotalStar.GetHashCode();
    if (PeriodAverageBase != 0) hash ^= PeriodAverageBase.GetHashCode();
    if (PeriodType != 0) hash ^= PeriodType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PeriodId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PeriodId);
    }
    if (PeriodName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PeriodName);
    }
    if (PeriodDescription.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(PeriodDescription);
    }
    periodItems_.WriteTo(output, _map_periodItems_codec);
    if (periodFinsishCon_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(PeriodFinsishCon);
    }
    periodItemDisplayList_.WriteTo(output, _repeated_periodItemDisplayList_codec);
    if (MaxPeriodId != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(MaxPeriodId);
    }
    if (UnlockedUserCount != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(UnlockedUserCount);
    }
    if (PeriodCompletedUserCount != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(PeriodCompletedUserCount);
    }
    if (PeriodTotalScore != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(PeriodTotalScore);
    }
    if (PeriodTotalStar != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(PeriodTotalStar);
    }
    if (PeriodAverageBase != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(PeriodAverageBase);
    }
    if (PeriodType != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(PeriodType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PeriodName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PeriodName);
    }
    if (PeriodDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PeriodDescription);
    }
    size += periodItems_.CalculateSize(_map_periodItems_codec);
    if (periodFinsishCon_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodFinsishCon);
    }
    size += periodItemDisplayList_.CalculateSize(_repeated_periodItemDisplayList_codec);
    if (MaxPeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPeriodId);
    }
    if (UnlockedUserCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnlockedUserCount);
    }
    if (PeriodCompletedUserCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodCompletedUserCount);
    }
    if (PeriodTotalScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodTotalScore);
    }
    if (PeriodTotalStar != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodTotalStar);
    }
    if (PeriodAverageBase != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodAverageBase);
    }
    if (PeriodType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Period_Info other) {
    if (other == null) {
      return;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PeriodName.Length != 0) {
      PeriodName = other.PeriodName;
    }
    if (other.PeriodDescription.Length != 0) {
      PeriodDescription = other.PeriodDescription;
    }
    periodItems_.Add(other.periodItems_);
    if (other.periodFinsishCon_ != null) {
      if (periodFinsishCon_ == null) {
        periodFinsishCon_ = new global::Period_Finish_Condition();
      }
      PeriodFinsishCon.MergeFrom(other.PeriodFinsishCon);
    }
    periodItemDisplayList_.Add(other.periodItemDisplayList_);
    if (other.MaxPeriodId != 0) {
      MaxPeriodId = other.MaxPeriodId;
    }
    if (other.UnlockedUserCount != 0) {
      UnlockedUserCount = other.UnlockedUserCount;
    }
    if (other.PeriodCompletedUserCount != 0) {
      PeriodCompletedUserCount = other.PeriodCompletedUserCount;
    }
    if (other.PeriodTotalScore != 0) {
      PeriodTotalScore = other.PeriodTotalScore;
    }
    if (other.PeriodTotalStar != 0) {
      PeriodTotalStar = other.PeriodTotalStar;
    }
    if (other.PeriodAverageBase != 0) {
      PeriodAverageBase = other.PeriodAverageBase;
    }
    if (other.PeriodType != 0) {
      PeriodType = other.PeriodType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 18: {
          PeriodName = input.ReadString();
          break;
        }
        case 26: {
          PeriodDescription = input.ReadString();
          break;
        }
        case 34: {
          periodItems_.AddEntriesFrom(input, _map_periodItems_codec);
          break;
        }
        case 42: {
          if (periodFinsishCon_ == null) {
            periodFinsishCon_ = new global::Period_Finish_Condition();
          }
          input.ReadMessage(periodFinsishCon_);
          break;
        }
        case 50:
        case 48: {
          periodItemDisplayList_.AddEntriesFrom(input, _repeated_periodItemDisplayList_codec);
          break;
        }
        case 56: {
          MaxPeriodId = input.ReadUInt32();
          break;
        }
        case 72: {
          UnlockedUserCount = input.ReadUInt32();
          break;
        }
        case 80: {
          PeriodCompletedUserCount = input.ReadUInt32();
          break;
        }
        case 88: {
          PeriodTotalScore = input.ReadUInt32();
          break;
        }
        case 96: {
          PeriodTotalStar = input.ReadUInt32();
          break;
        }
        case 104: {
          PeriodAverageBase = input.ReadUInt32();
          break;
        }
        case 112: {
          PeriodType = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Course_Info : pb::IMessage<Course_Info> {
  private static readonly pb::MessageParser<Course_Info> _parser = new pb::MessageParser<Course_Info>(() => new Course_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Course_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[184]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Course_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Course_Info(Course_Info other) : this() {
    courseId_ = other.courseId_;
    courseStatus_ = other.courseStatus_;
    courseIcon_ = other.courseIcon_;
    courseName_ = other.courseName_;
    courseDescription_ = other.courseDescription_;
    courseCreaterUserid_ = other.courseCreaterUserid_;
    courseCreaterNickname_ = other.courseCreaterNickname_;
    passScore_ = other.passScore_;
    jsonCfg_ = other.jsonCfg_;
    periodList_ = other.periodList_.Clone();
    coursePrice_ = other.coursePrice_;
    coursePublishTime_ = other.coursePublishTime_;
    courseCoverImageUrl_ = other.courseCoverImageUrl_;
    periodDisplayList_ = other.periodDisplayList_.Clone();
    courseAttendUserCount_ = other.courseAttendUserCount_;
    courseType_ = other.courseType_;
    courseStartTime_ = other.courseStartTime_;
    courseEndTime_ = other.courseEndTime_;
    CourseHonorSetting = other.courseHonorSetting_ != null ? other.CourseHonorSetting.Clone() : null;
    courseProjectLanguageType_ = other.courseProjectLanguageType_;
    courseUpdateTime_ = other.courseUpdateTime_;
    courseAllowDownloadGb_ = other.courseAllowDownloadGb_;
    courseGbType_ = other.courseGbType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Course_Info Clone() {
    return new Course_Info(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_status" field.</summary>
  public const int CourseStatusFieldNumber = 2;
  private global::Course_Status courseStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Status CourseStatus {
    get { return courseStatus_; }
    set {
      courseStatus_ = value;
    }
  }

  /// <summary>Field number for the "course_icon" field.</summary>
  public const int CourseIconFieldNumber = 3;
  private uint courseIcon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseIcon {
    get { return courseIcon_; }
    set {
      courseIcon_ = value;
    }
  }

  /// <summary>Field number for the "course_name" field.</summary>
  public const int CourseNameFieldNumber = 4;
  private string courseName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CourseName {
    get { return courseName_; }
    set {
      courseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "course_description" field.</summary>
  public const int CourseDescriptionFieldNumber = 5;
  private string courseDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CourseDescription {
    get { return courseDescription_; }
    set {
      courseDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "course_creater_userid" field.</summary>
  public const int CourseCreaterUseridFieldNumber = 6;
  private uint courseCreaterUserid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseCreaterUserid {
    get { return courseCreaterUserid_; }
    set {
      courseCreaterUserid_ = value;
    }
  }

  /// <summary>Field number for the "course_creater_nickname" field.</summary>
  public const int CourseCreaterNicknameFieldNumber = 7;
  private string courseCreaterNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CourseCreaterNickname {
    get { return courseCreaterNickname_; }
    set {
      courseCreaterNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "pass_score" field.</summary>
  public const int PassScoreFieldNumber = 8;
  private int passScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PassScore {
    get { return passScore_; }
    set {
      passScore_ = value;
    }
  }

  /// <summary>Field number for the "json_cfg" field.</summary>
  public const int JsonCfgFieldNumber = 9;
  private string jsonCfg_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonCfg {
    get { return jsonCfg_; }
    set {
      jsonCfg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "period_list" field.</summary>
  public const int PeriodListFieldNumber = 10;
  private static readonly pbc::MapField<uint, global::Period_Info>.Codec _map_periodList_codec
      = new pbc::MapField<uint, global::Period_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::Period_Info.Parser), 82);
  private readonly pbc::MapField<uint, global::Period_Info> periodList_ = new pbc::MapField<uint, global::Period_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::Period_Info> PeriodList {
    get { return periodList_; }
  }

  /// <summary>Field number for the "course_price" field.</summary>
  public const int CoursePriceFieldNumber = 11;
  private uint coursePrice_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CoursePrice {
    get { return coursePrice_; }
    set {
      coursePrice_ = value;
    }
  }

  /// <summary>Field number for the "course_publish_time" field.</summary>
  public const int CoursePublishTimeFieldNumber = 12;
  private ulong coursePublishTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong CoursePublishTime {
    get { return coursePublishTime_; }
    set {
      coursePublishTime_ = value;
    }
  }

  /// <summary>Field number for the "course_cover_image_url" field.</summary>
  public const int CourseCoverImageUrlFieldNumber = 13;
  private string courseCoverImageUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CourseCoverImageUrl {
    get { return courseCoverImageUrl_; }
    set {
      courseCoverImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "period_display_list" field.</summary>
  public const int PeriodDisplayListFieldNumber = 14;
  private static readonly pb::FieldCodec<uint> _repeated_periodDisplayList_codec
      = pb::FieldCodec.ForUInt32(114);
  private readonly pbc::RepeatedField<uint> periodDisplayList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> PeriodDisplayList {
    get { return periodDisplayList_; }
  }

  /// <summary>Field number for the "course_attend_user_count" field.</summary>
  public const int CourseAttendUserCountFieldNumber = 16;
  private uint courseAttendUserCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseAttendUserCount {
    get { return courseAttendUserCount_; }
    set {
      courseAttendUserCount_ = value;
    }
  }

  /// <summary>Field number for the "course_type" field.</summary>
  public const int CourseTypeFieldNumber = 17;
  private global::Course_type courseType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_type CourseType {
    get { return courseType_; }
    set {
      courseType_ = value;
    }
  }

  /// <summary>Field number for the "course_start_time" field.</summary>
  public const int CourseStartTimeFieldNumber = 18;
  private ulong courseStartTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong CourseStartTime {
    get { return courseStartTime_; }
    set {
      courseStartTime_ = value;
    }
  }

  /// <summary>Field number for the "course_end_time" field.</summary>
  public const int CourseEndTimeFieldNumber = 19;
  private ulong courseEndTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong CourseEndTime {
    get { return courseEndTime_; }
    set {
      courseEndTime_ = value;
    }
  }

  /// <summary>Field number for the "course_honor_setting" field.</summary>
  public const int CourseHonorSettingFieldNumber = 20;
  private global::Course_Honor_Setting courseHonorSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Honor_Setting CourseHonorSetting {
    get { return courseHonorSetting_; }
    set {
      courseHonorSetting_ = value;
    }
  }

  /// <summary>Field number for the "course_project_language_type" field.</summary>
  public const int CourseProjectLanguageTypeFieldNumber = 21;
  private global::Project_Language_Type courseProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type CourseProjectLanguageType {
    get { return courseProjectLanguageType_; }
    set {
      courseProjectLanguageType_ = value;
    }
  }

  /// <summary>Field number for the "course_update_time" field.</summary>
  public const int CourseUpdateTimeFieldNumber = 22;
  private ulong courseUpdateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong CourseUpdateTime {
    get { return courseUpdateTime_; }
    set {
      courseUpdateTime_ = value;
    }
  }

  /// <summary>Field number for the "course_allow_download_gb" field.</summary>
  public const int CourseAllowDownloadGbFieldNumber = 23;
  private bool courseAllowDownloadGb_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CourseAllowDownloadGb {
    get { return courseAllowDownloadGb_; }
    set {
      courseAllowDownloadGb_ = value;
    }
  }

  /// <summary>Field number for the "course_gb_type" field.</summary>
  public const int CourseGbTypeFieldNumber = 24;
  private uint courseGbType_;
  /// <summary>
  /// 0-default    1-gb_player
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseGbType {
    get { return courseGbType_; }
    set {
      courseGbType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Course_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Course_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CourseStatus != other.CourseStatus) return false;
    if (CourseIcon != other.CourseIcon) return false;
    if (CourseName != other.CourseName) return false;
    if (CourseDescription != other.CourseDescription) return false;
    if (CourseCreaterUserid != other.CourseCreaterUserid) return false;
    if (CourseCreaterNickname != other.CourseCreaterNickname) return false;
    if (PassScore != other.PassScore) return false;
    if (JsonCfg != other.JsonCfg) return false;
    if (!PeriodList.Equals(other.PeriodList)) return false;
    if (CoursePrice != other.CoursePrice) return false;
    if (CoursePublishTime != other.CoursePublishTime) return false;
    if (CourseCoverImageUrl != other.CourseCoverImageUrl) return false;
    if(!periodDisplayList_.Equals(other.periodDisplayList_)) return false;
    if (CourseAttendUserCount != other.CourseAttendUserCount) return false;
    if (CourseType != other.CourseType) return false;
    if (CourseStartTime != other.CourseStartTime) return false;
    if (CourseEndTime != other.CourseEndTime) return false;
    if (!object.Equals(CourseHonorSetting, other.CourseHonorSetting)) return false;
    if (CourseProjectLanguageType != other.CourseProjectLanguageType) return false;
    if (CourseUpdateTime != other.CourseUpdateTime) return false;
    if (CourseAllowDownloadGb != other.CourseAllowDownloadGb) return false;
    if (CourseGbType != other.CourseGbType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CourseStatus != 0) hash ^= CourseStatus.GetHashCode();
    if (CourseIcon != 0) hash ^= CourseIcon.GetHashCode();
    if (CourseName.Length != 0) hash ^= CourseName.GetHashCode();
    if (CourseDescription.Length != 0) hash ^= CourseDescription.GetHashCode();
    if (CourseCreaterUserid != 0) hash ^= CourseCreaterUserid.GetHashCode();
    if (CourseCreaterNickname.Length != 0) hash ^= CourseCreaterNickname.GetHashCode();
    if (PassScore != 0) hash ^= PassScore.GetHashCode();
    if (JsonCfg.Length != 0) hash ^= JsonCfg.GetHashCode();
    hash ^= PeriodList.GetHashCode();
    if (CoursePrice != 0) hash ^= CoursePrice.GetHashCode();
    if (CoursePublishTime != 0UL) hash ^= CoursePublishTime.GetHashCode();
    if (CourseCoverImageUrl.Length != 0) hash ^= CourseCoverImageUrl.GetHashCode();
    hash ^= periodDisplayList_.GetHashCode();
    if (CourseAttendUserCount != 0) hash ^= CourseAttendUserCount.GetHashCode();
    if (CourseType != 0) hash ^= CourseType.GetHashCode();
    if (CourseStartTime != 0UL) hash ^= CourseStartTime.GetHashCode();
    if (CourseEndTime != 0UL) hash ^= CourseEndTime.GetHashCode();
    if (courseHonorSetting_ != null) hash ^= CourseHonorSetting.GetHashCode();
    if (CourseProjectLanguageType != 0) hash ^= CourseProjectLanguageType.GetHashCode();
    if (CourseUpdateTime != 0UL) hash ^= CourseUpdateTime.GetHashCode();
    if (CourseAllowDownloadGb != false) hash ^= CourseAllowDownloadGb.GetHashCode();
    if (CourseGbType != 0) hash ^= CourseGbType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CourseStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CourseStatus);
    }
    if (CourseIcon != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(CourseIcon);
    }
    if (CourseName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(CourseName);
    }
    if (CourseDescription.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(CourseDescription);
    }
    if (CourseCreaterUserid != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(CourseCreaterUserid);
    }
    if (CourseCreaterNickname.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(CourseCreaterNickname);
    }
    if (PassScore != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(PassScore);
    }
    if (JsonCfg.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(JsonCfg);
    }
    periodList_.WriteTo(output, _map_periodList_codec);
    if (CoursePrice != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(CoursePrice);
    }
    if (CoursePublishTime != 0UL) {
      output.WriteRawTag(96);
      output.WriteUInt64(CoursePublishTime);
    }
    if (CourseCoverImageUrl.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(CourseCoverImageUrl);
    }
    periodDisplayList_.WriteTo(output, _repeated_periodDisplayList_codec);
    if (CourseAttendUserCount != 0) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(CourseAttendUserCount);
    }
    if (CourseType != 0) {
      output.WriteRawTag(136, 1);
      output.WriteEnum((int) CourseType);
    }
    if (CourseStartTime != 0UL) {
      output.WriteRawTag(144, 1);
      output.WriteUInt64(CourseStartTime);
    }
    if (CourseEndTime != 0UL) {
      output.WriteRawTag(152, 1);
      output.WriteUInt64(CourseEndTime);
    }
    if (courseHonorSetting_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(CourseHonorSetting);
    }
    if (CourseProjectLanguageType != 0) {
      output.WriteRawTag(168, 1);
      output.WriteEnum((int) CourseProjectLanguageType);
    }
    if (CourseUpdateTime != 0UL) {
      output.WriteRawTag(176, 1);
      output.WriteUInt64(CourseUpdateTime);
    }
    if (CourseAllowDownloadGb != false) {
      output.WriteRawTag(184, 1);
      output.WriteBool(CourseAllowDownloadGb);
    }
    if (CourseGbType != 0) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(CourseGbType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CourseStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseStatus);
    }
    if (CourseIcon != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseIcon);
    }
    if (CourseName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CourseName);
    }
    if (CourseDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CourseDescription);
    }
    if (CourseCreaterUserid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseCreaterUserid);
    }
    if (CourseCreaterNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CourseCreaterNickname);
    }
    if (PassScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PassScore);
    }
    if (JsonCfg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonCfg);
    }
    size += periodList_.CalculateSize(_map_periodList_codec);
    if (CoursePrice != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CoursePrice);
    }
    if (CoursePublishTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CoursePublishTime);
    }
    if (CourseCoverImageUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CourseCoverImageUrl);
    }
    size += periodDisplayList_.CalculateSize(_repeated_periodDisplayList_codec);
    if (CourseAttendUserCount != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CourseAttendUserCount);
    }
    if (CourseType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CourseType);
    }
    if (CourseStartTime != 0UL) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CourseStartTime);
    }
    if (CourseEndTime != 0UL) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CourseEndTime);
    }
    if (courseHonorSetting_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(CourseHonorSetting);
    }
    if (CourseProjectLanguageType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CourseProjectLanguageType);
    }
    if (CourseUpdateTime != 0UL) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CourseUpdateTime);
    }
    if (CourseAllowDownloadGb != false) {
      size += 2 + 1;
    }
    if (CourseGbType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CourseGbType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Course_Info other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CourseStatus != 0) {
      CourseStatus = other.CourseStatus;
    }
    if (other.CourseIcon != 0) {
      CourseIcon = other.CourseIcon;
    }
    if (other.CourseName.Length != 0) {
      CourseName = other.CourseName;
    }
    if (other.CourseDescription.Length != 0) {
      CourseDescription = other.CourseDescription;
    }
    if (other.CourseCreaterUserid != 0) {
      CourseCreaterUserid = other.CourseCreaterUserid;
    }
    if (other.CourseCreaterNickname.Length != 0) {
      CourseCreaterNickname = other.CourseCreaterNickname;
    }
    if (other.PassScore != 0) {
      PassScore = other.PassScore;
    }
    if (other.JsonCfg.Length != 0) {
      JsonCfg = other.JsonCfg;
    }
    periodList_.Add(other.periodList_);
    if (other.CoursePrice != 0) {
      CoursePrice = other.CoursePrice;
    }
    if (other.CoursePublishTime != 0UL) {
      CoursePublishTime = other.CoursePublishTime;
    }
    if (other.CourseCoverImageUrl.Length != 0) {
      CourseCoverImageUrl = other.CourseCoverImageUrl;
    }
    periodDisplayList_.Add(other.periodDisplayList_);
    if (other.CourseAttendUserCount != 0) {
      CourseAttendUserCount = other.CourseAttendUserCount;
    }
    if (other.CourseType != 0) {
      CourseType = other.CourseType;
    }
    if (other.CourseStartTime != 0UL) {
      CourseStartTime = other.CourseStartTime;
    }
    if (other.CourseEndTime != 0UL) {
      CourseEndTime = other.CourseEndTime;
    }
    if (other.courseHonorSetting_ != null) {
      if (courseHonorSetting_ == null) {
        courseHonorSetting_ = new global::Course_Honor_Setting();
      }
      CourseHonorSetting.MergeFrom(other.CourseHonorSetting);
    }
    if (other.CourseProjectLanguageType != 0) {
      CourseProjectLanguageType = other.CourseProjectLanguageType;
    }
    if (other.CourseUpdateTime != 0UL) {
      CourseUpdateTime = other.CourseUpdateTime;
    }
    if (other.CourseAllowDownloadGb != false) {
      CourseAllowDownloadGb = other.CourseAllowDownloadGb;
    }
    if (other.CourseGbType != 0) {
      CourseGbType = other.CourseGbType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          courseStatus_ = (global::Course_Status) input.ReadEnum();
          break;
        }
        case 24: {
          CourseIcon = input.ReadUInt32();
          break;
        }
        case 34: {
          CourseName = input.ReadString();
          break;
        }
        case 42: {
          CourseDescription = input.ReadString();
          break;
        }
        case 48: {
          CourseCreaterUserid = input.ReadUInt32();
          break;
        }
        case 58: {
          CourseCreaterNickname = input.ReadString();
          break;
        }
        case 64: {
          PassScore = input.ReadInt32();
          break;
        }
        case 74: {
          JsonCfg = input.ReadString();
          break;
        }
        case 82: {
          periodList_.AddEntriesFrom(input, _map_periodList_codec);
          break;
        }
        case 88: {
          CoursePrice = input.ReadUInt32();
          break;
        }
        case 96: {
          CoursePublishTime = input.ReadUInt64();
          break;
        }
        case 106: {
          CourseCoverImageUrl = input.ReadString();
          break;
        }
        case 114:
        case 112: {
          periodDisplayList_.AddEntriesFrom(input, _repeated_periodDisplayList_codec);
          break;
        }
        case 128: {
          CourseAttendUserCount = input.ReadUInt32();
          break;
        }
        case 136: {
          courseType_ = (global::Course_type) input.ReadEnum();
          break;
        }
        case 144: {
          CourseStartTime = input.ReadUInt64();
          break;
        }
        case 152: {
          CourseEndTime = input.ReadUInt64();
          break;
        }
        case 162: {
          if (courseHonorSetting_ == null) {
            courseHonorSetting_ = new global::Course_Honor_Setting();
          }
          input.ReadMessage(courseHonorSetting_);
          break;
        }
        case 168: {
          courseProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
        case 176: {
          CourseUpdateTime = input.ReadUInt64();
          break;
        }
        case 184: {
          CourseAllowDownloadGb = input.ReadBool();
          break;
        }
        case 192: {
          CourseGbType = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_course_r			= 701;
/// </summary>
public sealed partial class CMD_Create_Course_r_Parameters : pb::IMessage<CMD_Create_Course_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Course_r_Parameters> _parser = new pb::MessageParser<CMD_Create_Course_r_Parameters>(() => new CMD_Create_Course_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Course_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[185]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Course_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Course_r_Parameters(CMD_Create_Course_r_Parameters other) : this() {
    CreateInfo = other.createInfo_ != null ? other.CreateInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Course_r_Parameters Clone() {
    return new CMD_Create_Course_r_Parameters(this);
  }

  /// <summary>Field number for the "create_info" field.</summary>
  public const int CreateInfoFieldNumber = 1;
  private global::Course_Info createInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Info CreateInfo {
    get { return createInfo_; }
    set {
      createInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Course_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Course_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CreateInfo, other.CreateInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (createInfo_ != null) hash ^= CreateInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (createInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CreateInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (createInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Course_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.createInfo_ != null) {
      if (createInfo_ == null) {
        createInfo_ = new global::Course_Info();
      }
      CreateInfo.MergeFrom(other.CreateInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (createInfo_ == null) {
            createInfo_ = new global::Course_Info();
          }
          input.ReadMessage(createInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_course_a			= 702;
/// </summary>
public sealed partial class CMD_Create_Course_a_Parameters : pb::IMessage<CMD_Create_Course_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Course_a_Parameters> _parser = new pb::MessageParser<CMD_Create_Course_a_Parameters>(() => new CMD_Create_Course_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Course_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[186]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Course_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Course_a_Parameters(CMD_Create_Course_a_Parameters other) : this() {
    CourseInfo = other.courseInfo_ != null ? other.CourseInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Course_a_Parameters Clone() {
    return new CMD_Create_Course_a_Parameters(this);
  }

  /// <summary>Field number for the "course_info" field.</summary>
  public const int CourseInfoFieldNumber = 1;
  private global::Course_Info courseInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Info CourseInfo {
    get { return courseInfo_; }
    set {
      courseInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Course_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Course_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CourseInfo, other.CourseInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (courseInfo_ != null) hash ^= CourseInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (courseInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CourseInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (courseInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Course_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.courseInfo_ != null) {
      if (courseInfo_ == null) {
        courseInfo_ = new global::Course_Info();
      }
      CourseInfo.MergeFrom(other.CourseInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (courseInfo_ == null) {
            courseInfo_ = new global::Course_Info();
          }
          input.ReadMessage(courseInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_course_r			= 703;
/// </summary>
public sealed partial class CMD_Modify_Course_r_Parameters : pb::IMessage<CMD_Modify_Course_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Course_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Course_r_Parameters>(() => new CMD_Modify_Course_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Course_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[187]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Course_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Course_r_Parameters(CMD_Modify_Course_r_Parameters other) : this() {
    ModifyInfo = other.modifyInfo_ != null ? other.ModifyInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Course_r_Parameters Clone() {
    return new CMD_Modify_Course_r_Parameters(this);
  }

  /// <summary>Field number for the "modify_info" field.</summary>
  public const int ModifyInfoFieldNumber = 1;
  private global::Course_Info modifyInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Info ModifyInfo {
    get { return modifyInfo_; }
    set {
      modifyInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Course_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Course_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ModifyInfo, other.ModifyInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (modifyInfo_ != null) hash ^= ModifyInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (modifyInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ModifyInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (modifyInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModifyInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Course_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.modifyInfo_ != null) {
      if (modifyInfo_ == null) {
        modifyInfo_ = new global::Course_Info();
      }
      ModifyInfo.MergeFrom(other.ModifyInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (modifyInfo_ == null) {
            modifyInfo_ = new global::Course_Info();
          }
          input.ReadMessage(modifyInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_course_a			= 704;
/// </summary>
public sealed partial class CMD_Modify_Course_a_Parameters : pb::IMessage<CMD_Modify_Course_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Course_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Course_a_Parameters>(() => new CMD_Modify_Course_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Course_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[188]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Course_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Course_a_Parameters(CMD_Modify_Course_a_Parameters other) : this() {
    CourseInfo = other.courseInfo_ != null ? other.CourseInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Course_a_Parameters Clone() {
    return new CMD_Modify_Course_a_Parameters(this);
  }

  /// <summary>Field number for the "course_info" field.</summary>
  public const int CourseInfoFieldNumber = 1;
  private global::Course_Info courseInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Info CourseInfo {
    get { return courseInfo_; }
    set {
      courseInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Course_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Course_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CourseInfo, other.CourseInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (courseInfo_ != null) hash ^= CourseInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (courseInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CourseInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (courseInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Course_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.courseInfo_ != null) {
      if (courseInfo_ == null) {
        courseInfo_ = new global::Course_Info();
      }
      CourseInfo.MergeFrom(other.CourseInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (courseInfo_ == null) {
            courseInfo_ = new global::Course_Info();
          }
          input.ReadMessage(courseInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_course_r			= 705;
/// </summary>
public sealed partial class CMD_Del_Course_r_Parameters : pb::IMessage<CMD_Del_Course_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Course_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Course_r_Parameters>(() => new CMD_Del_Course_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Course_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[189]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_r_Parameters(CMD_Del_Course_r_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_r_Parameters Clone() {
    return new CMD_Del_Course_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Course_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Course_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Course_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_course_a			= 706;
/// </summary>
public sealed partial class CMD_Del_Course_a_Parameters : pb::IMessage<CMD_Del_Course_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Course_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Course_a_Parameters>(() => new CMD_Del_Course_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Course_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[190]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_a_Parameters(CMD_Del_Course_a_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_a_Parameters Clone() {
    return new CMD_Del_Course_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Course_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Course_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Course_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_course_list_r		= 707;
/// </summary>
public sealed partial class CMD_Get_Course_List_r_Parameters : pb::IMessage<CMD_Get_Course_List_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Course_List_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Course_List_r_Parameters>(() => new CMD_Get_Course_List_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Course_List_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[191]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_List_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_List_r_Parameters(CMD_Get_Course_List_r_Parameters other) : this() {
    reqType_ = other.reqType_;
    reqName_ = other.reqName_;
    reqCourseType_ = other.reqCourseType_;
    reqProjectLanguageType_ = other.reqProjectLanguageType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_List_r_Parameters Clone() {
    return new CMD_Get_Course_List_r_Parameters(this);
  }

  /// <summary>Field number for the "req_type" field.</summary>
  public const int ReqTypeFieldNumber = 1;
  private global::GetCourseListType reqType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCourseListType ReqType {
    get { return reqType_; }
    set {
      reqType_ = value;
    }
  }

  /// <summary>Field number for the "req_name" field.</summary>
  public const int ReqNameFieldNumber = 2;
  private string reqName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqName {
    get { return reqName_; }
    set {
      reqName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "req_course_type" field.</summary>
  public const int ReqCourseTypeFieldNumber = 3;
  private global::Course_type reqCourseType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_type ReqCourseType {
    get { return reqCourseType_; }
    set {
      reqCourseType_ = value;
    }
  }

  /// <summary>Field number for the "req_project_language_type" field.</summary>
  public const int ReqProjectLanguageTypeFieldNumber = 4;
  private global::Project_Language_Type reqProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type ReqProjectLanguageType {
    get { return reqProjectLanguageType_; }
    set {
      reqProjectLanguageType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Course_List_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Course_List_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqType != other.ReqType) return false;
    if (ReqName != other.ReqName) return false;
    if (ReqCourseType != other.ReqCourseType) return false;
    if (ReqProjectLanguageType != other.ReqProjectLanguageType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqType != 0) hash ^= ReqType.GetHashCode();
    if (ReqName.Length != 0) hash ^= ReqName.GetHashCode();
    if (ReqCourseType != 0) hash ^= ReqCourseType.GetHashCode();
    if (ReqProjectLanguageType != 0) hash ^= ReqProjectLanguageType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ReqType);
    }
    if (ReqName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ReqName);
    }
    if (ReqCourseType != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) ReqCourseType);
    }
    if (ReqProjectLanguageType != 0) {
      output.WriteRawTag(32);
      output.WriteEnum((int) ReqProjectLanguageType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqType);
    }
    if (ReqName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqName);
    }
    if (ReqCourseType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqCourseType);
    }
    if (ReqProjectLanguageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqProjectLanguageType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Course_List_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqType != 0) {
      ReqType = other.ReqType;
    }
    if (other.ReqName.Length != 0) {
      ReqName = other.ReqName;
    }
    if (other.ReqCourseType != 0) {
      ReqCourseType = other.ReqCourseType;
    }
    if (other.ReqProjectLanguageType != 0) {
      ReqProjectLanguageType = other.ReqProjectLanguageType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          reqType_ = (global::GetCourseListType) input.ReadEnum();
          break;
        }
        case 18: {
          ReqName = input.ReadString();
          break;
        }
        case 24: {
          reqCourseType_ = (global::Course_type) input.ReadEnum();
          break;
        }
        case 32: {
          reqProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_course_list_a		= 708;
/// </summary>
public sealed partial class CMD_Get_Course_List_a_Parameters : pb::IMessage<CMD_Get_Course_List_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Course_List_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Course_List_a_Parameters>(() => new CMD_Get_Course_List_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Course_List_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[192]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_List_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_List_a_Parameters(CMD_Get_Course_List_a_Parameters other) : this() {
    couseList_ = other.couseList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_List_a_Parameters Clone() {
    return new CMD_Get_Course_List_a_Parameters(this);
  }

  /// <summary>Field number for the "couse_list" field.</summary>
  public const int CouseListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Course_Info> _repeated_couseList_codec
      = pb::FieldCodec.ForMessage(10, global::Course_Info.Parser);
  private readonly pbc::RepeatedField<global::Course_Info> couseList_ = new pbc::RepeatedField<global::Course_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Course_Info> CouseList {
    get { return couseList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Course_List_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Course_List_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!couseList_.Equals(other.couseList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= couseList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    couseList_.WriteTo(output, _repeated_couseList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += couseList_.CalculateSize(_repeated_couseList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Course_List_a_Parameters other) {
    if (other == null) {
      return;
    }
    couseList_.Add(other.couseList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          couseList_.AddEntriesFrom(input, _repeated_couseList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_period_r			= 709;
/// </summary>
public sealed partial class CMD_Add_Period_r_Parameters : pb::IMessage<CMD_Add_Period_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Period_r_Parameters> _parser = new pb::MessageParser<CMD_Add_Period_r_Parameters>(() => new CMD_Add_Period_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Period_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[193]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Period_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Period_r_Parameters(CMD_Add_Period_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    PeriodInfo = other.periodInfo_ != null ? other.PeriodInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Period_r_Parameters Clone() {
    return new CMD_Add_Period_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_info" field.</summary>
  public const int PeriodInfoFieldNumber = 2;
  private global::Period_Info periodInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Info PeriodInfo {
    get { return periodInfo_; }
    set {
      periodInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Period_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Period_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (!object.Equals(PeriodInfo, other.PeriodInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (periodInfo_ != null) hash ^= PeriodInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (periodInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PeriodInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (periodInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Period_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.periodInfo_ != null) {
      if (periodInfo_ == null) {
        periodInfo_ = new global::Period_Info();
      }
      PeriodInfo.MergeFrom(other.PeriodInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (periodInfo_ == null) {
            periodInfo_ = new global::Period_Info();
          }
          input.ReadMessage(periodInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_period_a			= 710;
/// </summary>
public sealed partial class CMD_Add_Period_a_Parameters : pb::IMessage<CMD_Add_Period_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Period_a_Parameters> _parser = new pb::MessageParser<CMD_Add_Period_a_Parameters>(() => new CMD_Add_Period_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Period_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[194]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Period_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Period_a_Parameters(CMD_Add_Period_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    PeriodInfo = other.periodInfo_ != null ? other.PeriodInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Period_a_Parameters Clone() {
    return new CMD_Add_Period_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_info" field.</summary>
  public const int PeriodInfoFieldNumber = 2;
  private global::Period_Info periodInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Info PeriodInfo {
    get { return periodInfo_; }
    set {
      periodInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Period_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Period_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (!object.Equals(PeriodInfo, other.PeriodInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (periodInfo_ != null) hash ^= PeriodInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (periodInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PeriodInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (periodInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Period_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.periodInfo_ != null) {
      if (periodInfo_ == null) {
        periodInfo_ = new global::Period_Info();
      }
      PeriodInfo.MergeFrom(other.PeriodInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (periodInfo_ == null) {
            periodInfo_ = new global::Period_Info();
          }
          input.ReadMessage(periodInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_period_r			= 711;
/// </summary>
public sealed partial class CMD_Modify_Period_r_Parameters : pb::IMessage<CMD_Modify_Period_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Period_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Period_r_Parameters>(() => new CMD_Modify_Period_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Period_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[195]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Period_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Period_r_Parameters(CMD_Modify_Period_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    PeriodInfo = other.periodInfo_ != null ? other.PeriodInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Period_r_Parameters Clone() {
    return new CMD_Modify_Period_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_info" field.</summary>
  public const int PeriodInfoFieldNumber = 2;
  private global::Period_Info periodInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Info PeriodInfo {
    get { return periodInfo_; }
    set {
      periodInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Period_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Period_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (!object.Equals(PeriodInfo, other.PeriodInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (periodInfo_ != null) hash ^= PeriodInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (periodInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PeriodInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (periodInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Period_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.periodInfo_ != null) {
      if (periodInfo_ == null) {
        periodInfo_ = new global::Period_Info();
      }
      PeriodInfo.MergeFrom(other.PeriodInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (periodInfo_ == null) {
            periodInfo_ = new global::Period_Info();
          }
          input.ReadMessage(periodInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_period_a			= 712;
/// </summary>
public sealed partial class CMD_Modify_Period_a_Parameters : pb::IMessage<CMD_Modify_Period_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Period_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Period_a_Parameters>(() => new CMD_Modify_Period_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Period_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[196]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Period_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Period_a_Parameters(CMD_Modify_Period_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    PeriodInfo = other.periodInfo_ != null ? other.PeriodInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Period_a_Parameters Clone() {
    return new CMD_Modify_Period_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_info" field.</summary>
  public const int PeriodInfoFieldNumber = 2;
  private global::Period_Info periodInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Info PeriodInfo {
    get { return periodInfo_; }
    set {
      periodInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Period_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Period_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (!object.Equals(PeriodInfo, other.PeriodInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (periodInfo_ != null) hash ^= PeriodInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (periodInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PeriodInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (periodInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Period_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.periodInfo_ != null) {
      if (periodInfo_ == null) {
        periodInfo_ = new global::Period_Info();
      }
      PeriodInfo.MergeFrom(other.PeriodInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (periodInfo_ == null) {
            periodInfo_ = new global::Period_Info();
          }
          input.ReadMessage(periodInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_period_r			= 713;
/// </summary>
public sealed partial class CMD_Del_Period_r_Parameters : pb::IMessage<CMD_Del_Period_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Period_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Period_r_Parameters>(() => new CMD_Del_Period_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Period_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[197]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Period_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Period_r_Parameters(CMD_Del_Period_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Period_r_Parameters Clone() {
    return new CMD_Del_Period_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Period_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Period_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Period_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_period_a			= 714;
/// </summary>
public sealed partial class CMD_Del_Period_a_Parameters : pb::IMessage<CMD_Del_Period_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Period_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Period_a_Parameters>(() => new CMD_Del_Period_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Period_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[198]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Period_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Period_a_Parameters(CMD_Del_Period_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Period_a_Parameters Clone() {
    return new CMD_Del_Period_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Period_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Period_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Period_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_approve_course_r		= 715;
/// </summary>
public sealed partial class CMD_Approve_Course_r_Parameters : pb::IMessage<CMD_Approve_Course_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Approve_Course_r_Parameters> _parser = new pb::MessageParser<CMD_Approve_Course_r_Parameters>(() => new CMD_Approve_Course_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Approve_Course_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[199]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Course_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Course_r_Parameters(CMD_Approve_Course_r_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Course_r_Parameters Clone() {
    return new CMD_Approve_Course_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Approve_Course_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Approve_Course_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Approve_Course_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_approve_course_a		= 716;
/// </summary>
public sealed partial class CMD_Approve_Course_a_Parameters : pb::IMessage<CMD_Approve_Course_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Approve_Course_a_Parameters> _parser = new pb::MessageParser<CMD_Approve_Course_a_Parameters>(() => new CMD_Approve_Course_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Approve_Course_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[200]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Course_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Course_a_Parameters(CMD_Approve_Course_a_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Course_a_Parameters Clone() {
    return new CMD_Approve_Course_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Approve_Course_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Approve_Course_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Approve_Course_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_course_status_r		= 717;
/// </summary>
public sealed partial class CMD_Set_Course_Status_r_Parameters : pb::IMessage<CMD_Set_Course_Status_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Set_Course_Status_r_Parameters> _parser = new pb::MessageParser<CMD_Set_Course_Status_r_Parameters>(() => new CMD_Set_Course_Status_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Course_Status_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[201]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Status_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Status_r_Parameters(CMD_Set_Course_Status_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    courseStatus_ = other.courseStatus_;
    coursePassword_ = other.coursePassword_;
    coursePrice_ = other.coursePrice_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Status_r_Parameters Clone() {
    return new CMD_Set_Course_Status_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_status" field.</summary>
  public const int CourseStatusFieldNumber = 2;
  private global::Course_Status courseStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Status CourseStatus {
    get { return courseStatus_; }
    set {
      courseStatus_ = value;
    }
  }

  /// <summary>Field number for the "course_password" field.</summary>
  public const int CoursePasswordFieldNumber = 3;
  private string coursePassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CoursePassword {
    get { return coursePassword_; }
    set {
      coursePassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "course_price" field.</summary>
  public const int CoursePriceFieldNumber = 4;
  private uint coursePrice_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CoursePrice {
    get { return coursePrice_; }
    set {
      coursePrice_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Course_Status_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Course_Status_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CourseStatus != other.CourseStatus) return false;
    if (CoursePassword != other.CoursePassword) return false;
    if (CoursePrice != other.CoursePrice) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CourseStatus != 0) hash ^= CourseStatus.GetHashCode();
    if (CoursePassword.Length != 0) hash ^= CoursePassword.GetHashCode();
    if (CoursePrice != 0) hash ^= CoursePrice.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CourseStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CourseStatus);
    }
    if (CoursePassword.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(CoursePassword);
    }
    if (CoursePrice != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(CoursePrice);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CourseStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseStatus);
    }
    if (CoursePassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CoursePassword);
    }
    if (CoursePrice != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CoursePrice);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Course_Status_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CourseStatus != 0) {
      CourseStatus = other.CourseStatus;
    }
    if (other.CoursePassword.Length != 0) {
      CoursePassword = other.CoursePassword;
    }
    if (other.CoursePrice != 0) {
      CoursePrice = other.CoursePrice;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          courseStatus_ = (global::Course_Status) input.ReadEnum();
          break;
        }
        case 26: {
          CoursePassword = input.ReadString();
          break;
        }
        case 32: {
          CoursePrice = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_course_status_a		= 718;
/// </summary>
public sealed partial class CMD_Set_Course_Status_a_Parameters : pb::IMessage<CMD_Set_Course_Status_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Set_Course_Status_a_Parameters> _parser = new pb::MessageParser<CMD_Set_Course_Status_a_Parameters>(() => new CMD_Set_Course_Status_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Course_Status_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[202]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Status_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Status_a_Parameters(CMD_Set_Course_Status_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    courseStatus_ = other.courseStatus_;
    CourseInfo = other.courseInfo_ != null ? other.CourseInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Status_a_Parameters Clone() {
    return new CMD_Set_Course_Status_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_status" field.</summary>
  public const int CourseStatusFieldNumber = 2;
  private global::Course_Status courseStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Status CourseStatus {
    get { return courseStatus_; }
    set {
      courseStatus_ = value;
    }
  }

  /// <summary>Field number for the "course_info" field.</summary>
  public const int CourseInfoFieldNumber = 3;
  private global::Course_Info courseInfo_;
  /// <summary>
  /// when course_status=publish,test
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Info CourseInfo {
    get { return courseInfo_; }
    set {
      courseInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Course_Status_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Course_Status_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CourseStatus != other.CourseStatus) return false;
    if (!object.Equals(CourseInfo, other.CourseInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CourseStatus != 0) hash ^= CourseStatus.GetHashCode();
    if (courseInfo_ != null) hash ^= CourseInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CourseStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CourseStatus);
    }
    if (courseInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(CourseInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CourseStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseStatus);
    }
    if (courseInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Course_Status_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CourseStatus != 0) {
      CourseStatus = other.CourseStatus;
    }
    if (other.courseInfo_ != null) {
      if (courseInfo_ == null) {
        courseInfo_ = new global::Course_Info();
      }
      CourseInfo.MergeFrom(other.CourseInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          courseStatus_ = (global::Course_Status) input.ReadEnum();
          break;
        }
        case 26: {
          if (courseInfo_ == null) {
            courseInfo_ = new global::Course_Info();
          }
          input.ReadMessage(courseInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_answer_perioditem_r		= 719;
/// </summary>
public sealed partial class CMD_Answer_Perioditem_r_Parameters : pb::IMessage<CMD_Answer_Perioditem_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Answer_Perioditem_r_Parameters> _parser = new pb::MessageParser<CMD_Answer_Perioditem_r_Parameters>(() => new CMD_Answer_Perioditem_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Answer_Perioditem_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[203]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Perioditem_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Perioditem_r_Parameters(CMD_Answer_Perioditem_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
    PeriodAnswerInfo = other.periodAnswerInfo_ != null ? other.PeriodAnswerInfo.Clone() : null;
    PeriodFiles = other.periodFiles_ != null ? other.PeriodFiles.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Perioditem_r_Parameters Clone() {
    return new CMD_Answer_Perioditem_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  /// <summary>Field number for the "period_answer_info" field.</summary>
  public const int PeriodAnswerInfoFieldNumber = 5;
  private global::GBAnswer periodAnswerInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GBAnswer PeriodAnswerInfo {
    get { return periodAnswerInfo_; }
    set {
      periodAnswerInfo_ = value;
    }
  }

  /// <summary>Field number for the "period_files" field.</summary>
  public const int PeriodFilesFieldNumber = 6;
  private global::FileList periodFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList PeriodFiles {
    get { return periodFiles_; }
    set {
      periodFiles_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Answer_Perioditem_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Answer_Perioditem_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    if (!object.Equals(PeriodAnswerInfo, other.PeriodAnswerInfo)) return false;
    if (!object.Equals(PeriodFiles, other.PeriodFiles)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    if (periodAnswerInfo_ != null) hash ^= PeriodAnswerInfo.GetHashCode();
    if (periodFiles_ != null) hash ^= PeriodFiles.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
    if (periodAnswerInfo_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(PeriodAnswerInfo);
    }
    if (periodFiles_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(PeriodFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    if (periodAnswerInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodAnswerInfo);
    }
    if (periodFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodFiles);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Answer_Perioditem_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
    if (other.periodAnswerInfo_ != null) {
      if (periodAnswerInfo_ == null) {
        periodAnswerInfo_ = new global::GBAnswer();
      }
      PeriodAnswerInfo.MergeFrom(other.PeriodAnswerInfo);
    }
    if (other.periodFiles_ != null) {
      if (periodFiles_ == null) {
        periodFiles_ = new global::FileList();
      }
      PeriodFiles.MergeFrom(other.PeriodFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
        case 42: {
          if (periodAnswerInfo_ == null) {
            periodAnswerInfo_ = new global::GBAnswer();
          }
          input.ReadMessage(periodAnswerInfo_);
          break;
        }
        case 50: {
          if (periodFiles_ == null) {
            periodFiles_ = new global::FileList();
          }
          input.ReadMessage(periodFiles_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_answer_perioditem_a		= 720;
/// </summary>
public sealed partial class CMD_Answer_Perioditem_a_Parameters : pb::IMessage<CMD_Answer_Perioditem_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Answer_Perioditem_a_Parameters> _parser = new pb::MessageParser<CMD_Answer_Perioditem_a_Parameters>(() => new CMD_Answer_Perioditem_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Answer_Perioditem_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[204]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Perioditem_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Perioditem_a_Parameters(CMD_Answer_Perioditem_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
    PeriodAnswerInfo = other.periodAnswerInfo_ != null ? other.PeriodAnswerInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Answer_Perioditem_a_Parameters Clone() {
    return new CMD_Answer_Perioditem_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  /// <summary>Field number for the "period_answer_info" field.</summary>
  public const int PeriodAnswerInfoFieldNumber = 4;
  private global::GBAnswer periodAnswerInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GBAnswer PeriodAnswerInfo {
    get { return periodAnswerInfo_; }
    set {
      periodAnswerInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Answer_Perioditem_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Answer_Perioditem_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    if (!object.Equals(PeriodAnswerInfo, other.PeriodAnswerInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    if (periodAnswerInfo_ != null) hash ^= PeriodAnswerInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
    if (periodAnswerInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(PeriodAnswerInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    if (periodAnswerInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodAnswerInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Answer_Perioditem_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
    if (other.periodAnswerInfo_ != null) {
      if (periodAnswerInfo_ == null) {
        periodAnswerInfo_ = new global::GBAnswer();
      }
      PeriodAnswerInfo.MergeFrom(other.PeriodAnswerInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
        case 34: {
          if (periodAnswerInfo_ == null) {
            periodAnswerInfo_ = new global::GBAnswer();
          }
          input.ReadMessage(periodAnswerInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_perioditem_r		= 721;
/// </summary>
public sealed partial class CMD_Add_Perioditem_r_Parameters : pb::IMessage<CMD_Add_Perioditem_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Perioditem_r_Parameters> _parser = new pb::MessageParser<CMD_Add_Perioditem_r_Parameters>(() => new CMD_Add_Perioditem_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Perioditem_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[205]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Perioditem_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Perioditem_r_Parameters(CMD_Add_Perioditem_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    PeriodItemInfo = other.periodItemInfo_ != null ? other.PeriodItemInfo.Clone() : null;
    PeriodFiles = other.periodFiles_ != null ? other.PeriodFiles.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Perioditem_r_Parameters Clone() {
    return new CMD_Add_Perioditem_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "period_item_info" field.</summary>
  public const int PeriodItemInfoFieldNumber = 3;
  private global::Period_Item_Info periodItemInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Item_Info PeriodItemInfo {
    get { return periodItemInfo_; }
    set {
      periodItemInfo_ = value;
    }
  }

  /// <summary>Field number for the "period_files" field.</summary>
  public const int PeriodFilesFieldNumber = 5;
  private global::FileList periodFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList PeriodFiles {
    get { return periodFiles_; }
    set {
      periodFiles_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Perioditem_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Perioditem_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (!object.Equals(PeriodItemInfo, other.PeriodItemInfo)) return false;
    if (!object.Equals(PeriodFiles, other.PeriodFiles)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (periodItemInfo_ != null) hash ^= PeriodItemInfo.GetHashCode();
    if (periodFiles_ != null) hash ^= PeriodFiles.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (periodItemInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(PeriodItemInfo);
    }
    if (periodFiles_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(PeriodFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (periodItemInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodItemInfo);
    }
    if (periodFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodFiles);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Perioditem_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.periodItemInfo_ != null) {
      if (periodItemInfo_ == null) {
        periodItemInfo_ = new global::Period_Item_Info();
      }
      PeriodItemInfo.MergeFrom(other.PeriodItemInfo);
    }
    if (other.periodFiles_ != null) {
      if (periodFiles_ == null) {
        periodFiles_ = new global::FileList();
      }
      PeriodFiles.MergeFrom(other.PeriodFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (periodItemInfo_ == null) {
            periodItemInfo_ = new global::Period_Item_Info();
          }
          input.ReadMessage(periodItemInfo_);
          break;
        }
        case 42: {
          if (periodFiles_ == null) {
            periodFiles_ = new global::FileList();
          }
          input.ReadMessage(periodFiles_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_perioditem_a		= 722;
/// </summary>
public sealed partial class CMD_Add_Perioditem_a_Parameters : pb::IMessage<CMD_Add_Perioditem_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Perioditem_a_Parameters> _parser = new pb::MessageParser<CMD_Add_Perioditem_a_Parameters>(() => new CMD_Add_Perioditem_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Perioditem_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[206]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Perioditem_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Perioditem_a_Parameters(CMD_Add_Perioditem_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    PeriodItemInfo = other.periodItemInfo_ != null ? other.PeriodItemInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Perioditem_a_Parameters Clone() {
    return new CMD_Add_Perioditem_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "period_item_info" field.</summary>
  public const int PeriodItemInfoFieldNumber = 3;
  private global::Period_Item_Info periodItemInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Item_Info PeriodItemInfo {
    get { return periodItemInfo_; }
    set {
      periodItemInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Perioditem_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Perioditem_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (!object.Equals(PeriodItemInfo, other.PeriodItemInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (periodItemInfo_ != null) hash ^= PeriodItemInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (periodItemInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(PeriodItemInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (periodItemInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodItemInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Perioditem_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.periodItemInfo_ != null) {
      if (periodItemInfo_ == null) {
        periodItemInfo_ = new global::Period_Item_Info();
      }
      PeriodItemInfo.MergeFrom(other.PeriodItemInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (periodItemInfo_ == null) {
            periodItemInfo_ = new global::Period_Item_Info();
          }
          input.ReadMessage(periodItemInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_perioditem_r		= 723;
/// </summary>
public sealed partial class CMD_Modify_Perioditem_r_Parameters : pb::IMessage<CMD_Modify_Perioditem_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Perioditem_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Perioditem_r_Parameters>(() => new CMD_Modify_Perioditem_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Perioditem_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[207]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Perioditem_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Perioditem_r_Parameters(CMD_Modify_Perioditem_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    PeriodItemInfo = other.periodItemInfo_ != null ? other.PeriodItemInfo.Clone() : null;
    PeriodFiles = other.periodFiles_ != null ? other.PeriodFiles.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Perioditem_r_Parameters Clone() {
    return new CMD_Modify_Perioditem_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "period_item_info" field.</summary>
  public const int PeriodItemInfoFieldNumber = 3;
  private global::Period_Item_Info periodItemInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Item_Info PeriodItemInfo {
    get { return periodItemInfo_; }
    set {
      periodItemInfo_ = value;
    }
  }

  /// <summary>Field number for the "period_files" field.</summary>
  public const int PeriodFilesFieldNumber = 5;
  private global::FileList periodFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList PeriodFiles {
    get { return periodFiles_; }
    set {
      periodFiles_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Perioditem_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Perioditem_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (!object.Equals(PeriodItemInfo, other.PeriodItemInfo)) return false;
    if (!object.Equals(PeriodFiles, other.PeriodFiles)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (periodItemInfo_ != null) hash ^= PeriodItemInfo.GetHashCode();
    if (periodFiles_ != null) hash ^= PeriodFiles.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (periodItemInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(PeriodItemInfo);
    }
    if (periodFiles_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(PeriodFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (periodItemInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodItemInfo);
    }
    if (periodFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodFiles);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Perioditem_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.periodItemInfo_ != null) {
      if (periodItemInfo_ == null) {
        periodItemInfo_ = new global::Period_Item_Info();
      }
      PeriodItemInfo.MergeFrom(other.PeriodItemInfo);
    }
    if (other.periodFiles_ != null) {
      if (periodFiles_ == null) {
        periodFiles_ = new global::FileList();
      }
      PeriodFiles.MergeFrom(other.PeriodFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (periodItemInfo_ == null) {
            periodItemInfo_ = new global::Period_Item_Info();
          }
          input.ReadMessage(periodItemInfo_);
          break;
        }
        case 42: {
          if (periodFiles_ == null) {
            periodFiles_ = new global::FileList();
          }
          input.ReadMessage(periodFiles_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_perioditem_a		= 724;
/// </summary>
public sealed partial class CMD_Modify_Perioditem_a_Parameters : pb::IMessage<CMD_Modify_Perioditem_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Perioditem_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Perioditem_a_Parameters>(() => new CMD_Modify_Perioditem_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Perioditem_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[208]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Perioditem_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Perioditem_a_Parameters(CMD_Modify_Perioditem_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    PeriodItemInfo = other.periodItemInfo_ != null ? other.PeriodItemInfo.Clone() : null;
    PeriodFiles = other.periodFiles_ != null ? other.PeriodFiles.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Perioditem_a_Parameters Clone() {
    return new CMD_Modify_Perioditem_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "period_item_info" field.</summary>
  public const int PeriodItemInfoFieldNumber = 3;
  private global::Period_Item_Info periodItemInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Period_Item_Info PeriodItemInfo {
    get { return periodItemInfo_; }
    set {
      periodItemInfo_ = value;
    }
  }

  /// <summary>Field number for the "period_files" field.</summary>
  public const int PeriodFilesFieldNumber = 5;
  private global::FileList periodFiles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList PeriodFiles {
    get { return periodFiles_; }
    set {
      periodFiles_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Perioditem_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Perioditem_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (!object.Equals(PeriodItemInfo, other.PeriodItemInfo)) return false;
    if (!object.Equals(PeriodFiles, other.PeriodFiles)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (periodItemInfo_ != null) hash ^= PeriodItemInfo.GetHashCode();
    if (periodFiles_ != null) hash ^= PeriodFiles.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (periodItemInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(PeriodItemInfo);
    }
    if (periodFiles_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(PeriodFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (periodItemInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodItemInfo);
    }
    if (periodFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodFiles);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Perioditem_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.periodItemInfo_ != null) {
      if (periodItemInfo_ == null) {
        periodItemInfo_ = new global::Period_Item_Info();
      }
      PeriodItemInfo.MergeFrom(other.PeriodItemInfo);
    }
    if (other.periodFiles_ != null) {
      if (periodFiles_ == null) {
        periodFiles_ = new global::FileList();
      }
      PeriodFiles.MergeFrom(other.PeriodFiles);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (periodItemInfo_ == null) {
            periodItemInfo_ = new global::Period_Item_Info();
          }
          input.ReadMessage(periodItemInfo_);
          break;
        }
        case 42: {
          if (periodFiles_ == null) {
            periodFiles_ = new global::FileList();
          }
          input.ReadMessage(periodFiles_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_perioditem_r		= 725;
/// </summary>
public sealed partial class CMD_Del_Perioditem_r_Parameters : pb::IMessage<CMD_Del_Perioditem_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Perioditem_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Perioditem_r_Parameters>(() => new CMD_Del_Perioditem_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Perioditem_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[209]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_r_Parameters(CMD_Del_Perioditem_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_r_Parameters Clone() {
    return new CMD_Del_Perioditem_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Perioditem_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Perioditem_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Perioditem_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_perioditem_a		= 726;
/// </summary>
public sealed partial class CMD_Del_Perioditem_a_Parameters : pb::IMessage<CMD_Del_Perioditem_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Perioditem_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Perioditem_a_Parameters>(() => new CMD_Del_Perioditem_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Perioditem_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[210]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_a_Parameters(CMD_Del_Perioditem_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_a_Parameters Clone() {
    return new CMD_Del_Perioditem_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Perioditem_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Perioditem_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Perioditem_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_score_perioditem_r		= 727;
/// </summary>
public sealed partial class CMD_Score_Perioditem_r_Parameters : pb::IMessage<CMD_Score_Perioditem_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Score_Perioditem_r_Parameters> _parser = new pb::MessageParser<CMD_Score_Perioditem_r_Parameters>(() => new CMD_Score_Perioditem_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Score_Perioditem_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[211]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Score_Perioditem_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Score_Perioditem_r_Parameters(CMD_Score_Perioditem_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
    perioditemAnswerId_ = other.perioditemAnswerId_;
    perioditemScore_ = other.perioditemScore_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Score_Perioditem_r_Parameters Clone() {
    return new CMD_Score_Perioditem_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_answer_id" field.</summary>
  public const int PerioditemAnswerIdFieldNumber = 4;
  private uint perioditemAnswerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemAnswerId {
    get { return perioditemAnswerId_; }
    set {
      perioditemAnswerId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_score" field.</summary>
  public const int PerioditemScoreFieldNumber = 5;
  private int perioditemScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PerioditemScore {
    get { return perioditemScore_; }
    set {
      perioditemScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Score_Perioditem_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Score_Perioditem_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    if (PerioditemAnswerId != other.PerioditemAnswerId) return false;
    if (PerioditemScore != other.PerioditemScore) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    if (PerioditemAnswerId != 0) hash ^= PerioditemAnswerId.GetHashCode();
    if (PerioditemScore != 0) hash ^= PerioditemScore.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
    if (PerioditemAnswerId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(PerioditemAnswerId);
    }
    if (PerioditemScore != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(PerioditemScore);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    if (PerioditemAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemAnswerId);
    }
    if (PerioditemScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PerioditemScore);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Score_Perioditem_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
    if (other.PerioditemAnswerId != 0) {
      PerioditemAnswerId = other.PerioditemAnswerId;
    }
    if (other.PerioditemScore != 0) {
      PerioditemScore = other.PerioditemScore;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
        case 32: {
          PerioditemAnswerId = input.ReadUInt32();
          break;
        }
        case 40: {
          PerioditemScore = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_score_perioditem_a		= 728;
/// </summary>
public sealed partial class CMD_Score_Perioditem_a_Parameters : pb::IMessage<CMD_Score_Perioditem_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Score_Perioditem_a_Parameters> _parser = new pb::MessageParser<CMD_Score_Perioditem_a_Parameters>(() => new CMD_Score_Perioditem_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Score_Perioditem_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[212]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Score_Perioditem_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Score_Perioditem_a_Parameters(CMD_Score_Perioditem_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
    perioditemAnswerId_ = other.perioditemAnswerId_;
    perioditemScore_ = other.perioditemScore_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Score_Perioditem_a_Parameters Clone() {
    return new CMD_Score_Perioditem_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_answer_id" field.</summary>
  public const int PerioditemAnswerIdFieldNumber = 4;
  private uint perioditemAnswerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemAnswerId {
    get { return perioditemAnswerId_; }
    set {
      perioditemAnswerId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_score" field.</summary>
  public const int PerioditemScoreFieldNumber = 5;
  private int perioditemScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PerioditemScore {
    get { return perioditemScore_; }
    set {
      perioditemScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Score_Perioditem_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Score_Perioditem_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    if (PerioditemAnswerId != other.PerioditemAnswerId) return false;
    if (PerioditemScore != other.PerioditemScore) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    if (PerioditemAnswerId != 0) hash ^= PerioditemAnswerId.GetHashCode();
    if (PerioditemScore != 0) hash ^= PerioditemScore.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
    if (PerioditemAnswerId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(PerioditemAnswerId);
    }
    if (PerioditemScore != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(PerioditemScore);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    if (PerioditemAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemAnswerId);
    }
    if (PerioditemScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PerioditemScore);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Score_Perioditem_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
    if (other.PerioditemAnswerId != 0) {
      PerioditemAnswerId = other.PerioditemAnswerId;
    }
    if (other.PerioditemScore != 0) {
      PerioditemScore = other.PerioditemScore;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
        case 32: {
          PerioditemAnswerId = input.ReadUInt32();
          break;
        }
        case 40: {
          PerioditemScore = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_buy_course_r			= 729;
/// </summary>
public sealed partial class CMD_Buy_Course_r_Parameters : pb::IMessage<CMD_Buy_Course_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Buy_Course_r_Parameters> _parser = new pb::MessageParser<CMD_Buy_Course_r_Parameters>(() => new CMD_Buy_Course_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Buy_Course_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[213]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Course_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Course_r_Parameters(CMD_Buy_Course_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    coursePassword_ = other.coursePassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Course_r_Parameters Clone() {
    return new CMD_Buy_Course_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_password" field.</summary>
  public const int CoursePasswordFieldNumber = 2;
  private string coursePassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CoursePassword {
    get { return coursePassword_; }
    set {
      coursePassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Buy_Course_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Buy_Course_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CoursePassword != other.CoursePassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CoursePassword.Length != 0) hash ^= CoursePassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CoursePassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CoursePassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CoursePassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CoursePassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Buy_Course_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CoursePassword.Length != 0) {
      CoursePassword = other.CoursePassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          CoursePassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_buy_course_a			= 730;
/// </summary>
public sealed partial class CMD_Buy_Course_a_Parameters : pb::IMessage<CMD_Buy_Course_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Buy_Course_a_Parameters> _parser = new pb::MessageParser<CMD_Buy_Course_a_Parameters>(() => new CMD_Buy_Course_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Buy_Course_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[214]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Course_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Course_a_Parameters(CMD_Buy_Course_a_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Course_a_Parameters Clone() {
    return new CMD_Buy_Course_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Buy_Course_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Buy_Course_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Buy_Course_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_peroditem_status_r	= 731;
/// </summary>
public sealed partial class CMD_Set_Perioditem_Status_r_Paramters : pb::IMessage<CMD_Set_Perioditem_Status_r_Paramters> {
  private static readonly pb::MessageParser<CMD_Set_Perioditem_Status_r_Paramters> _parser = new pb::MessageParser<CMD_Set_Perioditem_Status_r_Paramters>(() => new CMD_Set_Perioditem_Status_r_Paramters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Perioditem_Status_r_Paramters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[215]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Perioditem_Status_r_Paramters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Perioditem_Status_r_Paramters(CMD_Set_Perioditem_Status_r_Paramters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
    perioditemStatus_ = other.perioditemStatus_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Perioditem_Status_r_Paramters Clone() {
    return new CMD_Set_Perioditem_Status_r_Paramters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_status" field.</summary>
  public const int PerioditemStatusFieldNumber = 4;
  private uint perioditemStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemStatus {
    get { return perioditemStatus_; }
    set {
      perioditemStatus_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Perioditem_Status_r_Paramters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Perioditem_Status_r_Paramters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    if (PerioditemStatus != other.PerioditemStatus) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    if (PerioditemStatus != 0) hash ^= PerioditemStatus.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
    if (PerioditemStatus != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(PerioditemStatus);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    if (PerioditemStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemStatus);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Perioditem_Status_r_Paramters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
    if (other.PerioditemStatus != 0) {
      PerioditemStatus = other.PerioditemStatus;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
        case 32: {
          PerioditemStatus = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_peroditem_status_a	= 732;
/// </summary>
public sealed partial class CMD_Set_Perioditem_Status_a_Paramters : pb::IMessage<CMD_Set_Perioditem_Status_a_Paramters> {
  private static readonly pb::MessageParser<CMD_Set_Perioditem_Status_a_Paramters> _parser = new pb::MessageParser<CMD_Set_Perioditem_Status_a_Paramters>(() => new CMD_Set_Perioditem_Status_a_Paramters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Perioditem_Status_a_Paramters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[216]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Perioditem_Status_a_Paramters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Perioditem_Status_a_Paramters(CMD_Set_Perioditem_Status_a_Paramters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
    perioditemStatus_ = other.perioditemStatus_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Perioditem_Status_a_Paramters Clone() {
    return new CMD_Set_Perioditem_Status_a_Paramters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_status" field.</summary>
  public const int PerioditemStatusFieldNumber = 4;
  private uint perioditemStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemStatus {
    get { return perioditemStatus_; }
    set {
      perioditemStatus_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Perioditem_Status_a_Paramters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Perioditem_Status_a_Paramters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    if (PerioditemStatus != other.PerioditemStatus) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    if (PerioditemStatus != 0) hash ^= PerioditemStatus.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
    if (PerioditemStatus != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(PerioditemStatus);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    if (PerioditemStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemStatus);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Perioditem_Status_a_Paramters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
    if (other.PerioditemStatus != 0) {
      PerioditemStatus = other.PerioditemStatus;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
        case 32: {
          PerioditemStatus = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_course_password_r	= 733;
/// </summary>
public sealed partial class CMD_Get_Course_Password_r_Parameters : pb::IMessage<CMD_Get_Course_Password_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Course_Password_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Course_Password_r_Parameters>(() => new CMD_Get_Course_Password_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Course_Password_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[217]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Password_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Password_r_Parameters(CMD_Get_Course_Password_r_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Password_r_Parameters Clone() {
    return new CMD_Get_Course_Password_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Course_Password_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Course_Password_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Course_Password_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_course_password_a	= 734;
/// </summary>
public sealed partial class CMD_Get_Course_Password_a_Parameters : pb::IMessage<CMD_Get_Course_Password_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Course_Password_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Course_Password_a_Parameters>(() => new CMD_Get_Course_Password_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Course_Password_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[218]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Password_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Password_a_Parameters(CMD_Get_Course_Password_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    coursePassword_ = other.coursePassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Password_a_Parameters Clone() {
    return new CMD_Get_Course_Password_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_password" field.</summary>
  public const int CoursePasswordFieldNumber = 2;
  private string coursePassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CoursePassword {
    get { return coursePassword_; }
    set {
      coursePassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Course_Password_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Course_Password_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CoursePassword != other.CoursePassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CoursePassword.Length != 0) hash ^= CoursePassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CoursePassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CoursePassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CoursePassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CoursePassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Course_Password_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CoursePassword.Length != 0) {
      CoursePassword = other.CoursePassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          CoursePassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_perioditem_answer_r = 735;
/// </summary>
public sealed partial class CMD_Del_Perioditem_Answer_r_Parameters : pb::IMessage<CMD_Del_Perioditem_Answer_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Perioditem_Answer_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Perioditem_Answer_r_Parameters>(() => new CMD_Del_Perioditem_Answer_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Perioditem_Answer_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[219]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_Answer_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_Answer_r_Parameters(CMD_Del_Perioditem_Answer_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
    perioditemAnswerId_ = other.perioditemAnswerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_Answer_r_Parameters Clone() {
    return new CMD_Del_Perioditem_Answer_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_answer_id" field.</summary>
  public const int PerioditemAnswerIdFieldNumber = 4;
  private uint perioditemAnswerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemAnswerId {
    get { return perioditemAnswerId_; }
    set {
      perioditemAnswerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Perioditem_Answer_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Perioditem_Answer_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    if (PerioditemAnswerId != other.PerioditemAnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    if (PerioditemAnswerId != 0) hash ^= PerioditemAnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
    if (PerioditemAnswerId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(PerioditemAnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    if (PerioditemAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemAnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Perioditem_Answer_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
    if (other.PerioditemAnswerId != 0) {
      PerioditemAnswerId = other.PerioditemAnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
        case 32: {
          PerioditemAnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_perioditem_answer_a = 736;
/// </summary>
public sealed partial class CMD_Del_Perioditem_Answer_a_Parameters : pb::IMessage<CMD_Del_Perioditem_Answer_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Perioditem_Answer_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Perioditem_Answer_a_Parameters>(() => new CMD_Del_Perioditem_Answer_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Perioditem_Answer_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[220]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_Answer_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_Answer_a_Parameters(CMD_Del_Perioditem_Answer_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    periodId_ = other.periodId_;
    perioditemId_ = other.perioditemId_;
    perioditemAnswerId_ = other.perioditemAnswerId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Perioditem_Answer_a_Parameters Clone() {
    return new CMD_Del_Perioditem_Answer_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "period_id" field.</summary>
  public const int PeriodIdFieldNumber = 2;
  private uint periodId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PeriodId {
    get { return periodId_; }
    set {
      periodId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_id" field.</summary>
  public const int PerioditemIdFieldNumber = 3;
  private uint perioditemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemId {
    get { return perioditemId_; }
    set {
      perioditemId_ = value;
    }
  }

  /// <summary>Field number for the "perioditem_answer_id" field.</summary>
  public const int PerioditemAnswerIdFieldNumber = 4;
  private uint perioditemAnswerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PerioditemAnswerId {
    get { return perioditemAnswerId_; }
    set {
      perioditemAnswerId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Perioditem_Answer_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Perioditem_Answer_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (PeriodId != other.PeriodId) return false;
    if (PerioditemId != other.PerioditemId) return false;
    if (PerioditemAnswerId != other.PerioditemAnswerId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (PeriodId != 0) hash ^= PeriodId.GetHashCode();
    if (PerioditemId != 0) hash ^= PerioditemId.GetHashCode();
    if (PerioditemAnswerId != 0) hash ^= PerioditemAnswerId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (PeriodId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PeriodId);
    }
    if (PerioditemId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PerioditemId);
    }
    if (PerioditemAnswerId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(PerioditemAnswerId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (PeriodId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeriodId);
    }
    if (PerioditemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemId);
    }
    if (PerioditemAnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerioditemAnswerId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Perioditem_Answer_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.PeriodId != 0) {
      PeriodId = other.PeriodId;
    }
    if (other.PerioditemId != 0) {
      PerioditemId = other.PerioditemId;
    }
    if (other.PerioditemAnswerId != 0) {
      PerioditemAnswerId = other.PerioditemAnswerId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          PeriodId = input.ReadUInt32();
          break;
        }
        case 24: {
          PerioditemId = input.ReadUInt32();
          break;
        }
        case 32: {
          PerioditemAnswerId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_course_status_change_notify
/// </summary>
public sealed partial class CMD_Course_Status_Change_Notify_Parameters : pb::IMessage<CMD_Course_Status_Change_Notify_Parameters> {
  private static readonly pb::MessageParser<CMD_Course_Status_Change_Notify_Parameters> _parser = new pb::MessageParser<CMD_Course_Status_Change_Notify_Parameters>(() => new CMD_Course_Status_Change_Notify_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Course_Status_Change_Notify_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[221]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Course_Status_Change_Notify_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Course_Status_Change_Notify_Parameters(CMD_Course_Status_Change_Notify_Parameters other) : this() {
    CourseInfo = other.courseInfo_ != null ? other.CourseInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Course_Status_Change_Notify_Parameters Clone() {
    return new CMD_Course_Status_Change_Notify_Parameters(this);
  }

  /// <summary>Field number for the "course_info" field.</summary>
  public const int CourseInfoFieldNumber = 1;
  private global::Course_Info courseInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Info CourseInfo {
    get { return courseInfo_; }
    set {
      courseInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Course_Status_Change_Notify_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Course_Status_Change_Notify_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CourseInfo, other.CourseInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (courseInfo_ != null) hash ^= CourseInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (courseInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CourseInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (courseInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Course_Status_Change_Notify_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.courseInfo_ != null) {
      if (courseInfo_ == null) {
        courseInfo_ = new global::Course_Info();
      }
      CourseInfo.MergeFrom(other.CourseInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (courseInfo_ == null) {
            courseInfo_ = new global::Course_Info();
          }
          input.ReadMessage(courseInfo_);
          break;
        }
      }
    }
  }

}

public sealed partial class User_Trophy_Info : pb::IMessage<User_Trophy_Info> {
  private static readonly pb::MessageParser<User_Trophy_Info> _parser = new pb::MessageParser<User_Trophy_Info>(() => new User_Trophy_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Trophy_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[222]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Trophy_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Trophy_Info(User_Trophy_Info other) : this() {
    awardTime_ = other.awardTime_;
    awardTrophy_ = other.awardTrophy_;
    newState_ = other.newState_;
    TrophySetting = other.trophySetting_ != null ? other.TrophySetting.Clone() : null;
    courseScore_ = other.courseScore_;
    courseRaceType_ = other.courseRaceType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Trophy_Info Clone() {
    return new User_Trophy_Info(this);
  }

  /// <summary>Field number for the "award_time" field.</summary>
  public const int AwardTimeFieldNumber = 1;
  private ulong awardTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong AwardTime {
    get { return awardTime_; }
    set {
      awardTime_ = value;
    }
  }

  /// <summary>Field number for the "award_trophy" field.</summary>
  public const int AwardTrophyFieldNumber = 2;
  private global::Trophy_Type awardTrophy_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophy_Type AwardTrophy {
    get { return awardTrophy_; }
    set {
      awardTrophy_ = value;
    }
  }

  /// <summary>Field number for the "new_state" field.</summary>
  public const int NewStateFieldNumber = 3;
  private bool newState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool NewState {
    get { return newState_; }
    set {
      newState_ = value;
    }
  }

  /// <summary>Field number for the "trophy_setting" field.</summary>
  public const int TrophySettingFieldNumber = 4;
  private global::Trophy_Setting trophySetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophy_Setting TrophySetting {
    get { return trophySetting_; }
    set {
      trophySetting_ = value;
    }
  }

  /// <summary>Field number for the "course_score" field.</summary>
  public const int CourseScoreFieldNumber = 5;
  private int courseScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CourseScore {
    get { return courseScore_; }
    set {
      courseScore_ = value;
    }
  }

  /// <summary>Field number for the "course_race_type" field.</summary>
  public const int CourseRaceTypeFieldNumber = 6;
  private global::Course_Race_Type courseRaceType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Race_Type CourseRaceType {
    get { return courseRaceType_; }
    set {
      courseRaceType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Trophy_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Trophy_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AwardTime != other.AwardTime) return false;
    if (AwardTrophy != other.AwardTrophy) return false;
    if (NewState != other.NewState) return false;
    if (!object.Equals(TrophySetting, other.TrophySetting)) return false;
    if (CourseScore != other.CourseScore) return false;
    if (CourseRaceType != other.CourseRaceType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AwardTime != 0UL) hash ^= AwardTime.GetHashCode();
    if (AwardTrophy != 0) hash ^= AwardTrophy.GetHashCode();
    if (NewState != false) hash ^= NewState.GetHashCode();
    if (trophySetting_ != null) hash ^= TrophySetting.GetHashCode();
    if (CourseScore != 0) hash ^= CourseScore.GetHashCode();
    if (CourseRaceType != 0) hash ^= CourseRaceType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AwardTime != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(AwardTime);
    }
    if (AwardTrophy != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) AwardTrophy);
    }
    if (NewState != false) {
      output.WriteRawTag(24);
      output.WriteBool(NewState);
    }
    if (trophySetting_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(TrophySetting);
    }
    if (CourseScore != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(CourseScore);
    }
    if (CourseRaceType != 0) {
      output.WriteRawTag(48);
      output.WriteEnum((int) CourseRaceType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AwardTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AwardTime);
    }
    if (AwardTrophy != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AwardTrophy);
    }
    if (NewState != false) {
      size += 1 + 1;
    }
    if (trophySetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrophySetting);
    }
    if (CourseScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CourseScore);
    }
    if (CourseRaceType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseRaceType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Trophy_Info other) {
    if (other == null) {
      return;
    }
    if (other.AwardTime != 0UL) {
      AwardTime = other.AwardTime;
    }
    if (other.AwardTrophy != 0) {
      AwardTrophy = other.AwardTrophy;
    }
    if (other.NewState != false) {
      NewState = other.NewState;
    }
    if (other.trophySetting_ != null) {
      if (trophySetting_ == null) {
        trophySetting_ = new global::Trophy_Setting();
      }
      TrophySetting.MergeFrom(other.TrophySetting);
    }
    if (other.CourseScore != 0) {
      CourseScore = other.CourseScore;
    }
    if (other.CourseRaceType != 0) {
      CourseRaceType = other.CourseRaceType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AwardTime = input.ReadUInt64();
          break;
        }
        case 16: {
          awardTrophy_ = (global::Trophy_Type) input.ReadEnum();
          break;
        }
        case 24: {
          NewState = input.ReadBool();
          break;
        }
        case 34: {
          if (trophySetting_ == null) {
            trophySetting_ = new global::Trophy_Setting();
          }
          input.ReadMessage(trophySetting_);
          break;
        }
        case 40: {
          CourseScore = input.ReadInt32();
          break;
        }
        case 48: {
          courseRaceType_ = (global::Course_Race_Type) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class User_Certificate_Info : pb::IMessage<User_Certificate_Info> {
  private static readonly pb::MessageParser<User_Certificate_Info> _parser = new pb::MessageParser<User_Certificate_Info>(() => new User_Certificate_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Certificate_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[223]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Certificate_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Certificate_Info(User_Certificate_Info other) : this() {
    awardTime_ = other.awardTime_;
    newState_ = other.newState_;
    CertificateSetting = other.certificateSetting_ != null ? other.CertificateSetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Certificate_Info Clone() {
    return new User_Certificate_Info(this);
  }

  /// <summary>Field number for the "award_time" field.</summary>
  public const int AwardTimeFieldNumber = 1;
  private ulong awardTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong AwardTime {
    get { return awardTime_; }
    set {
      awardTime_ = value;
    }
  }

  /// <summary>Field number for the "new_state" field.</summary>
  public const int NewStateFieldNumber = 2;
  private bool newState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool NewState {
    get { return newState_; }
    set {
      newState_ = value;
    }
  }

  /// <summary>Field number for the "certificate_setting" field.</summary>
  public const int CertificateSettingFieldNumber = 3;
  private global::Certificate_Setting certificateSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Certificate_Setting CertificateSetting {
    get { return certificateSetting_; }
    set {
      certificateSetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Certificate_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Certificate_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AwardTime != other.AwardTime) return false;
    if (NewState != other.NewState) return false;
    if (!object.Equals(CertificateSetting, other.CertificateSetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AwardTime != 0UL) hash ^= AwardTime.GetHashCode();
    if (NewState != false) hash ^= NewState.GetHashCode();
    if (certificateSetting_ != null) hash ^= CertificateSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AwardTime != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(AwardTime);
    }
    if (NewState != false) {
      output.WriteRawTag(16);
      output.WriteBool(NewState);
    }
    if (certificateSetting_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(CertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AwardTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AwardTime);
    }
    if (NewState != false) {
      size += 1 + 1;
    }
    if (certificateSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CertificateSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Certificate_Info other) {
    if (other == null) {
      return;
    }
    if (other.AwardTime != 0UL) {
      AwardTime = other.AwardTime;
    }
    if (other.NewState != false) {
      NewState = other.NewState;
    }
    if (other.certificateSetting_ != null) {
      if (certificateSetting_ == null) {
        certificateSetting_ = new global::Certificate_Setting();
      }
      CertificateSetting.MergeFrom(other.CertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          AwardTime = input.ReadUInt64();
          break;
        }
        case 16: {
          NewState = input.ReadBool();
          break;
        }
        case 26: {
          if (certificateSetting_ == null) {
            certificateSetting_ = new global::Certificate_Setting();
          }
          input.ReadMessage(certificateSetting_);
          break;
        }
      }
    }
  }

}

public sealed partial class Honor_Wall_Info : pb::IMessage<Honor_Wall_Info> {
  private static readonly pb::MessageParser<Honor_Wall_Info> _parser = new pb::MessageParser<Honor_Wall_Info>(() => new Honor_Wall_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Honor_Wall_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[224]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Honor_Wall_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Honor_Wall_Info(Honor_Wall_Info other) : this() {
    userTrophies_ = other.userTrophies_.Clone();
    userCertificates_ = other.userCertificates_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Honor_Wall_Info Clone() {
    return new Honor_Wall_Info(this);
  }

  /// <summary>Field number for the "user_trophies" field.</summary>
  public const int UserTrophiesFieldNumber = 1;
  private static readonly pbc::MapField<uint, global::User_Trophy_Info>.Codec _map_userTrophies_codec
      = new pbc::MapField<uint, global::User_Trophy_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Trophy_Info.Parser), 10);
  private readonly pbc::MapField<uint, global::User_Trophy_Info> userTrophies_ = new pbc::MapField<uint, global::User_Trophy_Info>();
  /// <summary>
  /// course_id, trophy info
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Trophy_Info> UserTrophies {
    get { return userTrophies_; }
  }

  /// <summary>Field number for the "user_certificates" field.</summary>
  public const int UserCertificatesFieldNumber = 2;
  private static readonly pbc::MapField<uint, global::User_Certificate_Info>.Codec _map_userCertificates_codec
      = new pbc::MapField<uint, global::User_Certificate_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Certificate_Info.Parser), 18);
  private readonly pbc::MapField<uint, global::User_Certificate_Info> userCertificates_ = new pbc::MapField<uint, global::User_Certificate_Info>();
  /// <summary>
  /// course_id, certificate info
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Certificate_Info> UserCertificates {
    get { return userCertificates_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Honor_Wall_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Honor_Wall_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!UserTrophies.Equals(other.UserTrophies)) return false;
    if (!UserCertificates.Equals(other.UserCertificates)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= UserTrophies.GetHashCode();
    hash ^= UserCertificates.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    userTrophies_.WriteTo(output, _map_userTrophies_codec);
    userCertificates_.WriteTo(output, _map_userCertificates_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += userTrophies_.CalculateSize(_map_userTrophies_codec);
    size += userCertificates_.CalculateSize(_map_userCertificates_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Honor_Wall_Info other) {
    if (other == null) {
      return;
    }
    userTrophies_.Add(other.userTrophies_);
    userCertificates_.Add(other.userCertificates_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          userTrophies_.AddEntriesFrom(input, _map_userTrophies_codec);
          break;
        }
        case 18: {
          userCertificates_.AddEntriesFrom(input, _map_userCertificates_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_end_course_r				= 739;
/// </summary>
public sealed partial class CMD_End_Course_r_Parameters : pb::IMessage<CMD_End_Course_r_Parameters> {
  private static readonly pb::MessageParser<CMD_End_Course_r_Parameters> _parser = new pb::MessageParser<CMD_End_Course_r_Parameters>(() => new CMD_End_Course_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_End_Course_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[225]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_End_Course_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_End_Course_r_Parameters(CMD_End_Course_r_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_End_Course_r_Parameters Clone() {
    return new CMD_End_Course_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_End_Course_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_End_Course_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_End_Course_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_end_course_a				= 740;
/// </summary>
public sealed partial class CMD_End_Course_a_Parameters : pb::IMessage<CMD_End_Course_a_Parameters> {
  private static readonly pb::MessageParser<CMD_End_Course_a_Parameters> _parser = new pb::MessageParser<CMD_End_Course_a_Parameters>(() => new CMD_End_Course_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_End_Course_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[226]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_End_Course_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_End_Course_a_Parameters(CMD_End_Course_a_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_End_Course_a_Parameters Clone() {
    return new CMD_End_Course_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_End_Course_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_End_Course_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_End_Course_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_honorwall_r				= 801;
/// </summary>
public sealed partial class CMD_Get_Honorwall_r_Parameters : pb::IMessage<CMD_Get_Honorwall_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Honorwall_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Honorwall_r_Parameters>(() => new CMD_Get_Honorwall_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Honorwall_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[227]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_r_Parameters(CMD_Get_Honorwall_r_Parameters other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_r_Parameters Clone() {
    return new CMD_Get_Honorwall_r_Parameters(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Honorwall_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Honorwall_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Honorwall_r_Parameters other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// 	cmd_get_honorwall_a				= 802;
/// </summary>
public sealed partial class CMD_Get_Honorwall_a_Parameters : pb::IMessage<CMD_Get_Honorwall_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Honorwall_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Honorwall_a_Parameters>(() => new CMD_Get_Honorwall_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Honorwall_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[228]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_a_Parameters(CMD_Get_Honorwall_a_Parameters other) : this() {
    HonorwallInfo = other.honorwallInfo_ != null ? other.HonorwallInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_a_Parameters Clone() {
    return new CMD_Get_Honorwall_a_Parameters(this);
  }

  /// <summary>Field number for the "honorwall_info" field.</summary>
  public const int HonorwallInfoFieldNumber = 1;
  private global::Honor_Wall_Info honorwallInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Honor_Wall_Info HonorwallInfo {
    get { return honorwallInfo_; }
    set {
      honorwallInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Honorwall_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Honorwall_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(HonorwallInfo, other.HonorwallInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (honorwallInfo_ != null) hash ^= HonorwallInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (honorwallInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(HonorwallInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (honorwallInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HonorwallInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Honorwall_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.honorwallInfo_ != null) {
      if (honorwallInfo_ == null) {
        honorwallInfo_ = new global::Honor_Wall_Info();
      }
      HonorwallInfo.MergeFrom(other.HonorwallInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (honorwallInfo_ == null) {
            honorwallInfo_ = new global::Honor_Wall_Info();
          }
          input.ReadMessage(honorwallInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_new_honorwall_r			= 803;
/// </summary>
public sealed partial class CMD_Get_New_Honorwall_r_Parameters : pb::IMessage<CMD_Get_New_Honorwall_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_New_Honorwall_r_Parameters> _parser = new pb::MessageParser<CMD_Get_New_Honorwall_r_Parameters>(() => new CMD_Get_New_Honorwall_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_New_Honorwall_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[229]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_New_Honorwall_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_New_Honorwall_r_Parameters(CMD_Get_New_Honorwall_r_Parameters other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_New_Honorwall_r_Parameters Clone() {
    return new CMD_Get_New_Honorwall_r_Parameters(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_New_Honorwall_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_New_Honorwall_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_New_Honorwall_r_Parameters other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

/// <summary>
/// 	cmd_get_new_honorwall_a			= 804;
/// </summary>
public sealed partial class CMD_Get_New_Honorwall_a_Parameters : pb::IMessage<CMD_Get_New_Honorwall_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_New_Honorwall_a_Parameters> _parser = new pb::MessageParser<CMD_Get_New_Honorwall_a_Parameters>(() => new CMD_Get_New_Honorwall_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_New_Honorwall_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[230]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_New_Honorwall_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_New_Honorwall_a_Parameters(CMD_Get_New_Honorwall_a_Parameters other) : this() {
    HonorwallInfo = other.honorwallInfo_ != null ? other.HonorwallInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_New_Honorwall_a_Parameters Clone() {
    return new CMD_Get_New_Honorwall_a_Parameters(this);
  }

  /// <summary>Field number for the "honorwall_info" field.</summary>
  public const int HonorwallInfoFieldNumber = 1;
  private global::Honor_Wall_Info honorwallInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Honor_Wall_Info HonorwallInfo {
    get { return honorwallInfo_; }
    set {
      honorwallInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_New_Honorwall_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_New_Honorwall_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(HonorwallInfo, other.HonorwallInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (honorwallInfo_ != null) hash ^= HonorwallInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (honorwallInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(HonorwallInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (honorwallInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HonorwallInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_New_Honorwall_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.honorwallInfo_ != null) {
      if (honorwallInfo_ == null) {
        honorwallInfo_ = new global::Honor_Wall_Info();
      }
      HonorwallInfo.MergeFrom(other.HonorwallInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (honorwallInfo_ == null) {
            honorwallInfo_ = new global::Honor_Wall_Info();
          }
          input.ReadMessage(honorwallInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_honorwall_state_r	= 805;
/// </summary>
public sealed partial class CMD_Update_Honorwall_State_r_Parameters : pb::IMessage<CMD_Update_Honorwall_State_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_Honorwall_State_r_Parameters> _parser = new pb::MessageParser<CMD_Update_Honorwall_State_r_Parameters>(() => new CMD_Update_Honorwall_State_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_Honorwall_State_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[231]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Honorwall_State_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Honorwall_State_r_Parameters(CMD_Update_Honorwall_State_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    trophy_ = other.trophy_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Honorwall_State_r_Parameters Clone() {
    return new CMD_Update_Honorwall_State_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "trophy" field.</summary>
  public const int TrophyFieldNumber = 2;
  private uint trophy_;
  /// <summary>
  ///  trophy=1 certificate=0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Trophy {
    get { return trophy_; }
    set {
      trophy_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_Honorwall_State_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_Honorwall_State_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (Trophy != other.Trophy) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (Trophy != 0) hash ^= Trophy.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (Trophy != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Trophy);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (Trophy != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Trophy);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_Honorwall_State_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.Trophy != 0) {
      Trophy = other.Trophy;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          Trophy = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_update_honorwall_state_a	= 806;
/// </summary>
public sealed partial class CMD_Update_Honorwall_State_a_Parameters : pb::IMessage<CMD_Update_Honorwall_State_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Update_Honorwall_State_a_Parameters> _parser = new pb::MessageParser<CMD_Update_Honorwall_State_a_Parameters>(() => new CMD_Update_Honorwall_State_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Update_Honorwall_State_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[232]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Honorwall_State_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Honorwall_State_a_Parameters(CMD_Update_Honorwall_State_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    trophy_ = other.trophy_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Update_Honorwall_State_a_Parameters Clone() {
    return new CMD_Update_Honorwall_State_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "trophy" field.</summary>
  public const int TrophyFieldNumber = 2;
  private uint trophy_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Trophy {
    get { return trophy_; }
    set {
      trophy_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Update_Honorwall_State_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Update_Honorwall_State_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (Trophy != other.Trophy) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (Trophy != 0) hash ^= Trophy.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (Trophy != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Trophy);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (Trophy != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Trophy);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Update_Honorwall_State_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.Trophy != 0) {
      Trophy = other.Trophy;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          Trophy = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class Honor_Rank_Unit : pb::IMessage<Honor_Rank_Unit> {
  private static readonly pb::MessageParser<Honor_Rank_Unit> _parser = new pb::MessageParser<Honor_Rank_Unit>(() => new Honor_Rank_Unit());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Honor_Rank_Unit> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[233]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Honor_Rank_Unit() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Honor_Rank_Unit(Honor_Rank_Unit other) : this() {
    UserDisplayInfo = other.userDisplayInfo_ != null ? other.UserDisplayInfo.Clone() : null;
    rankId_ = other.rankId_;
    trophyCount_ = other.trophyCount_;
    certificateCount_ = other.certificateCount_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Honor_Rank_Unit Clone() {
    return new Honor_Rank_Unit(this);
  }

  /// <summary>Field number for the "user_display_info" field.</summary>
  public const int UserDisplayInfoFieldNumber = 1;
  private global::A8_User_Display_Info userDisplayInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::A8_User_Display_Info UserDisplayInfo {
    get { return userDisplayInfo_; }
    set {
      userDisplayInfo_ = value;
    }
  }

  /// <summary>Field number for the "rank_id" field.</summary>
  public const int RankIdFieldNumber = 2;
  private uint rankId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint RankId {
    get { return rankId_; }
    set {
      rankId_ = value;
    }
  }

  /// <summary>Field number for the "trophy_count" field.</summary>
  public const int TrophyCountFieldNumber = 3;
  private uint trophyCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TrophyCount {
    get { return trophyCount_; }
    set {
      trophyCount_ = value;
    }
  }

  /// <summary>Field number for the "certificate_count" field.</summary>
  public const int CertificateCountFieldNumber = 4;
  private uint certificateCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CertificateCount {
    get { return certificateCount_; }
    set {
      certificateCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Honor_Rank_Unit);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Honor_Rank_Unit other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(UserDisplayInfo, other.UserDisplayInfo)) return false;
    if (RankId != other.RankId) return false;
    if (TrophyCount != other.TrophyCount) return false;
    if (CertificateCount != other.CertificateCount) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (userDisplayInfo_ != null) hash ^= UserDisplayInfo.GetHashCode();
    if (RankId != 0) hash ^= RankId.GetHashCode();
    if (TrophyCount != 0) hash ^= TrophyCount.GetHashCode();
    if (CertificateCount != 0) hash ^= CertificateCount.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (userDisplayInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(UserDisplayInfo);
    }
    if (RankId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(RankId);
    }
    if (TrophyCount != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(TrophyCount);
    }
    if (CertificateCount != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(CertificateCount);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (userDisplayInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserDisplayInfo);
    }
    if (RankId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankId);
    }
    if (TrophyCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrophyCount);
    }
    if (CertificateCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CertificateCount);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Honor_Rank_Unit other) {
    if (other == null) {
      return;
    }
    if (other.userDisplayInfo_ != null) {
      if (userDisplayInfo_ == null) {
        userDisplayInfo_ = new global::A8_User_Display_Info();
      }
      UserDisplayInfo.MergeFrom(other.UserDisplayInfo);
    }
    if (other.RankId != 0) {
      RankId = other.RankId;
    }
    if (other.TrophyCount != 0) {
      TrophyCount = other.TrophyCount;
    }
    if (other.CertificateCount != 0) {
      CertificateCount = other.CertificateCount;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (userDisplayInfo_ == null) {
            userDisplayInfo_ = new global::A8_User_Display_Info();
          }
          input.ReadMessage(userDisplayInfo_);
          break;
        }
        case 16: {
          RankId = input.ReadUInt32();
          break;
        }
        case 24: {
          TrophyCount = input.ReadUInt32();
          break;
        }
        case 32: {
          CertificateCount = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_honorwall_rank_r		= 807;
/// </summary>
public sealed partial class CMD_Get_Honorwall_Rank_r_Parameters : pb::IMessage<CMD_Get_Honorwall_Rank_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Honorwall_Rank_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Honorwall_Rank_r_Parameters>(() => new CMD_Get_Honorwall_Rank_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Honorwall_Rank_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[234]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_Rank_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_Rank_r_Parameters(CMD_Get_Honorwall_Rank_r_Parameters other) : this() {
    reqType_ = other.reqType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_Rank_r_Parameters Clone() {
    return new CMD_Get_Honorwall_Rank_r_Parameters(this);
  }

  /// <summary>Field number for the "req_type" field.</summary>
  public const int ReqTypeFieldNumber = 1;
  private uint reqType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqType {
    get { return reqType_; }
    set {
      reqType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Honorwall_Rank_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Honorwall_Rank_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqType != other.ReqType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqType != 0) hash ^= ReqType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqType != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ReqType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Honorwall_Rank_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqType != 0) {
      ReqType = other.ReqType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          ReqType = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_honorwall_rank_a		= 808;
/// </summary>
public sealed partial class CMD_Get_Honorwall_Rank_a_Parameters : pb::IMessage<CMD_Get_Honorwall_Rank_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Honorwall_Rank_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Honorwall_Rank_a_Parameters>(() => new CMD_Get_Honorwall_Rank_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Honorwall_Rank_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[235]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_Rank_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_Rank_a_Parameters(CMD_Get_Honorwall_Rank_a_Parameters other) : this() {
    rankList_ = other.rankList_.Clone();
    SelfInfo = other.selfInfo_ != null ? other.SelfInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Honorwall_Rank_a_Parameters Clone() {
    return new CMD_Get_Honorwall_Rank_a_Parameters(this);
  }

  /// <summary>Field number for the "rank_list" field.</summary>
  public const int RankListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Honor_Rank_Unit> _repeated_rankList_codec
      = pb::FieldCodec.ForMessage(10, global::Honor_Rank_Unit.Parser);
  private readonly pbc::RepeatedField<global::Honor_Rank_Unit> rankList_ = new pbc::RepeatedField<global::Honor_Rank_Unit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Honor_Rank_Unit> RankList {
    get { return rankList_; }
  }

  /// <summary>Field number for the "self_info" field.</summary>
  public const int SelfInfoFieldNumber = 2;
  private global::Honor_Rank_Unit selfInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Honor_Rank_Unit SelfInfo {
    get { return selfInfo_; }
    set {
      selfInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Honorwall_Rank_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Honorwall_Rank_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rankList_.Equals(other.rankList_)) return false;
    if (!object.Equals(SelfInfo, other.SelfInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rankList_.GetHashCode();
    if (selfInfo_ != null) hash ^= SelfInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rankList_.WriteTo(output, _repeated_rankList_codec);
    if (selfInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(SelfInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rankList_.CalculateSize(_repeated_rankList_codec);
    if (selfInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Honorwall_Rank_a_Parameters other) {
    if (other == null) {
      return;
    }
    rankList_.Add(other.rankList_);
    if (other.selfInfo_ != null) {
      if (selfInfo_ == null) {
        selfInfo_ = new global::Honor_Rank_Unit();
      }
      SelfInfo.MergeFrom(other.SelfInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          rankList_.AddEntriesFrom(input, _repeated_rankList_codec);
          break;
        }
        case 18: {
          if (selfInfo_ == null) {
            selfInfo_ = new global::Honor_Rank_Unit();
          }
          input.ReadMessage(selfInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_course_trophy_setting_r	= 851;
/// </summary>
public sealed partial class CMD_Set_Course_Trophy_Setting_r_Parameters : pb::IMessage<CMD_Set_Course_Trophy_Setting_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Set_Course_Trophy_Setting_r_Parameters> _parser = new pb::MessageParser<CMD_Set_Course_Trophy_Setting_r_Parameters>(() => new CMD_Set_Course_Trophy_Setting_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Course_Trophy_Setting_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[236]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Trophy_Setting_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Trophy_Setting_r_Parameters(CMD_Set_Course_Trophy_Setting_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    courseRaceType_ = other.courseRaceType_;
    TrophiesSetting = other.trophiesSetting_ != null ? other.TrophiesSetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Trophy_Setting_r_Parameters Clone() {
    return new CMD_Set_Course_Trophy_Setting_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_race_type" field.</summary>
  public const int CourseRaceTypeFieldNumber = 2;
  private global::Course_Race_Type courseRaceType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Race_Type CourseRaceType {
    get { return courseRaceType_; }
    set {
      courseRaceType_ = value;
    }
  }

  /// <summary>Field number for the "trophies_setting" field.</summary>
  public const int TrophiesSettingFieldNumber = 3;
  private global::Trophies_Setting trophiesSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophies_Setting TrophiesSetting {
    get { return trophiesSetting_; }
    set {
      trophiesSetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Course_Trophy_Setting_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Course_Trophy_Setting_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CourseRaceType != other.CourseRaceType) return false;
    if (!object.Equals(TrophiesSetting, other.TrophiesSetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CourseRaceType != 0) hash ^= CourseRaceType.GetHashCode();
    if (trophiesSetting_ != null) hash ^= TrophiesSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CourseRaceType != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CourseRaceType);
    }
    if (trophiesSetting_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(TrophiesSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CourseRaceType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseRaceType);
    }
    if (trophiesSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrophiesSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Course_Trophy_Setting_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CourseRaceType != 0) {
      CourseRaceType = other.CourseRaceType;
    }
    if (other.trophiesSetting_ != null) {
      if (trophiesSetting_ == null) {
        trophiesSetting_ = new global::Trophies_Setting();
      }
      TrophiesSetting.MergeFrom(other.TrophiesSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          courseRaceType_ = (global::Course_Race_Type) input.ReadEnum();
          break;
        }
        case 26: {
          if (trophiesSetting_ == null) {
            trophiesSetting_ = new global::Trophies_Setting();
          }
          input.ReadMessage(trophiesSetting_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_course_trophy_setting_a	= 852;
/// </summary>
public sealed partial class CMD_Set_Course_Trophy_Setting_a_Parameters : pb::IMessage<CMD_Set_Course_Trophy_Setting_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Set_Course_Trophy_Setting_a_Parameters> _parser = new pb::MessageParser<CMD_Set_Course_Trophy_Setting_a_Parameters>(() => new CMD_Set_Course_Trophy_Setting_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Course_Trophy_Setting_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[237]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Trophy_Setting_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Trophy_Setting_a_Parameters(CMD_Set_Course_Trophy_Setting_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    courseRaceType_ = other.courseRaceType_;
    TrophiesSetting = other.trophiesSetting_ != null ? other.TrophiesSetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Trophy_Setting_a_Parameters Clone() {
    return new CMD_Set_Course_Trophy_Setting_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_race_type" field.</summary>
  public const int CourseRaceTypeFieldNumber = 2;
  private global::Course_Race_Type courseRaceType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Race_Type CourseRaceType {
    get { return courseRaceType_; }
    set {
      courseRaceType_ = value;
    }
  }

  /// <summary>Field number for the "trophies_setting" field.</summary>
  public const int TrophiesSettingFieldNumber = 3;
  private global::Trophies_Setting trophiesSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophies_Setting TrophiesSetting {
    get { return trophiesSetting_; }
    set {
      trophiesSetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Course_Trophy_Setting_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Course_Trophy_Setting_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CourseRaceType != other.CourseRaceType) return false;
    if (!object.Equals(TrophiesSetting, other.TrophiesSetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CourseRaceType != 0) hash ^= CourseRaceType.GetHashCode();
    if (trophiesSetting_ != null) hash ^= TrophiesSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CourseRaceType != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CourseRaceType);
    }
    if (trophiesSetting_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(TrophiesSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CourseRaceType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseRaceType);
    }
    if (trophiesSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrophiesSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Course_Trophy_Setting_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CourseRaceType != 0) {
      CourseRaceType = other.CourseRaceType;
    }
    if (other.trophiesSetting_ != null) {
      if (trophiesSetting_ == null) {
        trophiesSetting_ = new global::Trophies_Setting();
      }
      TrophiesSetting.MergeFrom(other.TrophiesSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          courseRaceType_ = (global::Course_Race_Type) input.ReadEnum();
          break;
        }
        case 26: {
          if (trophiesSetting_ == null) {
            trophiesSetting_ = new global::Trophies_Setting();
          }
          input.ReadMessage(trophiesSetting_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_course_trophy_setting_r	= 853;
/// </summary>
public sealed partial class CMD_Get_Course_Trophy_Setting_r_Parameters : pb::IMessage<CMD_Get_Course_Trophy_Setting_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Course_Trophy_Setting_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Course_Trophy_Setting_r_Parameters>(() => new CMD_Get_Course_Trophy_Setting_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Course_Trophy_Setting_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[238]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Trophy_Setting_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Trophy_Setting_r_Parameters(CMD_Get_Course_Trophy_Setting_r_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Trophy_Setting_r_Parameters Clone() {
    return new CMD_Get_Course_Trophy_Setting_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Course_Trophy_Setting_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Course_Trophy_Setting_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Course_Trophy_Setting_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_course_trophy_setting_a	= 854;
/// </summary>
public sealed partial class CMD_Get_Course_Trophy_Setting_a_Parameters : pb::IMessage<CMD_Get_Course_Trophy_Setting_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Course_Trophy_Setting_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Course_Trophy_Setting_a_Parameters>(() => new CMD_Get_Course_Trophy_Setting_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Course_Trophy_Setting_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[239]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Trophy_Setting_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Trophy_Setting_a_Parameters(CMD_Get_Course_Trophy_Setting_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    courseRaceType_ = other.courseRaceType_;
    TrophiesSetting = other.trophiesSetting_ != null ? other.TrophiesSetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Trophy_Setting_a_Parameters Clone() {
    return new CMD_Get_Course_Trophy_Setting_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_race_type" field.</summary>
  public const int CourseRaceTypeFieldNumber = 2;
  private global::Course_Race_Type courseRaceType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Course_Race_Type CourseRaceType {
    get { return courseRaceType_; }
    set {
      courseRaceType_ = value;
    }
  }

  /// <summary>Field number for the "trophies_setting" field.</summary>
  public const int TrophiesSettingFieldNumber = 3;
  private global::Trophies_Setting trophiesSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Trophies_Setting TrophiesSetting {
    get { return trophiesSetting_; }
    set {
      trophiesSetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Course_Trophy_Setting_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Course_Trophy_Setting_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (CourseRaceType != other.CourseRaceType) return false;
    if (!object.Equals(TrophiesSetting, other.TrophiesSetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (CourseRaceType != 0) hash ^= CourseRaceType.GetHashCode();
    if (trophiesSetting_ != null) hash ^= TrophiesSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (CourseRaceType != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CourseRaceType);
    }
    if (trophiesSetting_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(TrophiesSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (CourseRaceType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CourseRaceType);
    }
    if (trophiesSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrophiesSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Course_Trophy_Setting_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.CourseRaceType != 0) {
      CourseRaceType = other.CourseRaceType;
    }
    if (other.trophiesSetting_ != null) {
      if (trophiesSetting_ == null) {
        trophiesSetting_ = new global::Trophies_Setting();
      }
      TrophiesSetting.MergeFrom(other.TrophiesSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 16: {
          courseRaceType_ = (global::Course_Race_Type) input.ReadEnum();
          break;
        }
        case 26: {
          if (trophiesSetting_ == null) {
            trophiesSetting_ = new global::Trophies_Setting();
          }
          input.ReadMessage(trophiesSetting_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_course_certificate_setting_r	= 855;
/// </summary>
public sealed partial class CMD_Set_Course_Certificate_Setting_r_Parameters : pb::IMessage<CMD_Set_Course_Certificate_Setting_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Set_Course_Certificate_Setting_r_Parameters> _parser = new pb::MessageParser<CMD_Set_Course_Certificate_Setting_r_Parameters>(() => new CMD_Set_Course_Certificate_Setting_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Course_Certificate_Setting_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[240]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Certificate_Setting_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Certificate_Setting_r_Parameters(CMD_Set_Course_Certificate_Setting_r_Parameters other) : this() {
    courseId_ = other.courseId_;
    CourseCertificateSetting = other.courseCertificateSetting_ != null ? other.CourseCertificateSetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Certificate_Setting_r_Parameters Clone() {
    return new CMD_Set_Course_Certificate_Setting_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_certificate_setting" field.</summary>
  public const int CourseCertificateSettingFieldNumber = 2;
  private global::Certificate_Setting courseCertificateSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Certificate_Setting CourseCertificateSetting {
    get { return courseCertificateSetting_; }
    set {
      courseCertificateSetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Course_Certificate_Setting_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Course_Certificate_Setting_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (!object.Equals(CourseCertificateSetting, other.CourseCertificateSetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (courseCertificateSetting_ != null) hash ^= CourseCertificateSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (courseCertificateSetting_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(CourseCertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (courseCertificateSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseCertificateSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Course_Certificate_Setting_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.courseCertificateSetting_ != null) {
      if (courseCertificateSetting_ == null) {
        courseCertificateSetting_ = new global::Certificate_Setting();
      }
      CourseCertificateSetting.MergeFrom(other.CourseCertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (courseCertificateSetting_ == null) {
            courseCertificateSetting_ = new global::Certificate_Setting();
          }
          input.ReadMessage(courseCertificateSetting_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_course_certificate_setting_a	= 856;
/// </summary>
public sealed partial class CMD_Set_Course_Certificate_Setting_a_Parameters : pb::IMessage<CMD_Set_Course_Certificate_Setting_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Set_Course_Certificate_Setting_a_Parameters> _parser = new pb::MessageParser<CMD_Set_Course_Certificate_Setting_a_Parameters>(() => new CMD_Set_Course_Certificate_Setting_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Course_Certificate_Setting_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[241]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Certificate_Setting_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Certificate_Setting_a_Parameters(CMD_Set_Course_Certificate_Setting_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    CourseCertificateSetting = other.courseCertificateSetting_ != null ? other.CourseCertificateSetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Course_Certificate_Setting_a_Parameters Clone() {
    return new CMD_Set_Course_Certificate_Setting_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_certificate_setting" field.</summary>
  public const int CourseCertificateSettingFieldNumber = 2;
  private global::Certificate_Setting courseCertificateSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Certificate_Setting CourseCertificateSetting {
    get { return courseCertificateSetting_; }
    set {
      courseCertificateSetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Course_Certificate_Setting_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Course_Certificate_Setting_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (!object.Equals(CourseCertificateSetting, other.CourseCertificateSetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (courseCertificateSetting_ != null) hash ^= CourseCertificateSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (courseCertificateSetting_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(CourseCertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (courseCertificateSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseCertificateSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Course_Certificate_Setting_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.courseCertificateSetting_ != null) {
      if (courseCertificateSetting_ == null) {
        courseCertificateSetting_ = new global::Certificate_Setting();
      }
      CourseCertificateSetting.MergeFrom(other.CourseCertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (courseCertificateSetting_ == null) {
            courseCertificateSetting_ = new global::Certificate_Setting();
          }
          input.ReadMessage(courseCertificateSetting_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_course_certificate_setting_r	= 857;
/// </summary>
public sealed partial class CMD_Get_Course_Certificate_Setting_r_Parameters : pb::IMessage<CMD_Get_Course_Certificate_Setting_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Course_Certificate_Setting_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Course_Certificate_Setting_r_Parameters>(() => new CMD_Get_Course_Certificate_Setting_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Course_Certificate_Setting_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[242]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Certificate_Setting_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Certificate_Setting_r_Parameters(CMD_Get_Course_Certificate_Setting_r_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Certificate_Setting_r_Parameters Clone() {
    return new CMD_Get_Course_Certificate_Setting_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Course_Certificate_Setting_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Course_Certificate_Setting_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Course_Certificate_Setting_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_course_certificate_setting_a	= 858;
/// </summary>
public sealed partial class CMD_Get_Course_Certificate_Setting_a_Parameters : pb::IMessage<CMD_Get_Course_Certificate_Setting_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Course_Certificate_Setting_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Course_Certificate_Setting_a_Parameters>(() => new CMD_Get_Course_Certificate_Setting_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Course_Certificate_Setting_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[243]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Certificate_Setting_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Certificate_Setting_a_Parameters(CMD_Get_Course_Certificate_Setting_a_Parameters other) : this() {
    courseId_ = other.courseId_;
    CourseCertificateSetting = other.courseCertificateSetting_ != null ? other.CourseCertificateSetting.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Course_Certificate_Setting_a_Parameters Clone() {
    return new CMD_Get_Course_Certificate_Setting_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  /// <summary>Field number for the "course_certificate_setting" field.</summary>
  public const int CourseCertificateSettingFieldNumber = 2;
  private global::Certificate_Setting courseCertificateSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Certificate_Setting CourseCertificateSetting {
    get { return courseCertificateSetting_; }
    set {
      courseCertificateSetting_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Course_Certificate_Setting_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Course_Certificate_Setting_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    if (!object.Equals(CourseCertificateSetting, other.CourseCertificateSetting)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    if (courseCertificateSetting_ != null) hash ^= CourseCertificateSetting.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
    if (courseCertificateSetting_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(CourseCertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    if (courseCertificateSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CourseCertificateSetting);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Course_Certificate_Setting_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
    if (other.courseCertificateSetting_ != null) {
      if (courseCertificateSetting_ == null) {
        courseCertificateSetting_ = new global::Certificate_Setting();
      }
      CourseCertificateSetting.MergeFrom(other.CourseCertificateSetting);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (courseCertificateSetting_ == null) {
            courseCertificateSetting_ = new global::Certificate_Setting();
          }
          input.ReadMessage(courseCertificateSetting_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_course_trophy_setting_r			= 859;
/// </summary>
public sealed partial class CMD_Del_Course_Trophy_Setting_r_Parameters : pb::IMessage<CMD_Del_Course_Trophy_Setting_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Course_Trophy_Setting_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Course_Trophy_Setting_r_Parameters>(() => new CMD_Del_Course_Trophy_Setting_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Course_Trophy_Setting_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[244]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Trophy_Setting_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Trophy_Setting_r_Parameters(CMD_Del_Course_Trophy_Setting_r_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Trophy_Setting_r_Parameters Clone() {
    return new CMD_Del_Course_Trophy_Setting_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Course_Trophy_Setting_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Course_Trophy_Setting_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Course_Trophy_Setting_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_course_trophy_setting_a			= 860;
/// </summary>
public sealed partial class CMD_Del_Course_Trophy_Setting_a_Parameters : pb::IMessage<CMD_Del_Course_Trophy_Setting_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Course_Trophy_Setting_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Course_Trophy_Setting_a_Parameters>(() => new CMD_Del_Course_Trophy_Setting_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Course_Trophy_Setting_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[245]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Trophy_Setting_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Trophy_Setting_a_Parameters(CMD_Del_Course_Trophy_Setting_a_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Trophy_Setting_a_Parameters Clone() {
    return new CMD_Del_Course_Trophy_Setting_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Course_Trophy_Setting_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Course_Trophy_Setting_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Course_Trophy_Setting_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_course_certificate_setting_r	= 861;
/// </summary>
public sealed partial class CMD_Del_Course_Certificate_Setting_r_Parameters : pb::IMessage<CMD_Del_Course_Certificate_Setting_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Course_Certificate_Setting_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Course_Certificate_Setting_r_Parameters>(() => new CMD_Del_Course_Certificate_Setting_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Course_Certificate_Setting_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[246]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Certificate_Setting_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Certificate_Setting_r_Parameters(CMD_Del_Course_Certificate_Setting_r_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Certificate_Setting_r_Parameters Clone() {
    return new CMD_Del_Course_Certificate_Setting_r_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Course_Certificate_Setting_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Course_Certificate_Setting_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Course_Certificate_Setting_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_course_certificate_setting_a	= 862;
/// </summary>
public sealed partial class CMD_Del_Course_Certificate_Setting_a_Parameters : pb::IMessage<CMD_Del_Course_Certificate_Setting_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Course_Certificate_Setting_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Course_Certificate_Setting_a_Parameters>(() => new CMD_Del_Course_Certificate_Setting_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Course_Certificate_Setting_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[247]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Certificate_Setting_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Certificate_Setting_a_Parameters(CMD_Del_Course_Certificate_Setting_a_Parameters other) : this() {
    courseId_ = other.courseId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Course_Certificate_Setting_a_Parameters Clone() {
    return new CMD_Del_Course_Certificate_Setting_a_Parameters(this);
  }

  /// <summary>Field number for the "course_id" field.</summary>
  public const int CourseIdFieldNumber = 1;
  private uint courseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CourseId {
    get { return courseId_; }
    set {
      courseId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Course_Certificate_Setting_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Course_Certificate_Setting_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CourseId != other.CourseId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CourseId != 0) hash ^= CourseId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CourseId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(CourseId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CourseId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CourseId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Course_Certificate_Setting_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CourseId != 0) {
      CourseId = other.CourseId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          CourseId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_new_honor_notify					= 864;
/// </summary>
public sealed partial class CMD_New_Honor_Notify_Parameters : pb::IMessage<CMD_New_Honor_Notify_Parameters> {
  private static readonly pb::MessageParser<CMD_New_Honor_Notify_Parameters> _parser = new pb::MessageParser<CMD_New_Honor_Notify_Parameters>(() => new CMD_New_Honor_Notify_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_New_Honor_Notify_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[248]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_New_Honor_Notify_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_New_Honor_Notify_Parameters(CMD_New_Honor_Notify_Parameters other) : this() {
    NewHonorInfo = other.newHonorInfo_ != null ? other.NewHonorInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_New_Honor_Notify_Parameters Clone() {
    return new CMD_New_Honor_Notify_Parameters(this);
  }

  /// <summary>Field number for the "new_honor_info" field.</summary>
  public const int NewHonorInfoFieldNumber = 1;
  private global::Honor_Wall_Info newHonorInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Honor_Wall_Info NewHonorInfo {
    get { return newHonorInfo_; }
    set {
      newHonorInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_New_Honor_Notify_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_New_Honor_Notify_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(NewHonorInfo, other.NewHonorInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (newHonorInfo_ != null) hash ^= NewHonorInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (newHonorInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(NewHonorInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (newHonorInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewHonorInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_New_Honor_Notify_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.newHonorInfo_ != null) {
      if (newHonorInfo_ == null) {
        newHonorInfo_ = new global::Honor_Wall_Info();
      }
      NewHonorInfo.MergeFrom(other.NewHonorInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (newHonorInfo_ == null) {
            newHonorInfo_ = new global::Honor_Wall_Info();
          }
          input.ReadMessage(newHonorInfo_);
          break;
        }
      }
    }
  }

}

public sealed partial class User_Shared_Info : pb::IMessage<User_Shared_Info> {
  private static readonly pb::MessageParser<User_Shared_Info> _parser = new pb::MessageParser<User_Shared_Info>(() => new User_Shared_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Shared_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[249]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Shared_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Shared_Info(User_Shared_Info other) : this() {
    sharedId_ = other.sharedId_;
    createId_ = other.createId_;
    createNickname_ = other.createNickname_;
    sharedName_ = other.sharedName_;
    sharedDescript_ = other.sharedDescript_;
    sharedType_ = other.sharedType_;
    createTime_ = other.createTime_;
    updateTime_ = other.updateTime_;
    SharedData = other.sharedData_ != null ? other.SharedData.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Shared_Info Clone() {
    return new User_Shared_Info(this);
  }

  /// <summary>Field number for the "shared_id" field.</summary>
  public const int SharedIdFieldNumber = 1;
  private uint sharedId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SharedId {
    get { return sharedId_; }
    set {
      sharedId_ = value;
    }
  }

  /// <summary>Field number for the "create_id" field.</summary>
  public const int CreateIdFieldNumber = 2;
  private uint createId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CreateId {
    get { return createId_; }
    set {
      createId_ = value;
    }
  }

  /// <summary>Field number for the "create_nickname" field.</summary>
  public const int CreateNicknameFieldNumber = 3;
  private string createNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CreateNickname {
    get { return createNickname_; }
    set {
      createNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_name" field.</summary>
  public const int SharedNameFieldNumber = 4;
  private string sharedName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedName {
    get { return sharedName_; }
    set {
      sharedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_descript" field.</summary>
  public const int SharedDescriptFieldNumber = 5;
  private string sharedDescript_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedDescript {
    get { return sharedDescript_; }
    set {
      sharedDescript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_type" field.</summary>
  public const int SharedTypeFieldNumber = 6;
  private global::Shared_Type sharedType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Type SharedType {
    get { return sharedType_; }
    set {
      sharedType_ = value;
    }
  }

  /// <summary>Field number for the "create_time" field.</summary>
  public const int CreateTimeFieldNumber = 7;
  private ulong createTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong CreateTime {
    get { return createTime_; }
    set {
      createTime_ = value;
    }
  }

  /// <summary>Field number for the "update_time" field.</summary>
  public const int UpdateTimeFieldNumber = 8;
  private ulong updateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong UpdateTime {
    get { return updateTime_; }
    set {
      updateTime_ = value;
    }
  }

  /// <summary>Field number for the "shared_data" field.</summary>
  public const int SharedDataFieldNumber = 9;
  private global::FileList sharedData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList SharedData {
    get { return sharedData_; }
    set {
      sharedData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Shared_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Shared_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedId != other.SharedId) return false;
    if (CreateId != other.CreateId) return false;
    if (CreateNickname != other.CreateNickname) return false;
    if (SharedName != other.SharedName) return false;
    if (SharedDescript != other.SharedDescript) return false;
    if (SharedType != other.SharedType) return false;
    if (CreateTime != other.CreateTime) return false;
    if (UpdateTime != other.UpdateTime) return false;
    if (!object.Equals(SharedData, other.SharedData)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedId != 0) hash ^= SharedId.GetHashCode();
    if (CreateId != 0) hash ^= CreateId.GetHashCode();
    if (CreateNickname.Length != 0) hash ^= CreateNickname.GetHashCode();
    if (SharedName.Length != 0) hash ^= SharedName.GetHashCode();
    if (SharedDescript.Length != 0) hash ^= SharedDescript.GetHashCode();
    if (SharedType != 0) hash ^= SharedType.GetHashCode();
    if (CreateTime != 0UL) hash ^= CreateTime.GetHashCode();
    if (UpdateTime != 0UL) hash ^= UpdateTime.GetHashCode();
    if (sharedData_ != null) hash ^= SharedData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SharedId);
    }
    if (CreateId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(CreateId);
    }
    if (CreateNickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(CreateNickname);
    }
    if (SharedName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(SharedName);
    }
    if (SharedDescript.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(SharedDescript);
    }
    if (SharedType != 0) {
      output.WriteRawTag(48);
      output.WriteEnum((int) SharedType);
    }
    if (CreateTime != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(CreateTime);
    }
    if (UpdateTime != 0UL) {
      output.WriteRawTag(64);
      output.WriteUInt64(UpdateTime);
    }
    if (sharedData_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SharedId);
    }
    if (CreateId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreateId);
    }
    if (CreateNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateNickname);
    }
    if (SharedName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedName);
    }
    if (SharedDescript.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedDescript);
    }
    if (SharedType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedType);
    }
    if (CreateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreateTime);
    }
    if (UpdateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpdateTime);
    }
    if (sharedData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SharedData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Shared_Info other) {
    if (other == null) {
      return;
    }
    if (other.SharedId != 0) {
      SharedId = other.SharedId;
    }
    if (other.CreateId != 0) {
      CreateId = other.CreateId;
    }
    if (other.CreateNickname.Length != 0) {
      CreateNickname = other.CreateNickname;
    }
    if (other.SharedName.Length != 0) {
      SharedName = other.SharedName;
    }
    if (other.SharedDescript.Length != 0) {
      SharedDescript = other.SharedDescript;
    }
    if (other.SharedType != 0) {
      SharedType = other.SharedType;
    }
    if (other.CreateTime != 0UL) {
      CreateTime = other.CreateTime;
    }
    if (other.UpdateTime != 0UL) {
      UpdateTime = other.UpdateTime;
    }
    if (other.sharedData_ != null) {
      if (sharedData_ == null) {
        sharedData_ = new global::FileList();
      }
      SharedData.MergeFrom(other.SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          SharedId = input.ReadUInt32();
          break;
        }
        case 16: {
          CreateId = input.ReadUInt32();
          break;
        }
        case 26: {
          CreateNickname = input.ReadString();
          break;
        }
        case 34: {
          SharedName = input.ReadString();
          break;
        }
        case 42: {
          SharedDescript = input.ReadString();
          break;
        }
        case 48: {
          sharedType_ = (global::Shared_Type) input.ReadEnum();
          break;
        }
        case 56: {
          CreateTime = input.ReadUInt64();
          break;
        }
        case 64: {
          UpdateTime = input.ReadUInt64();
          break;
        }
        case 74: {
          if (sharedData_ == null) {
            sharedData_ = new global::FileList();
          }
          input.ReadMessage(sharedData_);
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_publish_r				=	1001
/// </summary>
public sealed partial class CMD_SharedData_Publish_r_Parameters : pb::IMessage<CMD_SharedData_Publish_r_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Publish_r_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Publish_r_Parameters>(() => new CMD_SharedData_Publish_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Publish_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[250]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Publish_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Publish_r_Parameters(CMD_SharedData_Publish_r_Parameters other) : this() {
    sharedType_ = other.sharedType_;
    sharedStatus_ = other.sharedStatus_;
    sharedName_ = other.sharedName_;
    sharedDescript_ = other.sharedDescript_;
    sharedPassword_ = other.sharedPassword_;
    SharedData = other.sharedData_ != null ? other.SharedData.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Publish_r_Parameters Clone() {
    return new CMD_SharedData_Publish_r_Parameters(this);
  }

  /// <summary>Field number for the "shared_type" field.</summary>
  public const int SharedTypeFieldNumber = 1;
  private global::Shared_Type sharedType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Type SharedType {
    get { return sharedType_; }
    set {
      sharedType_ = value;
    }
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 2;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "shared_name" field.</summary>
  public const int SharedNameFieldNumber = 3;
  private string sharedName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedName {
    get { return sharedName_; }
    set {
      sharedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_descript" field.</summary>
  public const int SharedDescriptFieldNumber = 4;
  private string sharedDescript_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedDescript {
    get { return sharedDescript_; }
    set {
      sharedDescript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_password" field.</summary>
  public const int SharedPasswordFieldNumber = 5;
  private string sharedPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedPassword {
    get { return sharedPassword_; }
    set {
      sharedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_data" field.</summary>
  public const int SharedDataFieldNumber = 6;
  private global::FileList sharedData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList SharedData {
    get { return sharedData_; }
    set {
      sharedData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Publish_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Publish_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedType != other.SharedType) return false;
    if (SharedStatus != other.SharedStatus) return false;
    if (SharedName != other.SharedName) return false;
    if (SharedDescript != other.SharedDescript) return false;
    if (SharedPassword != other.SharedPassword) return false;
    if (!object.Equals(SharedData, other.SharedData)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedType != 0) hash ^= SharedType.GetHashCode();
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (SharedName.Length != 0) hash ^= SharedName.GetHashCode();
    if (SharedDescript.Length != 0) hash ^= SharedDescript.GetHashCode();
    if (SharedPassword.Length != 0) hash ^= SharedPassword.GetHashCode();
    if (sharedData_ != null) hash ^= SharedData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SharedType);
    }
    if (SharedStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SharedStatus);
    }
    if (SharedName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(SharedName);
    }
    if (SharedDescript.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(SharedDescript);
    }
    if (SharedPassword.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(SharedPassword);
    }
    if (sharedData_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedType);
    }
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (SharedName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedName);
    }
    if (SharedDescript.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedDescript);
    }
    if (SharedPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedPassword);
    }
    if (sharedData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SharedData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Publish_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedType != 0) {
      SharedType = other.SharedType;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.SharedName.Length != 0) {
      SharedName = other.SharedName;
    }
    if (other.SharedDescript.Length != 0) {
      SharedDescript = other.SharedDescript;
    }
    if (other.SharedPassword.Length != 0) {
      SharedPassword = other.SharedPassword;
    }
    if (other.sharedData_ != null) {
      if (sharedData_ == null) {
        sharedData_ = new global::FileList();
      }
      SharedData.MergeFrom(other.SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          sharedType_ = (global::Shared_Type) input.ReadEnum();
          break;
        }
        case 16: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 26: {
          SharedName = input.ReadString();
          break;
        }
        case 34: {
          SharedDescript = input.ReadString();
          break;
        }
        case 42: {
          SharedPassword = input.ReadString();
          break;
        }
        case 50: {
          if (sharedData_ == null) {
            sharedData_ = new global::FileList();
          }
          input.ReadMessage(sharedData_);
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_publish_a				=	1002
/// </summary>
public sealed partial class CMD_SharedData_Publish_a_Parameters : pb::IMessage<CMD_SharedData_Publish_a_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Publish_a_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Publish_a_Parameters>(() => new CMD_SharedData_Publish_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Publish_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[251]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Publish_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Publish_a_Parameters(CMD_SharedData_Publish_a_Parameters other) : this() {
    sharedPath_ = other.sharedPath_;
    sharedStatus_ = other.sharedStatus_;
    SharedData = other.sharedData_ != null ? other.SharedData.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Publish_a_Parameters Clone() {
    return new CMD_SharedData_Publish_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_path" field.</summary>
  public const int SharedPathFieldNumber = 1;
  private string sharedPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedPath {
    get { return sharedPath_; }
    set {
      sharedPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 2;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "shared_data" field.</summary>
  public const int SharedDataFieldNumber = 3;
  private global::FileList sharedData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList SharedData {
    get { return sharedData_; }
    set {
      sharedData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Publish_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Publish_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedPath != other.SharedPath) return false;
    if (SharedStatus != other.SharedStatus) return false;
    if (!object.Equals(SharedData, other.SharedData)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedPath.Length != 0) hash ^= SharedPath.GetHashCode();
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (sharedData_ != null) hash ^= SharedData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SharedPath);
    }
    if (SharedStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SharedStatus);
    }
    if (sharedData_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedPath);
    }
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (sharedData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SharedData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Publish_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedPath.Length != 0) {
      SharedPath = other.SharedPath;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.sharedData_ != null) {
      if (sharedData_ == null) {
        sharedData_ = new global::FileList();
      }
      SharedData.MergeFrom(other.SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          SharedPath = input.ReadString();
          break;
        }
        case 16: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 26: {
          if (sharedData_ == null) {
            sharedData_ = new global::FileList();
          }
          input.ReadMessage(sharedData_);
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_update_r				=	1003
/// </summary>
public sealed partial class CMD_SharedData_Update_r_Parameters : pb::IMessage<CMD_SharedData_Update_r_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Update_r_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Update_r_Parameters>(() => new CMD_SharedData_Update_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Update_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[252]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Update_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Update_r_Parameters(CMD_SharedData_Update_r_Parameters other) : this() {
    sharedPath_ = other.sharedPath_;
    sharedStatus_ = other.sharedStatus_;
    UpdateData = other.updateData_ != null ? other.UpdateData.Clone() : null;
    sharedPassword_ = other.sharedPassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Update_r_Parameters Clone() {
    return new CMD_SharedData_Update_r_Parameters(this);
  }

  /// <summary>Field number for the "shared_path" field.</summary>
  public const int SharedPathFieldNumber = 1;
  private string sharedPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedPath {
    get { return sharedPath_; }
    set {
      sharedPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 2;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "update_data" field.</summary>
  public const int UpdateDataFieldNumber = 3;
  private global::FileList updateData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList UpdateData {
    get { return updateData_; }
    set {
      updateData_ = value;
    }
  }

  /// <summary>Field number for the "shared_password" field.</summary>
  public const int SharedPasswordFieldNumber = 4;
  private string sharedPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedPassword {
    get { return sharedPassword_; }
    set {
      sharedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Update_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Update_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedPath != other.SharedPath) return false;
    if (SharedStatus != other.SharedStatus) return false;
    if (!object.Equals(UpdateData, other.UpdateData)) return false;
    if (SharedPassword != other.SharedPassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedPath.Length != 0) hash ^= SharedPath.GetHashCode();
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (updateData_ != null) hash ^= UpdateData.GetHashCode();
    if (SharedPassword.Length != 0) hash ^= SharedPassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SharedPath);
    }
    if (SharedStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SharedStatus);
    }
    if (updateData_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(UpdateData);
    }
    if (SharedPassword.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(SharedPassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedPath);
    }
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (updateData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateData);
    }
    if (SharedPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedPassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Update_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedPath.Length != 0) {
      SharedPath = other.SharedPath;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.updateData_ != null) {
      if (updateData_ == null) {
        updateData_ = new global::FileList();
      }
      UpdateData.MergeFrom(other.UpdateData);
    }
    if (other.SharedPassword.Length != 0) {
      SharedPassword = other.SharedPassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          SharedPath = input.ReadString();
          break;
        }
        case 16: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 26: {
          if (updateData_ == null) {
            updateData_ = new global::FileList();
          }
          input.ReadMessage(updateData_);
          break;
        }
        case 34: {
          SharedPassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_update_a				=	1004
/// </summary>
public sealed partial class CMD_SharedData_Update_a_Parameters : pb::IMessage<CMD_SharedData_Update_a_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Update_a_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Update_a_Parameters>(() => new CMD_SharedData_Update_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Update_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[253]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Update_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Update_a_Parameters(CMD_SharedData_Update_a_Parameters other) : this() {
    sharedPath_ = other.sharedPath_;
    sharedStatus_ = other.sharedStatus_;
    SharedData = other.sharedData_ != null ? other.SharedData.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Update_a_Parameters Clone() {
    return new CMD_SharedData_Update_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_path" field.</summary>
  public const int SharedPathFieldNumber = 1;
  private string sharedPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedPath {
    get { return sharedPath_; }
    set {
      sharedPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 2;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "shared_data" field.</summary>
  public const int SharedDataFieldNumber = 3;
  private global::FileList sharedData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList SharedData {
    get { return sharedData_; }
    set {
      sharedData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Update_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Update_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedPath != other.SharedPath) return false;
    if (SharedStatus != other.SharedStatus) return false;
    if (!object.Equals(SharedData, other.SharedData)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedPath.Length != 0) hash ^= SharedPath.GetHashCode();
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (sharedData_ != null) hash ^= SharedData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SharedPath);
    }
    if (SharedStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SharedStatus);
    }
    if (sharedData_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedPath);
    }
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (sharedData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SharedData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Update_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedPath.Length != 0) {
      SharedPath = other.SharedPath;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.sharedData_ != null) {
      if (sharedData_ == null) {
        sharedData_ = new global::FileList();
      }
      SharedData.MergeFrom(other.SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          SharedPath = input.ReadString();
          break;
        }
        case 16: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 26: {
          if (sharedData_ == null) {
            sharedData_ = new global::FileList();
          }
          input.ReadMessage(sharedData_);
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_del_r					= 1005
/// </summary>
public sealed partial class CMD_SharedData_Del_r_Parameters : pb::IMessage<CMD_SharedData_Del_r_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Del_r_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Del_r_Parameters>(() => new CMD_SharedData_Del_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Del_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[254]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Del_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Del_r_Parameters(CMD_SharedData_Del_r_Parameters other) : this() {
    reqPath_ = other.reqPath_;
    reqStatus_ = other.reqStatus_;
    sharedPassword_ = other.sharedPassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Del_r_Parameters Clone() {
    return new CMD_SharedData_Del_r_Parameters(this);
  }

  /// <summary>Field number for the "req_path" field.</summary>
  public const int ReqPathFieldNumber = 1;
  private string reqPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqPath {
    get { return reqPath_; }
    set {
      reqPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "req_status" field.</summary>
  public const int ReqStatusFieldNumber = 2;
  private global::Shared_Status reqStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status ReqStatus {
    get { return reqStatus_; }
    set {
      reqStatus_ = value;
    }
  }

  /// <summary>Field number for the "shared_password" field.</summary>
  public const int SharedPasswordFieldNumber = 3;
  private string sharedPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedPassword {
    get { return sharedPassword_; }
    set {
      sharedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Del_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Del_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqPath != other.ReqPath) return false;
    if (ReqStatus != other.ReqStatus) return false;
    if (SharedPassword != other.SharedPassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqPath.Length != 0) hash ^= ReqPath.GetHashCode();
    if (ReqStatus != 0) hash ^= ReqStatus.GetHashCode();
    if (SharedPassword.Length != 0) hash ^= SharedPassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ReqPath);
    }
    if (ReqStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ReqStatus);
    }
    if (SharedPassword.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(SharedPassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqPath);
    }
    if (ReqStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqStatus);
    }
    if (SharedPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedPassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Del_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqPath.Length != 0) {
      ReqPath = other.ReqPath;
    }
    if (other.ReqStatus != 0) {
      ReqStatus = other.ReqStatus;
    }
    if (other.SharedPassword.Length != 0) {
      SharedPassword = other.SharedPassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ReqPath = input.ReadString();
          break;
        }
        case 16: {
          reqStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 26: {
          SharedPassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_del_a					= 1006
/// </summary>
public sealed partial class CMD_SharedData_Del_a_Parameters : pb::IMessage<CMD_SharedData_Del_a_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Del_a_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Del_a_Parameters>(() => new CMD_SharedData_Del_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Del_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[255]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Del_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Del_a_Parameters(CMD_SharedData_Del_a_Parameters other) : this() {
    reqPath_ = other.reqPath_;
    reqStatus_ = other.reqStatus_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Del_a_Parameters Clone() {
    return new CMD_SharedData_Del_a_Parameters(this);
  }

  /// <summary>Field number for the "req_path" field.</summary>
  public const int ReqPathFieldNumber = 1;
  private string reqPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqPath {
    get { return reqPath_; }
    set {
      reqPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "req_status" field.</summary>
  public const int ReqStatusFieldNumber = 2;
  private global::Shared_Status reqStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status ReqStatus {
    get { return reqStatus_; }
    set {
      reqStatus_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Del_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Del_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqPath != other.ReqPath) return false;
    if (ReqStatus != other.ReqStatus) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqPath.Length != 0) hash ^= ReqPath.GetHashCode();
    if (ReqStatus != 0) hash ^= ReqStatus.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ReqPath);
    }
    if (ReqStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ReqStatus);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqPath);
    }
    if (ReqStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqStatus);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Del_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqPath.Length != 0) {
      ReqPath = other.ReqPath;
    }
    if (other.ReqStatus != 0) {
      ReqStatus = other.ReqStatus;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ReqPath = input.ReadString();
          break;
        }
        case 16: {
          reqStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_download_r					= 1007
/// </summary>
public sealed partial class CMD_SharedData_Download_r_Parameters : pb::IMessage<CMD_SharedData_Download_r_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Download_r_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Download_r_Parameters>(() => new CMD_SharedData_Download_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Download_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[256]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Download_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Download_r_Parameters(CMD_SharedData_Download_r_Parameters other) : this() {
    reqPath_ = other.reqPath_;
    reqStatus_ = other.reqStatus_;
    password_ = other.password_;
    saveasPath_ = other.saveasPath_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Download_r_Parameters Clone() {
    return new CMD_SharedData_Download_r_Parameters(this);
  }

  /// <summary>Field number for the "req_path" field.</summary>
  public const int ReqPathFieldNumber = 1;
  private string reqPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqPath {
    get { return reqPath_; }
    set {
      reqPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "req_status" field.</summary>
  public const int ReqStatusFieldNumber = 2;
  private global::Shared_Status reqStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status ReqStatus {
    get { return reqStatus_; }
    set {
      reqStatus_ = value;
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 3;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "saveas_path" field.</summary>
  public const int SaveasPathFieldNumber = 4;
  private string saveasPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SaveasPath {
    get { return saveasPath_; }
    set {
      saveasPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Download_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Download_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqPath != other.ReqPath) return false;
    if (ReqStatus != other.ReqStatus) return false;
    if (Password != other.Password) return false;
    if (SaveasPath != other.SaveasPath) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqPath.Length != 0) hash ^= ReqPath.GetHashCode();
    if (ReqStatus != 0) hash ^= ReqStatus.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (SaveasPath.Length != 0) hash ^= SaveasPath.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ReqPath);
    }
    if (ReqStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ReqStatus);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
    if (SaveasPath.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(SaveasPath);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqPath);
    }
    if (ReqStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqStatus);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (SaveasPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SaveasPath);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Download_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqPath.Length != 0) {
      ReqPath = other.ReqPath;
    }
    if (other.ReqStatus != 0) {
      ReqStatus = other.ReqStatus;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.SaveasPath.Length != 0) {
      SaveasPath = other.SaveasPath;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ReqPath = input.ReadString();
          break;
        }
        case 16: {
          reqStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
        case 34: {
          SaveasPath = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_download_a					= 1008
/// </summary>
public sealed partial class CMD_SharedData_Download_a_Parameters : pb::IMessage<CMD_SharedData_Download_a_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Download_a_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Download_a_Parameters>(() => new CMD_SharedData_Download_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Download_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[257]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Download_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Download_a_Parameters(CMD_SharedData_Download_a_Parameters other) : this() {
    sharedPath_ = other.sharedPath_;
    sharedStatus_ = other.sharedStatus_;
    SharedData = other.sharedData_ != null ? other.SharedData.Clone() : null;
    saveasPath_ = other.saveasPath_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Download_a_Parameters Clone() {
    return new CMD_SharedData_Download_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_path" field.</summary>
  public const int SharedPathFieldNumber = 1;
  private string sharedPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedPath {
    get { return sharedPath_; }
    set {
      sharedPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 2;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "shared_data" field.</summary>
  public const int SharedDataFieldNumber = 3;
  private global::FileList sharedData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList SharedData {
    get { return sharedData_; }
    set {
      sharedData_ = value;
    }
  }

  /// <summary>Field number for the "saveas_path" field.</summary>
  public const int SaveasPathFieldNumber = 4;
  private string saveasPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SaveasPath {
    get { return saveasPath_; }
    set {
      saveasPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Download_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Download_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedPath != other.SharedPath) return false;
    if (SharedStatus != other.SharedStatus) return false;
    if (!object.Equals(SharedData, other.SharedData)) return false;
    if (SaveasPath != other.SaveasPath) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedPath.Length != 0) hash ^= SharedPath.GetHashCode();
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (sharedData_ != null) hash ^= SharedData.GetHashCode();
    if (SaveasPath.Length != 0) hash ^= SaveasPath.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SharedPath);
    }
    if (SharedStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SharedStatus);
    }
    if (sharedData_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SharedData);
    }
    if (SaveasPath.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(SaveasPath);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedPath);
    }
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (sharedData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SharedData);
    }
    if (SaveasPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SaveasPath);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Download_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedPath.Length != 0) {
      SharedPath = other.SharedPath;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.sharedData_ != null) {
      if (sharedData_ == null) {
        sharedData_ = new global::FileList();
      }
      SharedData.MergeFrom(other.SharedData);
    }
    if (other.SaveasPath.Length != 0) {
      SaveasPath = other.SaveasPath;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          SharedPath = input.ReadString();
          break;
        }
        case 16: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 26: {
          if (sharedData_ == null) {
            sharedData_ = new global::FileList();
          }
          input.ReadMessage(sharedData_);
          break;
        }
        case 34: {
          SaveasPath = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_getlist_r					= 1009
/// </summary>
public sealed partial class CMD_SharedData_Getlist_r_Parameters : pb::IMessage<CMD_SharedData_Getlist_r_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Getlist_r_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Getlist_r_Parameters>(() => new CMD_SharedData_Getlist_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Getlist_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[258]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Getlist_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Getlist_r_Parameters(CMD_SharedData_Getlist_r_Parameters other) : this() {
    sharedStatus_ = other.sharedStatus_;
    reqSharedName_ = other.reqSharedName_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Getlist_r_Parameters Clone() {
    return new CMD_SharedData_Getlist_r_Parameters(this);
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 1;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "req_shared_name" field.</summary>
  public const int ReqSharedNameFieldNumber = 2;
  private string reqSharedName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqSharedName {
    get { return reqSharedName_; }
    set {
      reqSharedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Getlist_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Getlist_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedStatus != other.SharedStatus) return false;
    if (ReqSharedName != other.ReqSharedName) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (ReqSharedName.Length != 0) hash ^= ReqSharedName.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedStatus != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SharedStatus);
    }
    if (ReqSharedName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ReqSharedName);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (ReqSharedName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqSharedName);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Getlist_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.ReqSharedName.Length != 0) {
      ReqSharedName = other.ReqSharedName;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 18: {
          ReqSharedName = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_shareddata_getlist_a					= 1010
/// </summary>
public sealed partial class CMD_SharedData_Getlist_a_Parameters : pb::IMessage<CMD_SharedData_Getlist_a_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Getlist_a_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Getlist_a_Parameters>(() => new CMD_SharedData_Getlist_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Getlist_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[259]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Getlist_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Getlist_a_Parameters(CMD_SharedData_Getlist_a_Parameters other) : this() {
    sharedStatus_ = other.sharedStatus_;
    SharedData = other.sharedData_ != null ? other.SharedData.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Getlist_a_Parameters Clone() {
    return new CMD_SharedData_Getlist_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 1;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "shared_data" field.</summary>
  public const int SharedDataFieldNumber = 2;
  private global::FileList sharedData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList SharedData {
    get { return sharedData_; }
    set {
      sharedData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Getlist_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Getlist_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedStatus != other.SharedStatus) return false;
    if (!object.Equals(SharedData, other.SharedData)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (sharedData_ != null) hash ^= SharedData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedStatus != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SharedStatus);
    }
    if (sharedData_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (sharedData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SharedData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Getlist_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.sharedData_ != null) {
      if (sharedData_ == null) {
        sharedData_ = new global::FileList();
      }
      SharedData.MergeFrom(other.SharedData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 18: {
          if (sharedData_ == null) {
            sharedData_ = new global::FileList();
          }
          input.ReadMessage(sharedData_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_shareddata_createdir_r		= 1011;
/// </summary>
public sealed partial class CMD_SharedData_CreateDir_r_Parameters : pb::IMessage<CMD_SharedData_CreateDir_r_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_CreateDir_r_Parameters> _parser = new pb::MessageParser<CMD_SharedData_CreateDir_r_Parameters>(() => new CMD_SharedData_CreateDir_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_CreateDir_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[260]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_CreateDir_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_CreateDir_r_Parameters(CMD_SharedData_CreateDir_r_Parameters other) : this() {
    createDir_ = other.createDir_;
    sharedStatus_ = other.sharedStatus_;
    sharedPassword_ = other.sharedPassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_CreateDir_r_Parameters Clone() {
    return new CMD_SharedData_CreateDir_r_Parameters(this);
  }

  /// <summary>Field number for the "create_dir" field.</summary>
  public const int CreateDirFieldNumber = 1;
  private string createDir_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CreateDir {
    get { return createDir_; }
    set {
      createDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 2;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "shared_password" field.</summary>
  public const int SharedPasswordFieldNumber = 3;
  private string sharedPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SharedPassword {
    get { return sharedPassword_; }
    set {
      sharedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_CreateDir_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_CreateDir_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CreateDir != other.CreateDir) return false;
    if (SharedStatus != other.SharedStatus) return false;
    if (SharedPassword != other.SharedPassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CreateDir.Length != 0) hash ^= CreateDir.GetHashCode();
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (SharedPassword.Length != 0) hash ^= SharedPassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CreateDir.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CreateDir);
    }
    if (SharedStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SharedStatus);
    }
    if (SharedPassword.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(SharedPassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CreateDir.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateDir);
    }
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (SharedPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedPassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_CreateDir_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CreateDir.Length != 0) {
      CreateDir = other.CreateDir;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.SharedPassword.Length != 0) {
      SharedPassword = other.SharedPassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CreateDir = input.ReadString();
          break;
        }
        case 16: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 26: {
          SharedPassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_shareddata_createdir_a		= 1012;
/// </summary>
public sealed partial class CMD_SharedData_CreateDir_a_Parameters : pb::IMessage<CMD_SharedData_CreateDir_a_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_CreateDir_a_Parameters> _parser = new pb::MessageParser<CMD_SharedData_CreateDir_a_Parameters>(() => new CMD_SharedData_CreateDir_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_CreateDir_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[261]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_CreateDir_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_CreateDir_a_Parameters(CMD_SharedData_CreateDir_a_Parameters other) : this() {
    createDir_ = other.createDir_;
    sharedStatus_ = other.sharedStatus_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_CreateDir_a_Parameters Clone() {
    return new CMD_SharedData_CreateDir_a_Parameters(this);
  }

  /// <summary>Field number for the "create_dir" field.</summary>
  public const int CreateDirFieldNumber = 1;
  private string createDir_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CreateDir {
    get { return createDir_; }
    set {
      createDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 2;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_CreateDir_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_CreateDir_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CreateDir != other.CreateDir) return false;
    if (SharedStatus != other.SharedStatus) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CreateDir.Length != 0) hash ^= CreateDir.GetHashCode();
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CreateDir.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CreateDir);
    }
    if (SharedStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SharedStatus);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CreateDir.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateDir);
    }
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_CreateDir_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.CreateDir.Length != 0) {
      CreateDir = other.CreateDir;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          CreateDir = input.ReadString();
          break;
        }
        case 16: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_shateddata_check_pw_r		= 1013;
/// </summary>
public sealed partial class CMD_SharedData_Check_PW_r_Parameters : pb::IMessage<CMD_SharedData_Check_PW_r_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Check_PW_r_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Check_PW_r_Parameters>(() => new CMD_SharedData_Check_PW_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Check_PW_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[262]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Check_PW_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Check_PW_r_Parameters(CMD_SharedData_Check_PW_r_Parameters other) : this() {
    sharedStatus_ = other.sharedStatus_;
    reqPath_ = other.reqPath_;
    password_ = other.password_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Check_PW_r_Parameters Clone() {
    return new CMD_SharedData_Check_PW_r_Parameters(this);
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 1;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "req_path" field.</summary>
  public const int ReqPathFieldNumber = 2;
  private string reqPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqPath {
    get { return reqPath_; }
    set {
      reqPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 3;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Check_PW_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Check_PW_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedStatus != other.SharedStatus) return false;
    if (ReqPath != other.ReqPath) return false;
    if (Password != other.Password) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (ReqPath.Length != 0) hash ^= ReqPath.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedStatus != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SharedStatus);
    }
    if (ReqPath.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ReqPath);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (ReqPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqPath);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Check_PW_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.ReqPath.Length != 0) {
      ReqPath = other.ReqPath;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 18: {
          ReqPath = input.ReadString();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_shateddata_check_pw_a		= 1014;
/// </summary>
public sealed partial class CMD_SharedData_Check_PW_a_Parameters : pb::IMessage<CMD_SharedData_Check_PW_a_Parameters> {
  private static readonly pb::MessageParser<CMD_SharedData_Check_PW_a_Parameters> _parser = new pb::MessageParser<CMD_SharedData_Check_PW_a_Parameters>(() => new CMD_SharedData_Check_PW_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_SharedData_Check_PW_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::A8Reflection.Descriptor.MessageTypes[263]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Check_PW_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Check_PW_a_Parameters(CMD_SharedData_Check_PW_a_Parameters other) : this() {
    sharedStatus_ = other.sharedStatus_;
    reqPath_ = other.reqPath_;
    checkResult_ = other.checkResult_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_SharedData_Check_PW_a_Parameters Clone() {
    return new CMD_SharedData_Check_PW_a_Parameters(this);
  }

  /// <summary>Field number for the "shared_status" field.</summary>
  public const int SharedStatusFieldNumber = 1;
  private global::Shared_Status sharedStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Shared_Status SharedStatus {
    get { return sharedStatus_; }
    set {
      sharedStatus_ = value;
    }
  }

  /// <summary>Field number for the "req_path" field.</summary>
  public const int ReqPathFieldNumber = 2;
  private string reqPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqPath {
    get { return reqPath_; }
    set {
      reqPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "check_result" field.</summary>
  public const int CheckResultFieldNumber = 3;
  private uint checkResult_;
  /// <summary>
  ///  0 正确      21 密码错误
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint CheckResult {
    get { return checkResult_; }
    set {
      checkResult_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_SharedData_Check_PW_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_SharedData_Check_PW_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SharedStatus != other.SharedStatus) return false;
    if (ReqPath != other.ReqPath) return false;
    if (CheckResult != other.CheckResult) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SharedStatus != 0) hash ^= SharedStatus.GetHashCode();
    if (ReqPath.Length != 0) hash ^= ReqPath.GetHashCode();
    if (CheckResult != 0) hash ^= CheckResult.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SharedStatus != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SharedStatus);
    }
    if (ReqPath.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ReqPath);
    }
    if (CheckResult != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(CheckResult);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SharedStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SharedStatus);
    }
    if (ReqPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqPath);
    }
    if (CheckResult != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CheckResult);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_SharedData_Check_PW_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.SharedStatus != 0) {
      SharedStatus = other.SharedStatus;
    }
    if (other.ReqPath.Length != 0) {
      ReqPath = other.ReqPath;
    }
    if (other.CheckResult != 0) {
      CheckResult = other.CheckResult;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          sharedStatus_ = (global::Shared_Status) input.ReadEnum();
          break;
        }
        case 18: {
          ReqPath = input.ReadString();
          break;
        }
        case 24: {
          CheckResult = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
