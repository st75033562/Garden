// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: topic.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from topic.proto</summary>
public static partial class TopicReflection {

  #region Descriptor
  /// <summary>File descriptor for topic.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TopicReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgt0b3BpYy5wcm90byKbAQoIRmlsZU5vZGUSEQoJcGF0aF9uYW1lGAEgASgJ",
          "EhgKEGJhc2U2NF9wYXRoX25hbWUYAiABKAkSDwoHZm5fdHlwZRgDIAEoDRIQ",
          "CghmaWxlX21kNRgEIAEoCRITCgtjcmVhdGVfdGltZRgFIAEoBBITCgt1cGRh",
          "dGVfdGltZRgGIAEoBBIVCg1maWxlX2NvbnRlbnRzGAcgASgMIjsKCEZpbGVM",
          "aXN0EhwKCWZpbGVfbGlzdBgBIAMoCzIJLkZpbGVOb2RlEhEKCXJvb3RfcGF0",
          "aBgCIAEoCSKVAQoOSzhfQXR0YWNoX1VuaXQSJAoLYXR0YWNoX3R5cGUYASAB",
          "KA4yDy5LOF9BdHRhY2hfVHlwZRISCgphdHRhY2hfdXJsGAIgASgJEhMKC2F0",
          "dGFjaF9uYW1lGAMgASgJEh8KDGF0dGFjaF9maWxlcxgEIAEoCzIJLkZpbGVM",
          "aXN0EhMKC2NsaWVudF9kYXRhGAUgASgJIugBCg5LOF9BdHRhY2hfSW5mbxI0",
          "CgthdHRhY2hfbGlzdBgBIAMoCzIfLks4X0F0dGFjaF9JbmZvLkF0dGFjaExp",
          "c3RFbnRyeRIVCg1hdHRhY2hfbWF4X2lkGAIgASgNEhgKEGF0dGFjaF91bmlx",
          "dWVfaWQYAyABKAkSKwoLYXR0YWNoX3R5cGUYBCABKA4yFi5Qcm9qZWN0X0xh",
          "bmd1YWdlX1R5cGUaQgoPQXR0YWNoTGlzdEVudHJ5EgsKA2tleRgBIAEoDRIe",
          "CgV2YWx1ZRgCIAEoCzIPLks4X0F0dGFjaF9Vbml0OgI4ASJSChRVc2VyX1Rv",
          "cGljX1VuaXRfSW5mbxIfCgp0b3BpY190eXBlGAEgASgOMgsuVG9waWNfVHlw",
          "ZRIZChF0b3BpY19hdHRlbmRfdGltZRgCIAEoBCLHAgoPVXNlcl9Ub3BpY19J",
          "bmZvEkcKFXVzZXJfY3JlYXRlX3RvcGljX21hcBgBIAMoCzIoLlVzZXJfVG9w",
          "aWNfSW5mby5Vc2VyQ3JlYXRlVG9waWNNYXBFbnRyeRJHChV1c2VyX2F0dGVu",
          "ZF90b3BpY19tYXAYAyADKAsyKC5Vc2VyX1RvcGljX0luZm8uVXNlckF0dGVu",
          "ZFRvcGljTWFwRW50cnkaUAoXVXNlckNyZWF0ZVRvcGljTWFwRW50cnkSCwoD",
          "a2V5GAEgASgNEiQKBXZhbHVlGAIgASgLMhUuVXNlcl9Ub3BpY19Vbml0X0lu",
          "Zm86AjgBGlAKF1VzZXJBdHRlbmRUb3BpY01hcEVudHJ5EgsKA2tleRgBIAEo",
          "DRIkCgV2YWx1ZRgCIAEoCzIVLlVzZXJfVG9waWNfVW5pdF9JbmZvOgI4ASIN",
          "CgtHQkxpa2VfSW5mbyLcAgoIR0JBbnN3ZXISFgoOZ2Jfc2NyaXB0X3Nob3cY",
          "ASABKA0SFgoOZG93bmxvYWRfY291bnQYAiABKA0SEQoJcHJval9wYXRoGAMg",
          "ASgJEhMKC2Fuc3dlcl90aW1lGAQgASgEEhMKC2Fuc3dlcl9uYW1lGAUgASgJ",
          "Ei8KDGdiX2xpa2VfbGlzdBgGIAMoCzIZLkdCQW5zd2VyLkdiTGlrZUxpc3RF",
          "bnRyeRIRCglhbnN3ZXJfaWQYByABKA0SEAoIZ2Jfc2NvcmUYCCABKAUSFgoO",
          "YW5zd2VyX3VzZXJfaWQYCSABKA0SFwoPYW5zd2VyX25pY2tuYW1lGAogASgJ",
          "EhsKE2Fuc3dlcl9wcm9qZWN0X3R5cGUYCyABKA0aPwoPR2JMaWtlTGlzdEVu",
          "dHJ5EgsKA2tleRgBIAEoDRIbCgV2YWx1ZRgCIAEoCzIMLkdCTGlrZV9JbmZv",
          "OgI4ASLXBQoNR2FtZUJvYXJkX05ldxIPCgdnYl9uYW1lGAIgASgJEhYKDmdi",
          "X2Rlc2NyaXB0aW9uGAMgASgJEhYKDmdiX3NjcmlwdF9zaG93GAQgASgNEhkK",
          "EWdiX2Rvd25sb2FkX2NvdW50GAUgASgNEhQKDGdiX2NyZWF0ZV9pZBgGIAEo",
          "DRIWCg5nYl9jcmVhdGVfdGltZRgHIAEoBBITCgtnYl9zZW5jZV9pZBgIIAEo",
          "DRI0CgxnYl9saWtlX2xpc3QYCSADKAsyHi5HYW1lQm9hcmRfTmV3LkdiTGlr",
          "ZUxpc3RFbnRyeRI4Cg5nYl9hbnN3ZXJfbGlzdBgKIAMoCzIgLkdhbWVCb2Fy",
          "ZF9OZXcuR2JBbnN3ZXJMaXN0RW50cnkSEQoJcHJval9wYXRoGAsgASgJEhsK",
          "E2diX2NyZWF0ZXJfbmlja25hbWUYDCABKAkSFQoNZ2JfcGFyYW1ldGVycxgP",
          "IAEoCRIeChZnYl9hbGxvd19yZXBlYXRfYW5zd2VyGBAgASgIEhgKEGdiX21h",
          "eF9hbnN3ZXJfaWQYESABKA0SOAoYZ2JfcHJvamVjdF9sYW5ndWFnZV90eXBl",
          "GBIgASgOMhYuUHJvamVjdF9MYW5ndWFnZV9UeXBlEhYKDmdiX3VwZGF0ZV90",
          "aW1lGBMgASgEEisKEmdiX2F0dGFjaF9pbmZvX25ldxgUIAEoCzIPLks4X0F0",
          "dGFjaF9JbmZvEiAKB2diX3R5cGUYFSABKA4yDy5HYW1lQm9hcmRfVHlwZRIU",
          "CgxnYl91bmlxdWVfaWQYFiABKAkaPwoPR2JMaWtlTGlzdEVudHJ5EgsKA2tl",
          "eRgBIAEoDRIbCgV2YWx1ZRgCIAEoCzIMLkdCTGlrZV9JbmZvOgI4ARo+ChFH",
          "YkFuc3dlckxpc3RFbnRyeRILCgNrZXkYASABKA0SGAoFdmFsdWUYAiABKAsy",
          "CS5HQkFuc3dlcjoCOAEi7QMKClRvcGljX0luZm8SEAoIdG9waWNfaWQYASAB",
          "KA0SIwoMdG9waWNfc3RhdHVzGAIgASgOMg0uVG9waWNfU3RhdHVzEhIKCnRv",
          "cGljX25hbWUYAyABKAkSGQoRdG9waWNfZGVzY3JpcHRpb24YBCABKAkSHAoU",
          "dG9waWNfY3JlYXRlcl91c2VyaWQYBSABKA0SHgoWdG9waWNfY3JlYXRlcl9u",
          "aWNrbmFtZRgGIAEoCRIRCgl0b3BpY19jZmcYByABKAkSEwoLdG9waWNfcHJp",
          "Y2UYCCABKA0SGgoSdG9waWNfcHVibGlzaF90aW1lGAkgASgEEhkKEXRvcGlj",
          "X3VwZGF0ZV90aW1lGAogASgEEh8KF3RvcGljX2F0dGVuZF91c2VyX2NvdW50",
          "GAsgASgNEjsKG3RvcGljX3Byb2plY3RfbGFuZ3VhZ2VfdHlwZRgMIAEoDjIW",
          "LlByb2plY3RfTGFuZ3VhZ2VfVHlwZRIqChF0b3BpY19hdHRhY2hfaW5mbxgN",
          "IAEoCzIPLks4X0F0dGFjaF9JbmZvEhMKC3RvcGljX2xldmVsGA4gASgNEh8K",
          "CnRvcGljX3R5cGUYDyABKA4yCy5Ub3BpY19UeXBlEhwKFHRvcGljX2Rvd25s",
          "b2FkX2NvdW50GBAgASgNItIBCiVDTURfTW9kaWZ5X1VuaXF1ZV9BdHRhY2hf",
          "cl9QYXJhbWV0ZXJzEhgKEGF0dGFjaF91bmlxdWVfaWQYASABKAkSSwoLbW9k",
          "aWZ5X2luZm8YAiADKAsyNi5DTURfTW9kaWZ5X1VuaXF1ZV9BdHRhY2hfcl9Q",
          "YXJhbWV0ZXJzLk1vZGlmeUluZm9FbnRyeRpCCg9Nb2RpZnlJbmZvRW50cnkS",
          "CwoDa2V5GAEgASgNEh4KBXZhbHVlGAIgASgLMg8uSzhfQXR0YWNoX1VuaXQ6",
          "AjgBItIBCiVDTURfTW9kaWZ5X1VuaXF1ZV9BdHRhY2hfYV9QYXJhbWV0ZXJz",
          "EhgKEGF0dGFjaF91bmlxdWVfaWQYASABKAkSSwoLbW9kaWZ5X2luZm8YAiAD",
          "KAsyNi5DTURfTW9kaWZ5X1VuaXF1ZV9BdHRhY2hfYV9QYXJhbWV0ZXJzLk1v",
          "ZGlmeUluZm9FbnRyeRpCCg9Nb2RpZnlJbmZvRW50cnkSCwoDa2V5GAEgASgN",
          "Eh4KBXZhbHVlGAIgASgLMg8uSzhfQXR0YWNoX1VuaXQ6AjgBIlIKIkNNRF9E",
          "ZWxfVW5pcXVlX0F0dGFjaF9yX1BhcmFtZXRlcnMSGAoQYXR0YWNoX3VuaXF1",
          "ZV9pZBgBIAEoCRISCgphdHRhY2hfaWRzGAIgAygNIlIKIkNNRF9EZWxfVW5p",
          "cXVlX0F0dGFjaF9hX1BhcmFtZXRlcnMSGAoQYXR0YWNoX3VuaXF1ZV9pZBgB",
          "IAEoCRISCgphdHRhY2hfaWRzGAIgAygNImEKIkNNRF9BZGRfVW5pcXVlX0F0",
          "dGFjaF9yX1BhcmFtZXRlcnMSGAoQYXR0YWNoX3VuaXF1ZV9pZBgBIAEoCRIh",
          "CghhZGRfaW5mbxgCIAMoCzIPLks4X0F0dGFjaF9Vbml0IsMBCiJDTURfQWRk",
          "X1VuaXF1ZV9BdHRhY2hfYV9QYXJhbWV0ZXJzEhgKEGF0dGFjaF91bmlxdWVf",
          "aWQYASABKAkSQgoIYWRkX2luZm8YAiADKAsyMC5DTURfQWRkX1VuaXF1ZV9B",
          "dHRhY2hfYV9QYXJhbWV0ZXJzLkFkZEluZm9FbnRyeRo/CgxBZGRJbmZvRW50",
          "cnkSCwoDa2V5GAEgASgNEh4KBXZhbHVlGAIgASgLMg8uSzhfQXR0YWNoX1Vu",
          "aXQ6AjgBIs4BCiJDTURfR2V0X1VuaXF1ZV9BdHRhY2hfcl9QYXJhbWV0ZXJz",
          "EhgKEGF0dGFjaF91bmlxdWVfaWQYASABKAkSVQoSYXR0YWNoX3NhdmVkX25h",
          "bWVzGAIgAygLMjkuQ01EX0dldF9VbmlxdWVfQXR0YWNoX3JfUGFyYW1ldGVy",
          "cy5BdHRhY2hTYXZlZE5hbWVzRW50cnkaNwoVQXR0YWNoU2F2ZWROYW1lc0Vu",
          "dHJ5EgsKA2tleRgBIAEoDRINCgV2YWx1ZRgCIAEoCToCOAEiSgoiQ01EX0dl",
          "dF9VbmlxdWVfQXR0YWNoX2FfUGFyYW1ldGVycxIkCgthdHRhY2hfaW5mbxgB",
          "IAEoCzIPLks4X0F0dGFjaF9JbmZvIkEKHUNNRF9DcmVhdGVfVG9waWNfcl9Q",
          "YXJhbWV0ZXJzEiAKC2NyZWF0ZV9pbmZvGAEgASgLMgsuVG9waWNfSW5mbyJA",
          "Ch1DTURfQ3JlYXRlX1RvcGljX2FfUGFyYW1ldGVycxIfCgp0b3BpY19pbmZv",
          "GAEgASgLMgsuVG9waWNfSW5mbyJBCh1DTURfTW9kaWZ5X1RvcGljX3JfUGFy",
          "YW1ldGVycxIgCgttb2RpZnlfaW5mbxgBIAEoCzILLlRvcGljX0luZm8iQAod",
          "Q01EX01vZGlmeV9Ub3BpY19hX1BhcmFtZXRlcnMSHwoKdG9waWNfaW5mbxgB",
          "IAEoCzILLlRvcGljX0luZm8iLgoaQ01EX0RlbF9Ub3BpY19yX1BhcmFtZXRl",
          "cnMSEAoIdG9waWNfaWQYASABKA0iLgoaQ01EX0RlbF9Ub3BpY19hX1BhcmFt",
          "ZXRlcnMSEAoIdG9waWNfaWQYASABKA0iywEKH0NNRF9HZXRfVG9waWNfTGlz",
          "dF9yX1BhcmFtZXRlcnMSIwoIcmVxX3R5cGUYASABKA4yES5HZXRUb3BpY0xp",
          "c3RUeXBlEhAKCHJlcV9uYW1lGAIgASgJEiMKDnJlcV90b3BpY190eXBlGAMg",
          "ASgOMgsuVG9waWNfVHlwZRI5ChlyZXFfcHJvamVjdF9sYW5ndWFnZV90eXBl",
          "GAQgASgOMhYuUHJvamVjdF9MYW5ndWFnZV9UeXBlEhEKCXJlcV9sZXZlbBgF",
          "IAEoDSJCCh9DTURfR2V0X1RvcGljX0xpc3RfYV9QYXJhbWV0ZXJzEh8KCnRv",
          "cGljX2xpc3QYASADKAsyCy5Ub3BpY19JbmZvIjIKHkNNRF9BcHByb3ZlX1Rv",
          "cGljX3JfUGFyYW1ldGVycxIQCgh0b3BpY19pZBgBIAEoDSIyCh5DTURfQXBw",
          "cm92ZV9Ub3BpY19hX1BhcmFtZXRlcnMSEAoIdG9waWNfaWQYASABKA0ihwEK",
          "IUNNRF9TZXRfVG9waWNfU3RhdHVzX3JfUGFyYW1ldGVycxIQCgh0b3BpY19p",
          "ZBgBIAEoDRIjCgx0b3BpY19zdGF0dXMYAiABKA4yDS5Ub3BpY19TdGF0dXMS",
          "FgoOdG9waWNfcGFzc3dvcmQYAyABKAkSEwoLdG9waWNfcHJpY2UYBCABKA0i",
          "ewohQ01EX1NldF9Ub3BpY19TdGF0dXNfYV9QYXJhbWV0ZXJzEhAKCHRvcGlj",
          "X2lkGAEgASgNEiMKDHRvcGljX3N0YXR1cxgCIAEoDjINLlRvcGljX1N0YXR1",
          "cxIfCgp0b3BpY19pbmZvGAMgASgLMgsuVG9waWNfSW5mbyJGChpDTURfQnV5",
          "X1RvcGljX3JfUGFyYW1ldGVycxIQCgh0b3BpY19pZBgBIAEoDRIWCg50b3Bp",
          "Y19wYXNzd29yZBgCIAEoCSIuChpDTURfQnV5X1RvcGljX2FfUGFyYW1ldGVy",
          "cxIQCgh0b3BpY19pZBgBIAEoDSI3CiNDTURfR2V0X1RvcGljX1Bhc3N3b3Jk",
          "X3JfUGFyYW1ldGVycxIQCgh0b3BpY19pZBgBIAEoDSJPCiNDTURfR2V0X1Rv",
          "cGljX1Bhc3N3b3JkX2FfUGFyYW1ldGVycxIQCgh0b3BpY19pZBgBIAEoDRIW",
          "Cg50b3BpY19wYXNzd29yZBgCIAEoCSJMCilDTURfVG9waWNfU3RhdHVzX0No",
          "YW5nZV9Ob3RpZnlfUGFyYW1ldGVycxIfCgp0b3BpY19pbmZvGAEgASgLMgsu",
          "VG9waWNfSW5mbyI1Ch9DTURfRG93bmxvYWRfVG9waWNfcl9QYXJhbWV0ZXJz",
          "EhIKCnRvcGljX3BhdGgYASABKAkiIQofQ01EX0Rvd25sb2FkX1RvcGljX2Ff",
          "UGFyYW1ldGVycyoiCgdGTl9UWVBFEgsKB2ZuX2ZpbGUQABIKCgZmbl9kaXIQ",
          "ASpRChVQcm9qZWN0X0xhbmd1YWdlX1R5cGUSGwoXcHJvamVjdF9sYW5ndWFn",
          "ZV9ncmFwaHkQABIbChdwcm9qZWN0X2xhbmd1YWdlX3B5dGhvbhABKnsKDks4",
          "X0F0dGFjaF9UeXBlEg0KCUtBVF9JbWFnZRAAEg0KCUtBVF9WaWRlbxABEg4K",
          "CktBVF9Db3Vyc2UQAhIQCgxLQVRfUHJvamVjdHMQAxIRCg1LQVRfR2FtZWJv",
          "YXJkEAQSFgoSS0FUX0dhbWVib2FyZF9QbGF5EAUqIQoKVG9waWNfVHlwZRIT",
          "Cg9Ub3BpY19UeXBlX05vbmUQACoiCg5HYW1lQm9hcmRfVHlwZRIQCgxHQl9U",
          "eXBlX05vbmUQACrDAQoMVG9waWNfU3RhdHVzEhcKE3RvcGljX3N0YXR1c19j",
          "b21taXQQABIYChR0b3BpY19zdGF0dXNfcHJldmlldxABEhgKFHRvcGljX3N0",
          "YXR1c19wdWJsaXNoEAISFQoRdG9waWNfc3RhdHVzX3Rlc3QQAxIgChx0b3Bp",
          "Y19zdGF0dXNfd2FpdGZvcl9wdWJsaXNoEAQSFwoTdG9waWNfc3RhdHVzX2Ns",
          "b3NlZBAJEhQKEHRvcGljX3N0YXR1c19kZWwQCir7AQoQR2V0VG9waWNMaXN0",
          "VHlwZRISCg5nZXRfdG9waWNfbm9uZRAAEh4KGmdldF90b3BpY19wdWJsaXNo",
          "ZWRfbXlzZWxmEAESHgoaZ2V0X3RvcGljX3B1Ymxpc2hlZF9qb2luZWQQAhIT",
          "Cg9nZXRfdG9waWNfZHJhZnQQBBIcChhnZXRfdG9waWNfaW52aXRlZF9teXNl",
          "bGYQCBIcChhnZXRfdG9waWNfaW52aXRlZF9qb2luZWQQEBIXChNnZXRfdG9w",
          "aWNfcHVibGlzaGVkECASEgoOZ2V0X3RvcGljX3Rlc3QQQBIVChBnZXRfdG9w",
          "aWNfYnluYW1lEIABYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::FN_TYPE), typeof(global::Project_Language_Type), typeof(global::K8_Attach_Type), typeof(global::Topic_Type), typeof(global::GameBoard_Type), typeof(global::Topic_Status), typeof(global::GetTopicListType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::FileNode), global::FileNode.Parser, new[]{ "PathName", "Base64PathName", "FnType", "FileMd5", "CreateTime", "UpdateTime", "FileContents" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FileList), global::FileList.Parser, new[]{ "FileList_", "RootPath" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::K8_Attach_Unit), global::K8_Attach_Unit.Parser, new[]{ "AttachType", "AttachUrl", "AttachName", "AttachFiles", "ClientData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::K8_Attach_Info), global::K8_Attach_Info.Parser, new[]{ "AttachList", "AttachMaxId", "AttachUniqueId", "AttachType" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Topic_Unit_Info), global::User_Topic_Unit_Info.Parser, new[]{ "TopicType", "TopicAttendTime" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::User_Topic_Info), global::User_Topic_Info.Parser, new[]{ "UserCreateTopicMap", "UserAttendTopicMap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::GBLike_Info), global::GBLike_Info.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GBAnswer), global::GBAnswer.Parser, new[]{ "GbScriptShow", "DownloadCount", "ProjPath", "AnswerTime", "AnswerName", "GbLikeList", "AnswerId", "GbScore", "AnswerUserId", "AnswerNickname", "AnswerProjectType" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameBoard_New), global::GameBoard_New.Parser, new[]{ "GbName", "GbDescription", "GbScriptShow", "GbDownloadCount", "GbCreateId", "GbCreateTime", "GbSenceId", "GbLikeList", "GbAnswerList", "ProjPath", "GbCreaterNickname", "GbParameters", "GbAllowRepeatAnswer", "GbMaxAnswerId", "GbProjectLanguageType", "GbUpdateTime", "GbAttachInfoNew", "GbType", "GbUniqueId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::Topic_Info), global::Topic_Info.Parser, new[]{ "TopicId", "TopicStatus", "TopicName", "TopicDescription", "TopicCreaterUserid", "TopicCreaterNickname", "TopicCfg", "TopicPrice", "TopicPublishTime", "TopicUpdateTime", "TopicAttendUserCount", "TopicProjectLanguageType", "TopicAttachInfo", "TopicLevel", "TopicType", "TopicDownloadCount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Unique_Attach_r_Parameters), global::CMD_Modify_Unique_Attach_r_Parameters.Parser, new[]{ "AttachUniqueId", "ModifyInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Unique_Attach_a_Parameters), global::CMD_Modify_Unique_Attach_a_Parameters.Parser, new[]{ "AttachUniqueId", "ModifyInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Unique_Attach_r_Parameters), global::CMD_Del_Unique_Attach_r_Parameters.Parser, new[]{ "AttachUniqueId", "AttachIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Unique_Attach_a_Parameters), global::CMD_Del_Unique_Attach_a_Parameters.Parser, new[]{ "AttachUniqueId", "AttachIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Unique_Attach_r_Parameters), global::CMD_Add_Unique_Attach_r_Parameters.Parser, new[]{ "AttachUniqueId", "AddInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Add_Unique_Attach_a_Parameters), global::CMD_Add_Unique_Attach_a_Parameters.Parser, new[]{ "AttachUniqueId", "AddInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Unique_Attach_r_Parameters), global::CMD_Get_Unique_Attach_r_Parameters.Parser, new[]{ "AttachUniqueId", "AttachSavedNames" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Unique_Attach_a_Parameters), global::CMD_Get_Unique_Attach_a_Parameters.Parser, new[]{ "AttachInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Topic_r_Parameters), global::CMD_Create_Topic_r_Parameters.Parser, new[]{ "CreateInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Create_Topic_a_Parameters), global::CMD_Create_Topic_a_Parameters.Parser, new[]{ "TopicInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Topic_r_Parameters), global::CMD_Modify_Topic_r_Parameters.Parser, new[]{ "ModifyInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Modify_Topic_a_Parameters), global::CMD_Modify_Topic_a_Parameters.Parser, new[]{ "TopicInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Topic_r_Parameters), global::CMD_Del_Topic_r_Parameters.Parser, new[]{ "TopicId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Del_Topic_a_Parameters), global::CMD_Del_Topic_a_Parameters.Parser, new[]{ "TopicId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Topic_List_r_Parameters), global::CMD_Get_Topic_List_r_Parameters.Parser, new[]{ "ReqType", "ReqName", "ReqTopicType", "ReqProjectLanguageType", "ReqLevel" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Topic_List_a_Parameters), global::CMD_Get_Topic_List_a_Parameters.Parser, new[]{ "TopicList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Approve_Topic_r_Parameters), global::CMD_Approve_Topic_r_Parameters.Parser, new[]{ "TopicId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Approve_Topic_a_Parameters), global::CMD_Approve_Topic_a_Parameters.Parser, new[]{ "TopicId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Topic_Status_r_Parameters), global::CMD_Set_Topic_Status_r_Parameters.Parser, new[]{ "TopicId", "TopicStatus", "TopicPassword", "TopicPrice" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Set_Topic_Status_a_Parameters), global::CMD_Set_Topic_Status_a_Parameters.Parser, new[]{ "TopicId", "TopicStatus", "TopicInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Buy_Topic_r_Parameters), global::CMD_Buy_Topic_r_Parameters.Parser, new[]{ "TopicId", "TopicPassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Buy_Topic_a_Parameters), global::CMD_Buy_Topic_a_Parameters.Parser, new[]{ "TopicId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Topic_Password_r_Parameters), global::CMD_Get_Topic_Password_r_Parameters.Parser, new[]{ "TopicId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Get_Topic_Password_a_Parameters), global::CMD_Get_Topic_Password_a_Parameters.Parser, new[]{ "TopicId", "TopicPassword" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Topic_Status_Change_Notify_Parameters), global::CMD_Topic_Status_Change_Notify_Parameters.Parser, new[]{ "TopicInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Download_Topic_r_Parameters), global::CMD_Download_Topic_r_Parameters.Parser, new[]{ "TopicPath" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_Download_Topic_a_Parameters), global::CMD_Download_Topic_a_Parameters.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum FN_TYPE {
  [pbr::OriginalName("fn_file")] FnFile = 0,
  [pbr::OriginalName("fn_dir")] FnDir = 1,
}

public enum Project_Language_Type {
  [pbr::OriginalName("project_language_graphy")] ProjectLanguageGraphy = 0,
  [pbr::OriginalName("project_language_python")] ProjectLanguagePython = 1,
}

public enum K8_Attach_Type {
  [pbr::OriginalName("KAT_Image")] KatImage = 0,
  [pbr::OriginalName("KAT_Video")] KatVideo = 1,
  [pbr::OriginalName("KAT_Course")] KatCourse = 2,
  [pbr::OriginalName("KAT_Projects")] KatProjects = 3,
  [pbr::OriginalName("KAT_Gameboard")] KatGameboard = 4,
  [pbr::OriginalName("KAT_Gameboard_Play")] KatGameboardPlay = 5,
}

public enum Topic_Type {
  [pbr::OriginalName("Topic_Type_None")] None = 0,
}

public enum GameBoard_Type {
  [pbr::OriginalName("GB_Type_None")] GbTypeNone = 0,
}

public enum Topic_Status {
  [pbr::OriginalName("topic_status_commit")] Commit = 0,
  [pbr::OriginalName("topic_status_preview")] Preview = 1,
  [pbr::OriginalName("topic_status_publish")] Publish = 2,
  [pbr::OriginalName("topic_status_test")] Test = 3,
  [pbr::OriginalName("topic_status_waitfor_publish")] WaitforPublish = 4,
  [pbr::OriginalName("topic_status_closed")] Closed = 9,
  [pbr::OriginalName("topic_status_del")] Del = 10,
}

public enum GetTopicListType {
  [pbr::OriginalName("get_topic_none")] GetTopicNone = 0,
  [pbr::OriginalName("get_topic_published_myself")] GetTopicPublishedMyself = 1,
  [pbr::OriginalName("get_topic_published_joined")] GetTopicPublishedJoined = 2,
  [pbr::OriginalName("get_topic_draft")] GetTopicDraft = 4,
  [pbr::OriginalName("get_topic_invited_myself")] GetTopicInvitedMyself = 8,
  [pbr::OriginalName("get_topic_invited_joined")] GetTopicInvitedJoined = 16,
  [pbr::OriginalName("get_topic_published")] GetTopicPublished = 32,
  [pbr::OriginalName("get_topic_test")] GetTopicTest = 64,
  [pbr::OriginalName("get_topic_byname")] GetTopicByname = 128,
}

#endregion

#region Messages
public sealed partial class FileNode : pb::IMessage<FileNode> {
  private static readonly pb::MessageParser<FileNode> _parser = new pb::MessageParser<FileNode>(() => new FileNode());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FileNode> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FileNode() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FileNode(FileNode other) : this() {
    pathName_ = other.pathName_;
    base64PathName_ = other.base64PathName_;
    fnType_ = other.fnType_;
    fileMd5_ = other.fileMd5_;
    createTime_ = other.createTime_;
    updateTime_ = other.updateTime_;
    fileContents_ = other.fileContents_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FileNode Clone() {
    return new FileNode(this);
  }

  /// <summary>Field number for the "path_name" field.</summary>
  public const int PathNameFieldNumber = 1;
  private string pathName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PathName {
    get { return pathName_; }
    set {
      pathName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "base64_path_name" field.</summary>
  public const int Base64PathNameFieldNumber = 2;
  private string base64PathName_ = "";
  /// <summary>
  /// base64(path_name)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Base64PathName {
    get { return base64PathName_; }
    set {
      base64PathName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fn_type" field.</summary>
  public const int FnTypeFieldNumber = 3;
  private uint fnType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint FnType {
    get { return fnType_; }
    set {
      fnType_ = value;
    }
  }

  /// <summary>Field number for the "file_md5" field.</summary>
  public const int FileMd5FieldNumber = 4;
  private string fileMd5_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FileMd5 {
    get { return fileMd5_; }
    set {
      fileMd5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "create_time" field.</summary>
  public const int CreateTimeFieldNumber = 5;
  private ulong createTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong CreateTime {
    get { return createTime_; }
    set {
      createTime_ = value;
    }
  }

  /// <summary>Field number for the "update_time" field.</summary>
  public const int UpdateTimeFieldNumber = 6;
  private ulong updateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong UpdateTime {
    get { return updateTime_; }
    set {
      updateTime_ = value;
    }
  }

  /// <summary>Field number for the "file_contents" field.</summary>
  public const int FileContentsFieldNumber = 7;
  private pb::ByteString fileContents_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString FileContents {
    get { return fileContents_; }
    set {
      fileContents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FileNode);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FileNode other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PathName != other.PathName) return false;
    if (Base64PathName != other.Base64PathName) return false;
    if (FnType != other.FnType) return false;
    if (FileMd5 != other.FileMd5) return false;
    if (CreateTime != other.CreateTime) return false;
    if (UpdateTime != other.UpdateTime) return false;
    if (FileContents != other.FileContents) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PathName.Length != 0) hash ^= PathName.GetHashCode();
    if (Base64PathName.Length != 0) hash ^= Base64PathName.GetHashCode();
    if (FnType != 0) hash ^= FnType.GetHashCode();
    if (FileMd5.Length != 0) hash ^= FileMd5.GetHashCode();
    if (CreateTime != 0UL) hash ^= CreateTime.GetHashCode();
    if (UpdateTime != 0UL) hash ^= UpdateTime.GetHashCode();
    if (FileContents.Length != 0) hash ^= FileContents.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PathName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PathName);
    }
    if (Base64PathName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Base64PathName);
    }
    if (FnType != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(FnType);
    }
    if (FileMd5.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(FileMd5);
    }
    if (CreateTime != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(CreateTime);
    }
    if (UpdateTime != 0UL) {
      output.WriteRawTag(48);
      output.WriteUInt64(UpdateTime);
    }
    if (FileContents.Length != 0) {
      output.WriteRawTag(58);
      output.WriteBytes(FileContents);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PathName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PathName);
    }
    if (Base64PathName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Base64PathName);
    }
    if (FnType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FnType);
    }
    if (FileMd5.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FileMd5);
    }
    if (CreateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreateTime);
    }
    if (UpdateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpdateTime);
    }
    if (FileContents.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileContents);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FileNode other) {
    if (other == null) {
      return;
    }
    if (other.PathName.Length != 0) {
      PathName = other.PathName;
    }
    if (other.Base64PathName.Length != 0) {
      Base64PathName = other.Base64PathName;
    }
    if (other.FnType != 0) {
      FnType = other.FnType;
    }
    if (other.FileMd5.Length != 0) {
      FileMd5 = other.FileMd5;
    }
    if (other.CreateTime != 0UL) {
      CreateTime = other.CreateTime;
    }
    if (other.UpdateTime != 0UL) {
      UpdateTime = other.UpdateTime;
    }
    if (other.FileContents.Length != 0) {
      FileContents = other.FileContents;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          PathName = input.ReadString();
          break;
        }
        case 18: {
          Base64PathName = input.ReadString();
          break;
        }
        case 24: {
          FnType = input.ReadUInt32();
          break;
        }
        case 34: {
          FileMd5 = input.ReadString();
          break;
        }
        case 40: {
          CreateTime = input.ReadUInt64();
          break;
        }
        case 48: {
          UpdateTime = input.ReadUInt64();
          break;
        }
        case 58: {
          FileContents = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class FileList : pb::IMessage<FileList> {
  private static readonly pb::MessageParser<FileList> _parser = new pb::MessageParser<FileList>(() => new FileList());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FileList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FileList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FileList(FileList other) : this() {
    fileList_ = other.fileList_.Clone();
    rootPath_ = other.rootPath_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FileList Clone() {
    return new FileList(this);
  }

  /// <summary>Field number for the "file_list" field.</summary>
  public const int FileList_FieldNumber = 1;
  private static readonly pb::FieldCodec<global::FileNode> _repeated_fileList_codec
      = pb::FieldCodec.ForMessage(10, global::FileNode.Parser);
  private readonly pbc::RepeatedField<global::FileNode> fileList_ = new pbc::RepeatedField<global::FileNode>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::FileNode> FileList_ {
    get { return fileList_; }
  }

  /// <summary>Field number for the "root_path" field.</summary>
  public const int RootPathFieldNumber = 2;
  private string rootPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RootPath {
    get { return rootPath_; }
    set {
      rootPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FileList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FileList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!fileList_.Equals(other.fileList_)) return false;
    if (RootPath != other.RootPath) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= fileList_.GetHashCode();
    if (RootPath.Length != 0) hash ^= RootPath.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    fileList_.WriteTo(output, _repeated_fileList_codec);
    if (RootPath.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RootPath);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += fileList_.CalculateSize(_repeated_fileList_codec);
    if (RootPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RootPath);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FileList other) {
    if (other == null) {
      return;
    }
    fileList_.Add(other.fileList_);
    if (other.RootPath.Length != 0) {
      RootPath = other.RootPath;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          fileList_.AddEntriesFrom(input, _repeated_fileList_codec);
          break;
        }
        case 18: {
          RootPath = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class K8_Attach_Unit : pb::IMessage<K8_Attach_Unit> {
  private static readonly pb::MessageParser<K8_Attach_Unit> _parser = new pb::MessageParser<K8_Attach_Unit>(() => new K8_Attach_Unit());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<K8_Attach_Unit> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public K8_Attach_Unit() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public K8_Attach_Unit(K8_Attach_Unit other) : this() {
    attachType_ = other.attachType_;
    attachUrl_ = other.attachUrl_;
    attachName_ = other.attachName_;
    AttachFiles = other.attachFiles_ != null ? other.AttachFiles.Clone() : null;
    clientData_ = other.clientData_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public K8_Attach_Unit Clone() {
    return new K8_Attach_Unit(this);
  }

  /// <summary>Field number for the "attach_type" field.</summary>
  public const int AttachTypeFieldNumber = 1;
  private global::K8_Attach_Type attachType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Type AttachType {
    get { return attachType_; }
    set {
      attachType_ = value;
    }
  }

  /// <summary>Field number for the "attach_url" field.</summary>
  public const int AttachUrlFieldNumber = 2;
  private string attachUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUrl {
    get { return attachUrl_; }
    set {
      attachUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attach_name" field.</summary>
  public const int AttachNameFieldNumber = 3;
  private string attachName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachName {
    get { return attachName_; }
    set {
      attachName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attach_files" field.</summary>
  public const int AttachFilesFieldNumber = 4;
  private global::FileList attachFiles_;
  /// <summary>
  /// when K8_Attach_Type==KAT_Projects\KAT_Gameboard\KAT_Gameboard_Play  and upload files;  download files use DownloadDir from attach_url 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileList AttachFiles {
    get { return attachFiles_; }
    set {
      attachFiles_ = value;
    }
  }

  /// <summary>Field number for the "client_data" field.</summary>
  public const int ClientDataFieldNumber = 5;
  private string clientData_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ClientData {
    get { return clientData_; }
    set {
      clientData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as K8_Attach_Unit);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(K8_Attach_Unit other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttachType != other.AttachType) return false;
    if (AttachUrl != other.AttachUrl) return false;
    if (AttachName != other.AttachName) return false;
    if (!object.Equals(AttachFiles, other.AttachFiles)) return false;
    if (ClientData != other.ClientData) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AttachType != 0) hash ^= AttachType.GetHashCode();
    if (AttachUrl.Length != 0) hash ^= AttachUrl.GetHashCode();
    if (AttachName.Length != 0) hash ^= AttachName.GetHashCode();
    if (attachFiles_ != null) hash ^= AttachFiles.GetHashCode();
    if (ClientData.Length != 0) hash ^= ClientData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AttachType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) AttachType);
    }
    if (AttachUrl.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(AttachUrl);
    }
    if (AttachName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(AttachName);
    }
    if (attachFiles_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(AttachFiles);
    }
    if (ClientData.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(ClientData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AttachType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttachType);
    }
    if (AttachUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUrl);
    }
    if (AttachName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachName);
    }
    if (attachFiles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttachFiles);
    }
    if (ClientData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(K8_Attach_Unit other) {
    if (other == null) {
      return;
    }
    if (other.AttachType != 0) {
      AttachType = other.AttachType;
    }
    if (other.AttachUrl.Length != 0) {
      AttachUrl = other.AttachUrl;
    }
    if (other.AttachName.Length != 0) {
      AttachName = other.AttachName;
    }
    if (other.attachFiles_ != null) {
      if (attachFiles_ == null) {
        attachFiles_ = new global::FileList();
      }
      AttachFiles.MergeFrom(other.AttachFiles);
    }
    if (other.ClientData.Length != 0) {
      ClientData = other.ClientData;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          attachType_ = (global::K8_Attach_Type) input.ReadEnum();
          break;
        }
        case 18: {
          AttachUrl = input.ReadString();
          break;
        }
        case 26: {
          AttachName = input.ReadString();
          break;
        }
        case 34: {
          if (attachFiles_ == null) {
            attachFiles_ = new global::FileList();
          }
          input.ReadMessage(attachFiles_);
          break;
        }
        case 42: {
          ClientData = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class K8_Attach_Info : pb::IMessage<K8_Attach_Info> {
  private static readonly pb::MessageParser<K8_Attach_Info> _parser = new pb::MessageParser<K8_Attach_Info>(() => new K8_Attach_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<K8_Attach_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public K8_Attach_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public K8_Attach_Info(K8_Attach_Info other) : this() {
    attachList_ = other.attachList_.Clone();
    attachMaxId_ = other.attachMaxId_;
    attachUniqueId_ = other.attachUniqueId_;
    attachType_ = other.attachType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public K8_Attach_Info Clone() {
    return new K8_Attach_Info(this);
  }

  /// <summary>Field number for the "attach_list" field.</summary>
  public const int AttachListFieldNumber = 1;
  private static readonly pbc::MapField<uint, global::K8_Attach_Unit>.Codec _map_attachList_codec
      = new pbc::MapField<uint, global::K8_Attach_Unit>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::K8_Attach_Unit.Parser), 10);
  private readonly pbc::MapField<uint, global::K8_Attach_Unit> attachList_ = new pbc::MapField<uint, global::K8_Attach_Unit>();
  /// <summary>
  ///  id &lt;---> node
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::K8_Attach_Unit> AttachList {
    get { return attachList_; }
  }

  /// <summary>Field number for the "attach_max_id" field.</summary>
  public const int AttachMaxIdFieldNumber = 2;
  private uint attachMaxId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AttachMaxId {
    get { return attachMaxId_; }
    set {
      attachMaxId_ = value;
    }
  }

  /// <summary>Field number for the "attach_unique_id" field.</summary>
  public const int AttachUniqueIdFieldNumber = 3;
  private string attachUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUniqueId {
    get { return attachUniqueId_; }
    set {
      attachUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attach_type" field.</summary>
  public const int AttachTypeFieldNumber = 4;
  private global::Project_Language_Type attachType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type AttachType {
    get { return attachType_; }
    set {
      attachType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as K8_Attach_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(K8_Attach_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!AttachList.Equals(other.AttachList)) return false;
    if (AttachMaxId != other.AttachMaxId) return false;
    if (AttachUniqueId != other.AttachUniqueId) return false;
    if (AttachType != other.AttachType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= AttachList.GetHashCode();
    if (AttachMaxId != 0) hash ^= AttachMaxId.GetHashCode();
    if (AttachUniqueId.Length != 0) hash ^= AttachUniqueId.GetHashCode();
    if (AttachType != 0) hash ^= AttachType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    attachList_.WriteTo(output, _map_attachList_codec);
    if (AttachMaxId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(AttachMaxId);
    }
    if (AttachUniqueId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(AttachUniqueId);
    }
    if (AttachType != 0) {
      output.WriteRawTag(32);
      output.WriteEnum((int) AttachType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += attachList_.CalculateSize(_map_attachList_codec);
    if (AttachMaxId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttachMaxId);
    }
    if (AttachUniqueId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUniqueId);
    }
    if (AttachType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttachType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(K8_Attach_Info other) {
    if (other == null) {
      return;
    }
    attachList_.Add(other.attachList_);
    if (other.AttachMaxId != 0) {
      AttachMaxId = other.AttachMaxId;
    }
    if (other.AttachUniqueId.Length != 0) {
      AttachUniqueId = other.AttachUniqueId;
    }
    if (other.AttachType != 0) {
      AttachType = other.AttachType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          attachList_.AddEntriesFrom(input, _map_attachList_codec);
          break;
        }
        case 16: {
          AttachMaxId = input.ReadUInt32();
          break;
        }
        case 26: {
          AttachUniqueId = input.ReadString();
          break;
        }
        case 32: {
          attachType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class User_Topic_Unit_Info : pb::IMessage<User_Topic_Unit_Info> {
  private static readonly pb::MessageParser<User_Topic_Unit_Info> _parser = new pb::MessageParser<User_Topic_Unit_Info>(() => new User_Topic_Unit_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Topic_Unit_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Topic_Unit_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Topic_Unit_Info(User_Topic_Unit_Info other) : this() {
    topicType_ = other.topicType_;
    topicAttendTime_ = other.topicAttendTime_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Topic_Unit_Info Clone() {
    return new User_Topic_Unit_Info(this);
  }

  /// <summary>Field number for the "topic_type" field.</summary>
  public const int TopicTypeFieldNumber = 1;
  private global::Topic_Type topicType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Type TopicType {
    get { return topicType_; }
    set {
      topicType_ = value;
    }
  }

  /// <summary>Field number for the "topic_attend_time" field.</summary>
  public const int TopicAttendTimeFieldNumber = 2;
  private ulong topicAttendTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong TopicAttendTime {
    get { return topicAttendTime_; }
    set {
      topicAttendTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Topic_Unit_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Topic_Unit_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicType != other.TopicType) return false;
    if (TopicAttendTime != other.TopicAttendTime) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicType != 0) hash ^= TopicType.GetHashCode();
    if (TopicAttendTime != 0UL) hash ^= TopicAttendTime.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) TopicType);
    }
    if (TopicAttendTime != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(TopicAttendTime);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TopicType);
    }
    if (TopicAttendTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TopicAttendTime);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Topic_Unit_Info other) {
    if (other == null) {
      return;
    }
    if (other.TopicType != 0) {
      TopicType = other.TopicType;
    }
    if (other.TopicAttendTime != 0UL) {
      TopicAttendTime = other.TopicAttendTime;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          topicType_ = (global::Topic_Type) input.ReadEnum();
          break;
        }
        case 16: {
          TopicAttendTime = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class User_Topic_Info : pb::IMessage<User_Topic_Info> {
  private static readonly pb::MessageParser<User_Topic_Info> _parser = new pb::MessageParser<User_Topic_Info>(() => new User_Topic_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<User_Topic_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Topic_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Topic_Info(User_Topic_Info other) : this() {
    userCreateTopicMap_ = other.userCreateTopicMap_.Clone();
    userAttendTopicMap_ = other.userAttendTopicMap_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public User_Topic_Info Clone() {
    return new User_Topic_Info(this);
  }

  /// <summary>Field number for the "user_create_topic_map" field.</summary>
  public const int UserCreateTopicMapFieldNumber = 1;
  private static readonly pbc::MapField<uint, global::User_Topic_Unit_Info>.Codec _map_userCreateTopicMap_codec
      = new pbc::MapField<uint, global::User_Topic_Unit_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Topic_Unit_Info.Parser), 10);
  private readonly pbc::MapField<uint, global::User_Topic_Unit_Info> userCreateTopicMap_ = new pbc::MapField<uint, global::User_Topic_Unit_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Topic_Unit_Info> UserCreateTopicMap {
    get { return userCreateTopicMap_; }
  }

  /// <summary>Field number for the "user_attend_topic_map" field.</summary>
  public const int UserAttendTopicMapFieldNumber = 3;
  private static readonly pbc::MapField<uint, global::User_Topic_Unit_Info>.Codec _map_userAttendTopicMap_codec
      = new pbc::MapField<uint, global::User_Topic_Unit_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::User_Topic_Unit_Info.Parser), 26);
  private readonly pbc::MapField<uint, global::User_Topic_Unit_Info> userAttendTopicMap_ = new pbc::MapField<uint, global::User_Topic_Unit_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::User_Topic_Unit_Info> UserAttendTopicMap {
    get { return userAttendTopicMap_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as User_Topic_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(User_Topic_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!UserCreateTopicMap.Equals(other.UserCreateTopicMap)) return false;
    if (!UserAttendTopicMap.Equals(other.UserAttendTopicMap)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= UserCreateTopicMap.GetHashCode();
    hash ^= UserAttendTopicMap.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    userCreateTopicMap_.WriteTo(output, _map_userCreateTopicMap_codec);
    userAttendTopicMap_.WriteTo(output, _map_userAttendTopicMap_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += userCreateTopicMap_.CalculateSize(_map_userCreateTopicMap_codec);
    size += userAttendTopicMap_.CalculateSize(_map_userAttendTopicMap_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(User_Topic_Info other) {
    if (other == null) {
      return;
    }
    userCreateTopicMap_.Add(other.userCreateTopicMap_);
    userAttendTopicMap_.Add(other.userAttendTopicMap_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          userCreateTopicMap_.AddEntriesFrom(input, _map_userCreateTopicMap_codec);
          break;
        }
        case 26: {
          userAttendTopicMap_.AddEntriesFrom(input, _map_userAttendTopicMap_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GBLike_Info : pb::IMessage<GBLike_Info> {
  private static readonly pb::MessageParser<GBLike_Info> _parser = new pb::MessageParser<GBLike_Info>(() => new GBLike_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GBLike_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GBLike_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GBLike_Info(GBLike_Info other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GBLike_Info Clone() {
    return new GBLike_Info(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GBLike_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GBLike_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GBLike_Info other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class GBAnswer : pb::IMessage<GBAnswer> {
  private static readonly pb::MessageParser<GBAnswer> _parser = new pb::MessageParser<GBAnswer>(() => new GBAnswer());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GBAnswer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GBAnswer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GBAnswer(GBAnswer other) : this() {
    gbScriptShow_ = other.gbScriptShow_;
    downloadCount_ = other.downloadCount_;
    projPath_ = other.projPath_;
    answerTime_ = other.answerTime_;
    answerName_ = other.answerName_;
    gbLikeList_ = other.gbLikeList_.Clone();
    answerId_ = other.answerId_;
    gbScore_ = other.gbScore_;
    answerUserId_ = other.answerUserId_;
    answerNickname_ = other.answerNickname_;
    answerProjectType_ = other.answerProjectType_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GBAnswer Clone() {
    return new GBAnswer(this);
  }

  /// <summary>Field number for the "gb_script_show" field.</summary>
  public const int GbScriptShowFieldNumber = 1;
  private uint gbScriptShow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbScriptShow {
    get { return gbScriptShow_; }
    set {
      gbScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "download_count" field.</summary>
  public const int DownloadCountFieldNumber = 2;
  private uint downloadCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DownloadCount {
    get { return downloadCount_; }
    set {
      downloadCount_ = value;
    }
  }

  /// <summary>Field number for the "proj_path" field.</summary>
  public const int ProjPathFieldNumber = 3;
  private string projPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjPath {
    get { return projPath_; }
    set {
      projPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "answer_time" field.</summary>
  public const int AnswerTimeFieldNumber = 4;
  private ulong answerTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong AnswerTime {
    get { return answerTime_; }
    set {
      answerTime_ = value;
    }
  }

  /// <summary>Field number for the "answer_name" field.</summary>
  public const int AnswerNameFieldNumber = 5;
  private string answerName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AnswerName {
    get { return answerName_; }
    set {
      answerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_like_list" field.</summary>
  public const int GbLikeListFieldNumber = 6;
  private static readonly pbc::MapField<uint, global::GBLike_Info>.Codec _map_gbLikeList_codec
      = new pbc::MapField<uint, global::GBLike_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::GBLike_Info.Parser), 50);
  private readonly pbc::MapField<uint, global::GBLike_Info> gbLikeList_ = new pbc::MapField<uint, global::GBLike_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::GBLike_Info> GbLikeList {
    get { return gbLikeList_; }
  }

  /// <summary>Field number for the "answer_id" field.</summary>
  public const int AnswerIdFieldNumber = 7;
  private uint answerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerId {
    get { return answerId_; }
    set {
      answerId_ = value;
    }
  }

  /// <summary>Field number for the "gb_score" field.</summary>
  public const int GbScoreFieldNumber = 8;
  private int gbScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GbScore {
    get { return gbScore_; }
    set {
      gbScore_ = value;
    }
  }

  /// <summary>Field number for the "answer_user_id" field.</summary>
  public const int AnswerUserIdFieldNumber = 9;
  private uint answerUserId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerUserId {
    get { return answerUserId_; }
    set {
      answerUserId_ = value;
    }
  }

  /// <summary>Field number for the "answer_nickname" field.</summary>
  public const int AnswerNicknameFieldNumber = 10;
  private string answerNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AnswerNickname {
    get { return answerNickname_; }
    set {
      answerNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "answer_project_type" field.</summary>
  public const int AnswerProjectTypeFieldNumber = 11;
  private uint answerProjectType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AnswerProjectType {
    get { return answerProjectType_; }
    set {
      answerProjectType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GBAnswer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GBAnswer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbScriptShow != other.GbScriptShow) return false;
    if (DownloadCount != other.DownloadCount) return false;
    if (ProjPath != other.ProjPath) return false;
    if (AnswerTime != other.AnswerTime) return false;
    if (AnswerName != other.AnswerName) return false;
    if (!GbLikeList.Equals(other.GbLikeList)) return false;
    if (AnswerId != other.AnswerId) return false;
    if (GbScore != other.GbScore) return false;
    if (AnswerUserId != other.AnswerUserId) return false;
    if (AnswerNickname != other.AnswerNickname) return false;
    if (AnswerProjectType != other.AnswerProjectType) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbScriptShow != 0) hash ^= GbScriptShow.GetHashCode();
    if (DownloadCount != 0) hash ^= DownloadCount.GetHashCode();
    if (ProjPath.Length != 0) hash ^= ProjPath.GetHashCode();
    if (AnswerTime != 0UL) hash ^= AnswerTime.GetHashCode();
    if (AnswerName.Length != 0) hash ^= AnswerName.GetHashCode();
    hash ^= GbLikeList.GetHashCode();
    if (AnswerId != 0) hash ^= AnswerId.GetHashCode();
    if (GbScore != 0) hash ^= GbScore.GetHashCode();
    if (AnswerUserId != 0) hash ^= AnswerUserId.GetHashCode();
    if (AnswerNickname.Length != 0) hash ^= AnswerNickname.GetHashCode();
    if (AnswerProjectType != 0) hash ^= AnswerProjectType.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbScriptShow != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GbScriptShow);
    }
    if (DownloadCount != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(DownloadCount);
    }
    if (ProjPath.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ProjPath);
    }
    if (AnswerTime != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(AnswerTime);
    }
    if (AnswerName.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(AnswerName);
    }
    gbLikeList_.WriteTo(output, _map_gbLikeList_codec);
    if (AnswerId != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(AnswerId);
    }
    if (GbScore != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(GbScore);
    }
    if (AnswerUserId != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(AnswerUserId);
    }
    if (AnswerNickname.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(AnswerNickname);
    }
    if (AnswerProjectType != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(AnswerProjectType);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbScriptShow);
    }
    if (DownloadCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DownloadCount);
    }
    if (ProjPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjPath);
    }
    if (AnswerTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AnswerTime);
    }
    if (AnswerName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AnswerName);
    }
    size += gbLikeList_.CalculateSize(_map_gbLikeList_codec);
    if (AnswerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerId);
    }
    if (GbScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GbScore);
    }
    if (AnswerUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerUserId);
    }
    if (AnswerNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AnswerNickname);
    }
    if (AnswerProjectType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnswerProjectType);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GBAnswer other) {
    if (other == null) {
      return;
    }
    if (other.GbScriptShow != 0) {
      GbScriptShow = other.GbScriptShow;
    }
    if (other.DownloadCount != 0) {
      DownloadCount = other.DownloadCount;
    }
    if (other.ProjPath.Length != 0) {
      ProjPath = other.ProjPath;
    }
    if (other.AnswerTime != 0UL) {
      AnswerTime = other.AnswerTime;
    }
    if (other.AnswerName.Length != 0) {
      AnswerName = other.AnswerName;
    }
    gbLikeList_.Add(other.gbLikeList_);
    if (other.AnswerId != 0) {
      AnswerId = other.AnswerId;
    }
    if (other.GbScore != 0) {
      GbScore = other.GbScore;
    }
    if (other.AnswerUserId != 0) {
      AnswerUserId = other.AnswerUserId;
    }
    if (other.AnswerNickname.Length != 0) {
      AnswerNickname = other.AnswerNickname;
    }
    if (other.AnswerProjectType != 0) {
      AnswerProjectType = other.AnswerProjectType;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          GbScriptShow = input.ReadUInt32();
          break;
        }
        case 16: {
          DownloadCount = input.ReadUInt32();
          break;
        }
        case 26: {
          ProjPath = input.ReadString();
          break;
        }
        case 32: {
          AnswerTime = input.ReadUInt64();
          break;
        }
        case 42: {
          AnswerName = input.ReadString();
          break;
        }
        case 50: {
          gbLikeList_.AddEntriesFrom(input, _map_gbLikeList_codec);
          break;
        }
        case 56: {
          AnswerId = input.ReadUInt32();
          break;
        }
        case 64: {
          GbScore = input.ReadInt32();
          break;
        }
        case 72: {
          AnswerUserId = input.ReadUInt32();
          break;
        }
        case 82: {
          AnswerNickname = input.ReadString();
          break;
        }
        case 88: {
          AnswerProjectType = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class GameBoard_New : pb::IMessage<GameBoard_New> {
  private static readonly pb::MessageParser<GameBoard_New> _parser = new pb::MessageParser<GameBoard_New>(() => new GameBoard_New());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameBoard_New> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameBoard_New() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameBoard_New(GameBoard_New other) : this() {
    gbName_ = other.gbName_;
    gbDescription_ = other.gbDescription_;
    gbScriptShow_ = other.gbScriptShow_;
    gbDownloadCount_ = other.gbDownloadCount_;
    gbCreateId_ = other.gbCreateId_;
    gbCreateTime_ = other.gbCreateTime_;
    gbSenceId_ = other.gbSenceId_;
    gbLikeList_ = other.gbLikeList_.Clone();
    gbAnswerList_ = other.gbAnswerList_.Clone();
    projPath_ = other.projPath_;
    gbCreaterNickname_ = other.gbCreaterNickname_;
    gbParameters_ = other.gbParameters_;
    gbAllowRepeatAnswer_ = other.gbAllowRepeatAnswer_;
    gbMaxAnswerId_ = other.gbMaxAnswerId_;
    gbProjectLanguageType_ = other.gbProjectLanguageType_;
    gbUpdateTime_ = other.gbUpdateTime_;
    GbAttachInfoNew = other.gbAttachInfoNew_ != null ? other.GbAttachInfoNew.Clone() : null;
    gbType_ = other.gbType_;
    gbUniqueId_ = other.gbUniqueId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameBoard_New Clone() {
    return new GameBoard_New(this);
  }

  /// <summary>Field number for the "gb_name" field.</summary>
  public const int GbNameFieldNumber = 2;
  private string gbName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbName {
    get { return gbName_; }
    set {
      gbName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_description" field.</summary>
  public const int GbDescriptionFieldNumber = 3;
  private string gbDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbDescription {
    get { return gbDescription_; }
    set {
      gbDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_script_show" field.</summary>
  public const int GbScriptShowFieldNumber = 4;
  private uint gbScriptShow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbScriptShow {
    get { return gbScriptShow_; }
    set {
      gbScriptShow_ = value;
    }
  }

  /// <summary>Field number for the "gb_download_count" field.</summary>
  public const int GbDownloadCountFieldNumber = 5;
  private uint gbDownloadCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbDownloadCount {
    get { return gbDownloadCount_; }
    set {
      gbDownloadCount_ = value;
    }
  }

  /// <summary>Field number for the "gb_create_id" field.</summary>
  public const int GbCreateIdFieldNumber = 6;
  private uint gbCreateId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbCreateId {
    get { return gbCreateId_; }
    set {
      gbCreateId_ = value;
    }
  }

  /// <summary>Field number for the "gb_create_time" field.</summary>
  public const int GbCreateTimeFieldNumber = 7;
  private ulong gbCreateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong GbCreateTime {
    get { return gbCreateTime_; }
    set {
      gbCreateTime_ = value;
    }
  }

  /// <summary>Field number for the "gb_sence_id" field.</summary>
  public const int GbSenceIdFieldNumber = 8;
  private uint gbSenceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbSenceId {
    get { return gbSenceId_; }
    set {
      gbSenceId_ = value;
    }
  }

  /// <summary>Field number for the "gb_like_list" field.</summary>
  public const int GbLikeListFieldNumber = 9;
  private static readonly pbc::MapField<uint, global::GBLike_Info>.Codec _map_gbLikeList_codec
      = new pbc::MapField<uint, global::GBLike_Info>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::GBLike_Info.Parser), 74);
  private readonly pbc::MapField<uint, global::GBLike_Info> gbLikeList_ = new pbc::MapField<uint, global::GBLike_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::GBLike_Info> GbLikeList {
    get { return gbLikeList_; }
  }

  /// <summary>Field number for the "gb_answer_list" field.</summary>
  public const int GbAnswerListFieldNumber = 10;
  private static readonly pbc::MapField<uint, global::GBAnswer>.Codec _map_gbAnswerList_codec
      = new pbc::MapField<uint, global::GBAnswer>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::GBAnswer.Parser), 82);
  private readonly pbc::MapField<uint, global::GBAnswer> gbAnswerList_ = new pbc::MapField<uint, global::GBAnswer>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::GBAnswer> GbAnswerList {
    get { return gbAnswerList_; }
  }

  /// <summary>Field number for the "proj_path" field.</summary>
  public const int ProjPathFieldNumber = 11;
  private string projPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjPath {
    get { return projPath_; }
    set {
      projPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_creater_nickname" field.</summary>
  public const int GbCreaterNicknameFieldNumber = 12;
  private string gbCreaterNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbCreaterNickname {
    get { return gbCreaterNickname_; }
    set {
      gbCreaterNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_parameters" field.</summary>
  public const int GbParametersFieldNumber = 15;
  private string gbParameters_ = "";
  /// <summary>
  ///  json string
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbParameters {
    get { return gbParameters_; }
    set {
      gbParameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gb_allow_repeat_answer" field.</summary>
  public const int GbAllowRepeatAnswerFieldNumber = 16;
  private bool gbAllowRepeatAnswer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool GbAllowRepeatAnswer {
    get { return gbAllowRepeatAnswer_; }
    set {
      gbAllowRepeatAnswer_ = value;
    }
  }

  /// <summary>Field number for the "gb_max_answer_id" field.</summary>
  public const int GbMaxAnswerIdFieldNumber = 17;
  private uint gbMaxAnswerId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GbMaxAnswerId {
    get { return gbMaxAnswerId_; }
    set {
      gbMaxAnswerId_ = value;
    }
  }

  /// <summary>Field number for the "gb_project_language_type" field.</summary>
  public const int GbProjectLanguageTypeFieldNumber = 18;
  private global::Project_Language_Type gbProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type GbProjectLanguageType {
    get { return gbProjectLanguageType_; }
    set {
      gbProjectLanguageType_ = value;
    }
  }

  /// <summary>Field number for the "gb_update_time" field.</summary>
  public const int GbUpdateTimeFieldNumber = 19;
  private ulong gbUpdateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong GbUpdateTime {
    get { return gbUpdateTime_; }
    set {
      gbUpdateTime_ = value;
    }
  }

  /// <summary>Field number for the "gb_attach_info_new" field.</summary>
  public const int GbAttachInfoNewFieldNumber = 20;
  private global::K8_Attach_Info gbAttachInfoNew_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info GbAttachInfoNew {
    get { return gbAttachInfoNew_; }
    set {
      gbAttachInfoNew_ = value;
    }
  }

  /// <summary>Field number for the "gb_type" field.</summary>
  public const int GbTypeFieldNumber = 21;
  private global::GameBoard_Type gbType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameBoard_Type GbType {
    get { return gbType_; }
    set {
      gbType_ = value;
    }
  }

  /// <summary>Field number for the "gb_unique_id" field.</summary>
  public const int GbUniqueIdFieldNumber = 22;
  private string gbUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GbUniqueId {
    get { return gbUniqueId_; }
    set {
      gbUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameBoard_New);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameBoard_New other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GbName != other.GbName) return false;
    if (GbDescription != other.GbDescription) return false;
    if (GbScriptShow != other.GbScriptShow) return false;
    if (GbDownloadCount != other.GbDownloadCount) return false;
    if (GbCreateId != other.GbCreateId) return false;
    if (GbCreateTime != other.GbCreateTime) return false;
    if (GbSenceId != other.GbSenceId) return false;
    if (!GbLikeList.Equals(other.GbLikeList)) return false;
    if (!GbAnswerList.Equals(other.GbAnswerList)) return false;
    if (ProjPath != other.ProjPath) return false;
    if (GbCreaterNickname != other.GbCreaterNickname) return false;
    if (GbParameters != other.GbParameters) return false;
    if (GbAllowRepeatAnswer != other.GbAllowRepeatAnswer) return false;
    if (GbMaxAnswerId != other.GbMaxAnswerId) return false;
    if (GbProjectLanguageType != other.GbProjectLanguageType) return false;
    if (GbUpdateTime != other.GbUpdateTime) return false;
    if (!object.Equals(GbAttachInfoNew, other.GbAttachInfoNew)) return false;
    if (GbType != other.GbType) return false;
    if (GbUniqueId != other.GbUniqueId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GbName.Length != 0) hash ^= GbName.GetHashCode();
    if (GbDescription.Length != 0) hash ^= GbDescription.GetHashCode();
    if (GbScriptShow != 0) hash ^= GbScriptShow.GetHashCode();
    if (GbDownloadCount != 0) hash ^= GbDownloadCount.GetHashCode();
    if (GbCreateId != 0) hash ^= GbCreateId.GetHashCode();
    if (GbCreateTime != 0UL) hash ^= GbCreateTime.GetHashCode();
    if (GbSenceId != 0) hash ^= GbSenceId.GetHashCode();
    hash ^= GbLikeList.GetHashCode();
    hash ^= GbAnswerList.GetHashCode();
    if (ProjPath.Length != 0) hash ^= ProjPath.GetHashCode();
    if (GbCreaterNickname.Length != 0) hash ^= GbCreaterNickname.GetHashCode();
    if (GbParameters.Length != 0) hash ^= GbParameters.GetHashCode();
    if (GbAllowRepeatAnswer != false) hash ^= GbAllowRepeatAnswer.GetHashCode();
    if (GbMaxAnswerId != 0) hash ^= GbMaxAnswerId.GetHashCode();
    if (GbProjectLanguageType != 0) hash ^= GbProjectLanguageType.GetHashCode();
    if (GbUpdateTime != 0UL) hash ^= GbUpdateTime.GetHashCode();
    if (gbAttachInfoNew_ != null) hash ^= GbAttachInfoNew.GetHashCode();
    if (GbType != 0) hash ^= GbType.GetHashCode();
    if (GbUniqueId.Length != 0) hash ^= GbUniqueId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GbName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(GbName);
    }
    if (GbDescription.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(GbDescription);
    }
    if (GbScriptShow != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(GbScriptShow);
    }
    if (GbDownloadCount != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(GbDownloadCount);
    }
    if (GbCreateId != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(GbCreateId);
    }
    if (GbCreateTime != 0UL) {
      output.WriteRawTag(56);
      output.WriteUInt64(GbCreateTime);
    }
    if (GbSenceId != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(GbSenceId);
    }
    gbLikeList_.WriteTo(output, _map_gbLikeList_codec);
    gbAnswerList_.WriteTo(output, _map_gbAnswerList_codec);
    if (ProjPath.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(ProjPath);
    }
    if (GbCreaterNickname.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(GbCreaterNickname);
    }
    if (GbParameters.Length != 0) {
      output.WriteRawTag(122);
      output.WriteString(GbParameters);
    }
    if (GbAllowRepeatAnswer != false) {
      output.WriteRawTag(128, 1);
      output.WriteBool(GbAllowRepeatAnswer);
    }
    if (GbMaxAnswerId != 0) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(GbMaxAnswerId);
    }
    if (GbProjectLanguageType != 0) {
      output.WriteRawTag(144, 1);
      output.WriteEnum((int) GbProjectLanguageType);
    }
    if (GbUpdateTime != 0UL) {
      output.WriteRawTag(152, 1);
      output.WriteUInt64(GbUpdateTime);
    }
    if (gbAttachInfoNew_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(GbAttachInfoNew);
    }
    if (GbType != 0) {
      output.WriteRawTag(168, 1);
      output.WriteEnum((int) GbType);
    }
    if (GbUniqueId.Length != 0) {
      output.WriteRawTag(178, 1);
      output.WriteString(GbUniqueId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GbName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbName);
    }
    if (GbDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbDescription);
    }
    if (GbScriptShow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbScriptShow);
    }
    if (GbDownloadCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbDownloadCount);
    }
    if (GbCreateId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbCreateId);
    }
    if (GbCreateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GbCreateTime);
    }
    if (GbSenceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GbSenceId);
    }
    size += gbLikeList_.CalculateSize(_map_gbLikeList_codec);
    size += gbAnswerList_.CalculateSize(_map_gbAnswerList_codec);
    if (ProjPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjPath);
    }
    if (GbCreaterNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbCreaterNickname);
    }
    if (GbParameters.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GbParameters);
    }
    if (GbAllowRepeatAnswer != false) {
      size += 2 + 1;
    }
    if (GbMaxAnswerId != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GbMaxAnswerId);
    }
    if (GbProjectLanguageType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GbProjectLanguageType);
    }
    if (GbUpdateTime != 0UL) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(GbUpdateTime);
    }
    if (gbAttachInfoNew_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GbAttachInfoNew);
    }
    if (GbType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GbType);
    }
    if (GbUniqueId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(GbUniqueId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameBoard_New other) {
    if (other == null) {
      return;
    }
    if (other.GbName.Length != 0) {
      GbName = other.GbName;
    }
    if (other.GbDescription.Length != 0) {
      GbDescription = other.GbDescription;
    }
    if (other.GbScriptShow != 0) {
      GbScriptShow = other.GbScriptShow;
    }
    if (other.GbDownloadCount != 0) {
      GbDownloadCount = other.GbDownloadCount;
    }
    if (other.GbCreateId != 0) {
      GbCreateId = other.GbCreateId;
    }
    if (other.GbCreateTime != 0UL) {
      GbCreateTime = other.GbCreateTime;
    }
    if (other.GbSenceId != 0) {
      GbSenceId = other.GbSenceId;
    }
    gbLikeList_.Add(other.gbLikeList_);
    gbAnswerList_.Add(other.gbAnswerList_);
    if (other.ProjPath.Length != 0) {
      ProjPath = other.ProjPath;
    }
    if (other.GbCreaterNickname.Length != 0) {
      GbCreaterNickname = other.GbCreaterNickname;
    }
    if (other.GbParameters.Length != 0) {
      GbParameters = other.GbParameters;
    }
    if (other.GbAllowRepeatAnswer != false) {
      GbAllowRepeatAnswer = other.GbAllowRepeatAnswer;
    }
    if (other.GbMaxAnswerId != 0) {
      GbMaxAnswerId = other.GbMaxAnswerId;
    }
    if (other.GbProjectLanguageType != 0) {
      GbProjectLanguageType = other.GbProjectLanguageType;
    }
    if (other.GbUpdateTime != 0UL) {
      GbUpdateTime = other.GbUpdateTime;
    }
    if (other.gbAttachInfoNew_ != null) {
      if (gbAttachInfoNew_ == null) {
        gbAttachInfoNew_ = new global::K8_Attach_Info();
      }
      GbAttachInfoNew.MergeFrom(other.GbAttachInfoNew);
    }
    if (other.GbType != 0) {
      GbType = other.GbType;
    }
    if (other.GbUniqueId.Length != 0) {
      GbUniqueId = other.GbUniqueId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 18: {
          GbName = input.ReadString();
          break;
        }
        case 26: {
          GbDescription = input.ReadString();
          break;
        }
        case 32: {
          GbScriptShow = input.ReadUInt32();
          break;
        }
        case 40: {
          GbDownloadCount = input.ReadUInt32();
          break;
        }
        case 48: {
          GbCreateId = input.ReadUInt32();
          break;
        }
        case 56: {
          GbCreateTime = input.ReadUInt64();
          break;
        }
        case 64: {
          GbSenceId = input.ReadUInt32();
          break;
        }
        case 74: {
          gbLikeList_.AddEntriesFrom(input, _map_gbLikeList_codec);
          break;
        }
        case 82: {
          gbAnswerList_.AddEntriesFrom(input, _map_gbAnswerList_codec);
          break;
        }
        case 90: {
          ProjPath = input.ReadString();
          break;
        }
        case 98: {
          GbCreaterNickname = input.ReadString();
          break;
        }
        case 122: {
          GbParameters = input.ReadString();
          break;
        }
        case 128: {
          GbAllowRepeatAnswer = input.ReadBool();
          break;
        }
        case 136: {
          GbMaxAnswerId = input.ReadUInt32();
          break;
        }
        case 144: {
          gbProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
        case 152: {
          GbUpdateTime = input.ReadUInt64();
          break;
        }
        case 162: {
          if (gbAttachInfoNew_ == null) {
            gbAttachInfoNew_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(gbAttachInfoNew_);
          break;
        }
        case 168: {
          gbType_ = (global::GameBoard_Type) input.ReadEnum();
          break;
        }
        case 178: {
          GbUniqueId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Topic_Info : pb::IMessage<Topic_Info> {
  private static readonly pb::MessageParser<Topic_Info> _parser = new pb::MessageParser<Topic_Info>(() => new Topic_Info());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Topic_Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Topic_Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Topic_Info(Topic_Info other) : this() {
    topicId_ = other.topicId_;
    topicStatus_ = other.topicStatus_;
    topicName_ = other.topicName_;
    topicDescription_ = other.topicDescription_;
    topicCreaterUserid_ = other.topicCreaterUserid_;
    topicCreaterNickname_ = other.topicCreaterNickname_;
    topicCfg_ = other.topicCfg_;
    topicPrice_ = other.topicPrice_;
    topicPublishTime_ = other.topicPublishTime_;
    topicUpdateTime_ = other.topicUpdateTime_;
    topicAttendUserCount_ = other.topicAttendUserCount_;
    topicProjectLanguageType_ = other.topicProjectLanguageType_;
    TopicAttachInfo = other.topicAttachInfo_ != null ? other.TopicAttachInfo.Clone() : null;
    topicLevel_ = other.topicLevel_;
    topicType_ = other.topicType_;
    topicDownloadCount_ = other.topicDownloadCount_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Topic_Info Clone() {
    return new Topic_Info(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  /// <summary>Field number for the "topic_status" field.</summary>
  public const int TopicStatusFieldNumber = 2;
  private global::Topic_Status topicStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Status TopicStatus {
    get { return topicStatus_; }
    set {
      topicStatus_ = value;
    }
  }

  /// <summary>Field number for the "topic_name" field.</summary>
  public const int TopicNameFieldNumber = 3;
  private string topicName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TopicName {
    get { return topicName_; }
    set {
      topicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "topic_description" field.</summary>
  public const int TopicDescriptionFieldNumber = 4;
  private string topicDescription_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TopicDescription {
    get { return topicDescription_; }
    set {
      topicDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "topic_creater_userid" field.</summary>
  public const int TopicCreaterUseridFieldNumber = 5;
  private uint topicCreaterUserid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicCreaterUserid {
    get { return topicCreaterUserid_; }
    set {
      topicCreaterUserid_ = value;
    }
  }

  /// <summary>Field number for the "topic_creater_nickname" field.</summary>
  public const int TopicCreaterNicknameFieldNumber = 6;
  private string topicCreaterNickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TopicCreaterNickname {
    get { return topicCreaterNickname_; }
    set {
      topicCreaterNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "topic_cfg" field.</summary>
  public const int TopicCfgFieldNumber = 7;
  private string topicCfg_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TopicCfg {
    get { return topicCfg_; }
    set {
      topicCfg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "topic_price" field.</summary>
  public const int TopicPriceFieldNumber = 8;
  private uint topicPrice_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicPrice {
    get { return topicPrice_; }
    set {
      topicPrice_ = value;
    }
  }

  /// <summary>Field number for the "topic_publish_time" field.</summary>
  public const int TopicPublishTimeFieldNumber = 9;
  private ulong topicPublishTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong TopicPublishTime {
    get { return topicPublishTime_; }
    set {
      topicPublishTime_ = value;
    }
  }

  /// <summary>Field number for the "topic_update_time" field.</summary>
  public const int TopicUpdateTimeFieldNumber = 10;
  private ulong topicUpdateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong TopicUpdateTime {
    get { return topicUpdateTime_; }
    set {
      topicUpdateTime_ = value;
    }
  }

  /// <summary>Field number for the "topic_attend_user_count" field.</summary>
  public const int TopicAttendUserCountFieldNumber = 11;
  private uint topicAttendUserCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicAttendUserCount {
    get { return topicAttendUserCount_; }
    set {
      topicAttendUserCount_ = value;
    }
  }

  /// <summary>Field number for the "topic_project_language_type" field.</summary>
  public const int TopicProjectLanguageTypeFieldNumber = 12;
  private global::Project_Language_Type topicProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type TopicProjectLanguageType {
    get { return topicProjectLanguageType_; }
    set {
      topicProjectLanguageType_ = value;
    }
  }

  /// <summary>Field number for the "topic_attach_info" field.</summary>
  public const int TopicAttachInfoFieldNumber = 13;
  private global::K8_Attach_Info topicAttachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info TopicAttachInfo {
    get { return topicAttachInfo_; }
    set {
      topicAttachInfo_ = value;
    }
  }

  /// <summary>Field number for the "topic_level" field.</summary>
  public const int TopicLevelFieldNumber = 14;
  private uint topicLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicLevel {
    get { return topicLevel_; }
    set {
      topicLevel_ = value;
    }
  }

  /// <summary>Field number for the "topic_type" field.</summary>
  public const int TopicTypeFieldNumber = 15;
  private global::Topic_Type topicType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Type TopicType {
    get { return topicType_; }
    set {
      topicType_ = value;
    }
  }

  /// <summary>Field number for the "topic_download_count" field.</summary>
  public const int TopicDownloadCountFieldNumber = 16;
  private uint topicDownloadCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicDownloadCount {
    get { return topicDownloadCount_; }
    set {
      topicDownloadCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Topic_Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Topic_Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    if (TopicStatus != other.TopicStatus) return false;
    if (TopicName != other.TopicName) return false;
    if (TopicDescription != other.TopicDescription) return false;
    if (TopicCreaterUserid != other.TopicCreaterUserid) return false;
    if (TopicCreaterNickname != other.TopicCreaterNickname) return false;
    if (TopicCfg != other.TopicCfg) return false;
    if (TopicPrice != other.TopicPrice) return false;
    if (TopicPublishTime != other.TopicPublishTime) return false;
    if (TopicUpdateTime != other.TopicUpdateTime) return false;
    if (TopicAttendUserCount != other.TopicAttendUserCount) return false;
    if (TopicProjectLanguageType != other.TopicProjectLanguageType) return false;
    if (!object.Equals(TopicAttachInfo, other.TopicAttachInfo)) return false;
    if (TopicLevel != other.TopicLevel) return false;
    if (TopicType != other.TopicType) return false;
    if (TopicDownloadCount != other.TopicDownloadCount) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    if (TopicStatus != 0) hash ^= TopicStatus.GetHashCode();
    if (TopicName.Length != 0) hash ^= TopicName.GetHashCode();
    if (TopicDescription.Length != 0) hash ^= TopicDescription.GetHashCode();
    if (TopicCreaterUserid != 0) hash ^= TopicCreaterUserid.GetHashCode();
    if (TopicCreaterNickname.Length != 0) hash ^= TopicCreaterNickname.GetHashCode();
    if (TopicCfg.Length != 0) hash ^= TopicCfg.GetHashCode();
    if (TopicPrice != 0) hash ^= TopicPrice.GetHashCode();
    if (TopicPublishTime != 0UL) hash ^= TopicPublishTime.GetHashCode();
    if (TopicUpdateTime != 0UL) hash ^= TopicUpdateTime.GetHashCode();
    if (TopicAttendUserCount != 0) hash ^= TopicAttendUserCount.GetHashCode();
    if (TopicProjectLanguageType != 0) hash ^= TopicProjectLanguageType.GetHashCode();
    if (topicAttachInfo_ != null) hash ^= TopicAttachInfo.GetHashCode();
    if (TopicLevel != 0) hash ^= TopicLevel.GetHashCode();
    if (TopicType != 0) hash ^= TopicType.GetHashCode();
    if (TopicDownloadCount != 0) hash ^= TopicDownloadCount.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
    if (TopicStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) TopicStatus);
    }
    if (TopicName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(TopicName);
    }
    if (TopicDescription.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(TopicDescription);
    }
    if (TopicCreaterUserid != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(TopicCreaterUserid);
    }
    if (TopicCreaterNickname.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(TopicCreaterNickname);
    }
    if (TopicCfg.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(TopicCfg);
    }
    if (TopicPrice != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(TopicPrice);
    }
    if (TopicPublishTime != 0UL) {
      output.WriteRawTag(72);
      output.WriteUInt64(TopicPublishTime);
    }
    if (TopicUpdateTime != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(TopicUpdateTime);
    }
    if (TopicAttendUserCount != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(TopicAttendUserCount);
    }
    if (TopicProjectLanguageType != 0) {
      output.WriteRawTag(96);
      output.WriteEnum((int) TopicProjectLanguageType);
    }
    if (topicAttachInfo_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(TopicAttachInfo);
    }
    if (TopicLevel != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(TopicLevel);
    }
    if (TopicType != 0) {
      output.WriteRawTag(120);
      output.WriteEnum((int) TopicType);
    }
    if (TopicDownloadCount != 0) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(TopicDownloadCount);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    if (TopicStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TopicStatus);
    }
    if (TopicName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicName);
    }
    if (TopicDescription.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicDescription);
    }
    if (TopicCreaterUserid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicCreaterUserid);
    }
    if (TopicCreaterNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicCreaterNickname);
    }
    if (TopicCfg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicCfg);
    }
    if (TopicPrice != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicPrice);
    }
    if (TopicPublishTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TopicPublishTime);
    }
    if (TopicUpdateTime != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TopicUpdateTime);
    }
    if (TopicAttendUserCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicAttendUserCount);
    }
    if (TopicProjectLanguageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TopicProjectLanguageType);
    }
    if (topicAttachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopicAttachInfo);
    }
    if (TopicLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicLevel);
    }
    if (TopicType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TopicType);
    }
    if (TopicDownloadCount != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TopicDownloadCount);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Topic_Info other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
    if (other.TopicStatus != 0) {
      TopicStatus = other.TopicStatus;
    }
    if (other.TopicName.Length != 0) {
      TopicName = other.TopicName;
    }
    if (other.TopicDescription.Length != 0) {
      TopicDescription = other.TopicDescription;
    }
    if (other.TopicCreaterUserid != 0) {
      TopicCreaterUserid = other.TopicCreaterUserid;
    }
    if (other.TopicCreaterNickname.Length != 0) {
      TopicCreaterNickname = other.TopicCreaterNickname;
    }
    if (other.TopicCfg.Length != 0) {
      TopicCfg = other.TopicCfg;
    }
    if (other.TopicPrice != 0) {
      TopicPrice = other.TopicPrice;
    }
    if (other.TopicPublishTime != 0UL) {
      TopicPublishTime = other.TopicPublishTime;
    }
    if (other.TopicUpdateTime != 0UL) {
      TopicUpdateTime = other.TopicUpdateTime;
    }
    if (other.TopicAttendUserCount != 0) {
      TopicAttendUserCount = other.TopicAttendUserCount;
    }
    if (other.TopicProjectLanguageType != 0) {
      TopicProjectLanguageType = other.TopicProjectLanguageType;
    }
    if (other.topicAttachInfo_ != null) {
      if (topicAttachInfo_ == null) {
        topicAttachInfo_ = new global::K8_Attach_Info();
      }
      TopicAttachInfo.MergeFrom(other.TopicAttachInfo);
    }
    if (other.TopicLevel != 0) {
      TopicLevel = other.TopicLevel;
    }
    if (other.TopicType != 0) {
      TopicType = other.TopicType;
    }
    if (other.TopicDownloadCount != 0) {
      TopicDownloadCount = other.TopicDownloadCount;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
        case 16: {
          topicStatus_ = (global::Topic_Status) input.ReadEnum();
          break;
        }
        case 26: {
          TopicName = input.ReadString();
          break;
        }
        case 34: {
          TopicDescription = input.ReadString();
          break;
        }
        case 40: {
          TopicCreaterUserid = input.ReadUInt32();
          break;
        }
        case 50: {
          TopicCreaterNickname = input.ReadString();
          break;
        }
        case 58: {
          TopicCfg = input.ReadString();
          break;
        }
        case 64: {
          TopicPrice = input.ReadUInt32();
          break;
        }
        case 72: {
          TopicPublishTime = input.ReadUInt64();
          break;
        }
        case 80: {
          TopicUpdateTime = input.ReadUInt64();
          break;
        }
        case 88: {
          TopicAttendUserCount = input.ReadUInt32();
          break;
        }
        case 96: {
          topicProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
        case 106: {
          if (topicAttachInfo_ == null) {
            topicAttachInfo_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(topicAttachInfo_);
          break;
        }
        case 112: {
          TopicLevel = input.ReadUInt32();
          break;
        }
        case 120: {
          topicType_ = (global::Topic_Type) input.ReadEnum();
          break;
        }
        case 128: {
          TopicDownloadCount = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_unique_attach_r   = 901;
/// </summary>
public sealed partial class CMD_Modify_Unique_Attach_r_Parameters : pb::IMessage<CMD_Modify_Unique_Attach_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Unique_Attach_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Unique_Attach_r_Parameters>(() => new CMD_Modify_Unique_Attach_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Unique_Attach_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Unique_Attach_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Unique_Attach_r_Parameters(CMD_Modify_Unique_Attach_r_Parameters other) : this() {
    attachUniqueId_ = other.attachUniqueId_;
    modifyInfo_ = other.modifyInfo_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Unique_Attach_r_Parameters Clone() {
    return new CMD_Modify_Unique_Attach_r_Parameters(this);
  }

  /// <summary>Field number for the "attach_unique_id" field.</summary>
  public const int AttachUniqueIdFieldNumber = 1;
  private string attachUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUniqueId {
    get { return attachUniqueId_; }
    set {
      attachUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "modify_info" field.</summary>
  public const int ModifyInfoFieldNumber = 2;
  private static readonly pbc::MapField<uint, global::K8_Attach_Unit>.Codec _map_modifyInfo_codec
      = new pbc::MapField<uint, global::K8_Attach_Unit>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::K8_Attach_Unit.Parser), 18);
  private readonly pbc::MapField<uint, global::K8_Attach_Unit> modifyInfo_ = new pbc::MapField<uint, global::K8_Attach_Unit>();
  /// <summary>
  ///  attach_id &lt;---> unit info
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::K8_Attach_Unit> ModifyInfo {
    get { return modifyInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Unique_Attach_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Unique_Attach_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttachUniqueId != other.AttachUniqueId) return false;
    if (!ModifyInfo.Equals(other.ModifyInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AttachUniqueId.Length != 0) hash ^= AttachUniqueId.GetHashCode();
    hash ^= ModifyInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AttachUniqueId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AttachUniqueId);
    }
    modifyInfo_.WriteTo(output, _map_modifyInfo_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AttachUniqueId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUniqueId);
    }
    size += modifyInfo_.CalculateSize(_map_modifyInfo_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Unique_Attach_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AttachUniqueId.Length != 0) {
      AttachUniqueId = other.AttachUniqueId;
    }
    modifyInfo_.Add(other.modifyInfo_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AttachUniqueId = input.ReadString();
          break;
        }
        case 18: {
          modifyInfo_.AddEntriesFrom(input, _map_modifyInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_unique_attach_a   = 902;
/// </summary>
public sealed partial class CMD_Modify_Unique_Attach_a_Parameters : pb::IMessage<CMD_Modify_Unique_Attach_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Unique_Attach_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Unique_Attach_a_Parameters>(() => new CMD_Modify_Unique_Attach_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Unique_Attach_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Unique_Attach_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Unique_Attach_a_Parameters(CMD_Modify_Unique_Attach_a_Parameters other) : this() {
    attachUniqueId_ = other.attachUniqueId_;
    modifyInfo_ = other.modifyInfo_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Unique_Attach_a_Parameters Clone() {
    return new CMD_Modify_Unique_Attach_a_Parameters(this);
  }

  /// <summary>Field number for the "attach_unique_id" field.</summary>
  public const int AttachUniqueIdFieldNumber = 1;
  private string attachUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUniqueId {
    get { return attachUniqueId_; }
    set {
      attachUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "modify_info" field.</summary>
  public const int ModifyInfoFieldNumber = 2;
  private static readonly pbc::MapField<uint, global::K8_Attach_Unit>.Codec _map_modifyInfo_codec
      = new pbc::MapField<uint, global::K8_Attach_Unit>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::K8_Attach_Unit.Parser), 18);
  private readonly pbc::MapField<uint, global::K8_Attach_Unit> modifyInfo_ = new pbc::MapField<uint, global::K8_Attach_Unit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::K8_Attach_Unit> ModifyInfo {
    get { return modifyInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Unique_Attach_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Unique_Attach_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttachUniqueId != other.AttachUniqueId) return false;
    if (!ModifyInfo.Equals(other.ModifyInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AttachUniqueId.Length != 0) hash ^= AttachUniqueId.GetHashCode();
    hash ^= ModifyInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AttachUniqueId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AttachUniqueId);
    }
    modifyInfo_.WriteTo(output, _map_modifyInfo_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AttachUniqueId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUniqueId);
    }
    size += modifyInfo_.CalculateSize(_map_modifyInfo_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Unique_Attach_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AttachUniqueId.Length != 0) {
      AttachUniqueId = other.AttachUniqueId;
    }
    modifyInfo_.Add(other.modifyInfo_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AttachUniqueId = input.ReadString();
          break;
        }
        case 18: {
          modifyInfo_.AddEntriesFrom(input, _map_modifyInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_unique_attach_r	   = 903;
/// </summary>
public sealed partial class CMD_Del_Unique_Attach_r_Parameters : pb::IMessage<CMD_Del_Unique_Attach_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Unique_Attach_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Unique_Attach_r_Parameters>(() => new CMD_Del_Unique_Attach_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Unique_Attach_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Unique_Attach_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Unique_Attach_r_Parameters(CMD_Del_Unique_Attach_r_Parameters other) : this() {
    attachUniqueId_ = other.attachUniqueId_;
    attachIds_ = other.attachIds_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Unique_Attach_r_Parameters Clone() {
    return new CMD_Del_Unique_Attach_r_Parameters(this);
  }

  /// <summary>Field number for the "attach_unique_id" field.</summary>
  public const int AttachUniqueIdFieldNumber = 1;
  private string attachUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUniqueId {
    get { return attachUniqueId_; }
    set {
      attachUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attach_ids" field.</summary>
  public const int AttachIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_attachIds_codec
      = pb::FieldCodec.ForUInt32(18);
  private readonly pbc::RepeatedField<uint> attachIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> AttachIds {
    get { return attachIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Unique_Attach_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Unique_Attach_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttachUniqueId != other.AttachUniqueId) return false;
    if(!attachIds_.Equals(other.attachIds_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AttachUniqueId.Length != 0) hash ^= AttachUniqueId.GetHashCode();
    hash ^= attachIds_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AttachUniqueId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AttachUniqueId);
    }
    attachIds_.WriteTo(output, _repeated_attachIds_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AttachUniqueId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUniqueId);
    }
    size += attachIds_.CalculateSize(_repeated_attachIds_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Unique_Attach_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AttachUniqueId.Length != 0) {
      AttachUniqueId = other.AttachUniqueId;
    }
    attachIds_.Add(other.attachIds_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AttachUniqueId = input.ReadString();
          break;
        }
        case 18:
        case 16: {
          attachIds_.AddEntriesFrom(input, _repeated_attachIds_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_unique_attach_a	   = 904;
/// </summary>
public sealed partial class CMD_Del_Unique_Attach_a_Parameters : pb::IMessage<CMD_Del_Unique_Attach_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Unique_Attach_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Unique_Attach_a_Parameters>(() => new CMD_Del_Unique_Attach_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Unique_Attach_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Unique_Attach_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Unique_Attach_a_Parameters(CMD_Del_Unique_Attach_a_Parameters other) : this() {
    attachUniqueId_ = other.attachUniqueId_;
    attachIds_ = other.attachIds_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Unique_Attach_a_Parameters Clone() {
    return new CMD_Del_Unique_Attach_a_Parameters(this);
  }

  /// <summary>Field number for the "attach_unique_id" field.</summary>
  public const int AttachUniqueIdFieldNumber = 1;
  private string attachUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUniqueId {
    get { return attachUniqueId_; }
    set {
      attachUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attach_ids" field.</summary>
  public const int AttachIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_attachIds_codec
      = pb::FieldCodec.ForUInt32(18);
  private readonly pbc::RepeatedField<uint> attachIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> AttachIds {
    get { return attachIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Unique_Attach_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Unique_Attach_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttachUniqueId != other.AttachUniqueId) return false;
    if(!attachIds_.Equals(other.attachIds_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AttachUniqueId.Length != 0) hash ^= AttachUniqueId.GetHashCode();
    hash ^= attachIds_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AttachUniqueId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AttachUniqueId);
    }
    attachIds_.WriteTo(output, _repeated_attachIds_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AttachUniqueId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUniqueId);
    }
    size += attachIds_.CalculateSize(_repeated_attachIds_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Unique_Attach_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AttachUniqueId.Length != 0) {
      AttachUniqueId = other.AttachUniqueId;
    }
    attachIds_.Add(other.attachIds_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AttachUniqueId = input.ReadString();
          break;
        }
        case 18:
        case 16: {
          attachIds_.AddEntriesFrom(input, _repeated_attachIds_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_unique_attach_r	   = 905;
/// </summary>
public sealed partial class CMD_Add_Unique_Attach_r_Parameters : pb::IMessage<CMD_Add_Unique_Attach_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Unique_Attach_r_Parameters> _parser = new pb::MessageParser<CMD_Add_Unique_Attach_r_Parameters>(() => new CMD_Add_Unique_Attach_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Unique_Attach_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Unique_Attach_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Unique_Attach_r_Parameters(CMD_Add_Unique_Attach_r_Parameters other) : this() {
    attachUniqueId_ = other.attachUniqueId_;
    addInfo_ = other.addInfo_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Unique_Attach_r_Parameters Clone() {
    return new CMD_Add_Unique_Attach_r_Parameters(this);
  }

  /// <summary>Field number for the "attach_unique_id" field.</summary>
  public const int AttachUniqueIdFieldNumber = 1;
  private string attachUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUniqueId {
    get { return attachUniqueId_; }
    set {
      attachUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "add_info" field.</summary>
  public const int AddInfoFieldNumber = 2;
  private static readonly pb::FieldCodec<global::K8_Attach_Unit> _repeated_addInfo_codec
      = pb::FieldCodec.ForMessage(18, global::K8_Attach_Unit.Parser);
  private readonly pbc::RepeatedField<global::K8_Attach_Unit> addInfo_ = new pbc::RepeatedField<global::K8_Attach_Unit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::K8_Attach_Unit> AddInfo {
    get { return addInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Unique_Attach_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Unique_Attach_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttachUniqueId != other.AttachUniqueId) return false;
    if(!addInfo_.Equals(other.addInfo_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AttachUniqueId.Length != 0) hash ^= AttachUniqueId.GetHashCode();
    hash ^= addInfo_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AttachUniqueId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AttachUniqueId);
    }
    addInfo_.WriteTo(output, _repeated_addInfo_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AttachUniqueId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUniqueId);
    }
    size += addInfo_.CalculateSize(_repeated_addInfo_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Unique_Attach_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AttachUniqueId.Length != 0) {
      AttachUniqueId = other.AttachUniqueId;
    }
    addInfo_.Add(other.addInfo_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AttachUniqueId = input.ReadString();
          break;
        }
        case 18: {
          addInfo_.AddEntriesFrom(input, _repeated_addInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_add_unique_attach_a	   = 906;
/// </summary>
public sealed partial class CMD_Add_Unique_Attach_a_Parameters : pb::IMessage<CMD_Add_Unique_Attach_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Add_Unique_Attach_a_Parameters> _parser = new pb::MessageParser<CMD_Add_Unique_Attach_a_Parameters>(() => new CMD_Add_Unique_Attach_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Add_Unique_Attach_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Unique_Attach_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Unique_Attach_a_Parameters(CMD_Add_Unique_Attach_a_Parameters other) : this() {
    attachUniqueId_ = other.attachUniqueId_;
    addInfo_ = other.addInfo_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Add_Unique_Attach_a_Parameters Clone() {
    return new CMD_Add_Unique_Attach_a_Parameters(this);
  }

  /// <summary>Field number for the "attach_unique_id" field.</summary>
  public const int AttachUniqueIdFieldNumber = 1;
  private string attachUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUniqueId {
    get { return attachUniqueId_; }
    set {
      attachUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "add_info" field.</summary>
  public const int AddInfoFieldNumber = 2;
  private static readonly pbc::MapField<uint, global::K8_Attach_Unit>.Codec _map_addInfo_codec
      = new pbc::MapField<uint, global::K8_Attach_Unit>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::K8_Attach_Unit.Parser), 18);
  private readonly pbc::MapField<uint, global::K8_Attach_Unit> addInfo_ = new pbc::MapField<uint, global::K8_Attach_Unit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, global::K8_Attach_Unit> AddInfo {
    get { return addInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Add_Unique_Attach_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Add_Unique_Attach_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttachUniqueId != other.AttachUniqueId) return false;
    if (!AddInfo.Equals(other.AddInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AttachUniqueId.Length != 0) hash ^= AttachUniqueId.GetHashCode();
    hash ^= AddInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AttachUniqueId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AttachUniqueId);
    }
    addInfo_.WriteTo(output, _map_addInfo_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AttachUniqueId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUniqueId);
    }
    size += addInfo_.CalculateSize(_map_addInfo_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Add_Unique_Attach_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AttachUniqueId.Length != 0) {
      AttachUniqueId = other.AttachUniqueId;
    }
    addInfo_.Add(other.addInfo_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AttachUniqueId = input.ReadString();
          break;
        }
        case 18: {
          addInfo_.AddEntriesFrom(input, _map_addInfo_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_get_unique_attach_r	   = 907;
/// </summary>
public sealed partial class CMD_Get_Unique_Attach_r_Parameters : pb::IMessage<CMD_Get_Unique_Attach_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Unique_Attach_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Unique_Attach_r_Parameters>(() => new CMD_Get_Unique_Attach_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Unique_Attach_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Unique_Attach_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Unique_Attach_r_Parameters(CMD_Get_Unique_Attach_r_Parameters other) : this() {
    attachUniqueId_ = other.attachUniqueId_;
    attachSavedNames_ = other.attachSavedNames_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Unique_Attach_r_Parameters Clone() {
    return new CMD_Get_Unique_Attach_r_Parameters(this);
  }

  /// <summary>Field number for the "attach_unique_id" field.</summary>
  public const int AttachUniqueIdFieldNumber = 1;
  private string attachUniqueId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AttachUniqueId {
    get { return attachUniqueId_; }
    set {
      attachUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attach_saved_names" field.</summary>
  public const int AttachSavedNamesFieldNumber = 2;
  private static readonly pbc::MapField<uint, string>.Codec _map_attachSavedNames_codec
      = new pbc::MapField<uint, string>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForString(18), 18);
  private readonly pbc::MapField<uint, string> attachSavedNames_ = new pbc::MapField<uint, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<uint, string> AttachSavedNames {
    get { return attachSavedNames_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Unique_Attach_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Unique_Attach_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttachUniqueId != other.AttachUniqueId) return false;
    if (!AttachSavedNames.Equals(other.AttachSavedNames)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AttachUniqueId.Length != 0) hash ^= AttachUniqueId.GetHashCode();
    hash ^= AttachSavedNames.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AttachUniqueId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AttachUniqueId);
    }
    attachSavedNames_.WriteTo(output, _map_attachSavedNames_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AttachUniqueId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachUniqueId);
    }
    size += attachSavedNames_.CalculateSize(_map_attachSavedNames_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Unique_Attach_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.AttachUniqueId.Length != 0) {
      AttachUniqueId = other.AttachUniqueId;
    }
    attachSavedNames_.Add(other.attachSavedNames_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          AttachUniqueId = input.ReadString();
          break;
        }
        case 18: {
          attachSavedNames_.AddEntriesFrom(input, _map_attachSavedNames_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///  cmd_get_unique_attach_a	   = 908;
/// </summary>
public sealed partial class CMD_Get_Unique_Attach_a_Parameters : pb::IMessage<CMD_Get_Unique_Attach_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Unique_Attach_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Unique_Attach_a_Parameters>(() => new CMD_Get_Unique_Attach_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Unique_Attach_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Unique_Attach_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Unique_Attach_a_Parameters(CMD_Get_Unique_Attach_a_Parameters other) : this() {
    AttachInfo = other.attachInfo_ != null ? other.AttachInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Unique_Attach_a_Parameters Clone() {
    return new CMD_Get_Unique_Attach_a_Parameters(this);
  }

  /// <summary>Field number for the "attach_info" field.</summary>
  public const int AttachInfoFieldNumber = 1;
  private global::K8_Attach_Info attachInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::K8_Attach_Info AttachInfo {
    get { return attachInfo_; }
    set {
      attachInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Unique_Attach_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Unique_Attach_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(AttachInfo, other.AttachInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (attachInfo_ != null) hash ^= AttachInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (attachInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AttachInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (attachInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttachInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Unique_Attach_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.attachInfo_ != null) {
      if (attachInfo_ == null) {
        attachInfo_ = new global::K8_Attach_Info();
      }
      AttachInfo.MergeFrom(other.AttachInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (attachInfo_ == null) {
            attachInfo_ = new global::K8_Attach_Info();
          }
          input.ReadMessage(attachInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// ///////////////////////////////////////////////////////////////////////////////////////////////
/// 	cmd_create_topic_r			= 951;
/// </summary>
public sealed partial class CMD_Create_Topic_r_Parameters : pb::IMessage<CMD_Create_Topic_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Topic_r_Parameters> _parser = new pb::MessageParser<CMD_Create_Topic_r_Parameters>(() => new CMD_Create_Topic_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Topic_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Topic_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Topic_r_Parameters(CMD_Create_Topic_r_Parameters other) : this() {
    CreateInfo = other.createInfo_ != null ? other.CreateInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Topic_r_Parameters Clone() {
    return new CMD_Create_Topic_r_Parameters(this);
  }

  /// <summary>Field number for the "create_info" field.</summary>
  public const int CreateInfoFieldNumber = 1;
  private global::Topic_Info createInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Info CreateInfo {
    get { return createInfo_; }
    set {
      createInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Topic_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Topic_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CreateInfo, other.CreateInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (createInfo_ != null) hash ^= CreateInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (createInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CreateInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (createInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Topic_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.createInfo_ != null) {
      if (createInfo_ == null) {
        createInfo_ = new global::Topic_Info();
      }
      CreateInfo.MergeFrom(other.CreateInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (createInfo_ == null) {
            createInfo_ = new global::Topic_Info();
          }
          input.ReadMessage(createInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_create_topic_a			= 952;
/// </summary>
public sealed partial class CMD_Create_Topic_a_Parameters : pb::IMessage<CMD_Create_Topic_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Create_Topic_a_Parameters> _parser = new pb::MessageParser<CMD_Create_Topic_a_Parameters>(() => new CMD_Create_Topic_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Create_Topic_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Topic_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Topic_a_Parameters(CMD_Create_Topic_a_Parameters other) : this() {
    TopicInfo = other.topicInfo_ != null ? other.TopicInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Create_Topic_a_Parameters Clone() {
    return new CMD_Create_Topic_a_Parameters(this);
  }

  /// <summary>Field number for the "topic_info" field.</summary>
  public const int TopicInfoFieldNumber = 1;
  private global::Topic_Info topicInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Info TopicInfo {
    get { return topicInfo_; }
    set {
      topicInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Create_Topic_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Create_Topic_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(TopicInfo, other.TopicInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (topicInfo_ != null) hash ^= TopicInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (topicInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(TopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (topicInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopicInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Create_Topic_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.topicInfo_ != null) {
      if (topicInfo_ == null) {
        topicInfo_ = new global::Topic_Info();
      }
      TopicInfo.MergeFrom(other.TopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (topicInfo_ == null) {
            topicInfo_ = new global::Topic_Info();
          }
          input.ReadMessage(topicInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_topic_r			= 953;
/// </summary>
public sealed partial class CMD_Modify_Topic_r_Parameters : pb::IMessage<CMD_Modify_Topic_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Topic_r_Parameters> _parser = new pb::MessageParser<CMD_Modify_Topic_r_Parameters>(() => new CMD_Modify_Topic_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Topic_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Topic_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Topic_r_Parameters(CMD_Modify_Topic_r_Parameters other) : this() {
    ModifyInfo = other.modifyInfo_ != null ? other.ModifyInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Topic_r_Parameters Clone() {
    return new CMD_Modify_Topic_r_Parameters(this);
  }

  /// <summary>Field number for the "modify_info" field.</summary>
  public const int ModifyInfoFieldNumber = 1;
  private global::Topic_Info modifyInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Info ModifyInfo {
    get { return modifyInfo_; }
    set {
      modifyInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Topic_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Topic_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ModifyInfo, other.ModifyInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (modifyInfo_ != null) hash ^= ModifyInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (modifyInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ModifyInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (modifyInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModifyInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Topic_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.modifyInfo_ != null) {
      if (modifyInfo_ == null) {
        modifyInfo_ = new global::Topic_Info();
      }
      ModifyInfo.MergeFrom(other.ModifyInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (modifyInfo_ == null) {
            modifyInfo_ = new global::Topic_Info();
          }
          input.ReadMessage(modifyInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_modify_topic_a			= 954;
/// </summary>
public sealed partial class CMD_Modify_Topic_a_Parameters : pb::IMessage<CMD_Modify_Topic_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Modify_Topic_a_Parameters> _parser = new pb::MessageParser<CMD_Modify_Topic_a_Parameters>(() => new CMD_Modify_Topic_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Modify_Topic_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Topic_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Topic_a_Parameters(CMD_Modify_Topic_a_Parameters other) : this() {
    TopicInfo = other.topicInfo_ != null ? other.TopicInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Modify_Topic_a_Parameters Clone() {
    return new CMD_Modify_Topic_a_Parameters(this);
  }

  /// <summary>Field number for the "topic_info" field.</summary>
  public const int TopicInfoFieldNumber = 1;
  private global::Topic_Info topicInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Info TopicInfo {
    get { return topicInfo_; }
    set {
      topicInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Modify_Topic_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Modify_Topic_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(TopicInfo, other.TopicInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (topicInfo_ != null) hash ^= TopicInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (topicInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(TopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (topicInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopicInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Modify_Topic_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.topicInfo_ != null) {
      if (topicInfo_ == null) {
        topicInfo_ = new global::Topic_Info();
      }
      TopicInfo.MergeFrom(other.TopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (topicInfo_ == null) {
            topicInfo_ = new global::Topic_Info();
          }
          input.ReadMessage(topicInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_topic_r			= 955;
/// </summary>
public sealed partial class CMD_Del_Topic_r_Parameters : pb::IMessage<CMD_Del_Topic_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Topic_r_Parameters> _parser = new pb::MessageParser<CMD_Del_Topic_r_Parameters>(() => new CMD_Del_Topic_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Topic_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Topic_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Topic_r_Parameters(CMD_Del_Topic_r_Parameters other) : this() {
    topicId_ = other.topicId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Topic_r_Parameters Clone() {
    return new CMD_Del_Topic_r_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Topic_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Topic_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Topic_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_del_topic_a			= 956;
/// </summary>
public sealed partial class CMD_Del_Topic_a_Parameters : pb::IMessage<CMD_Del_Topic_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Del_Topic_a_Parameters> _parser = new pb::MessageParser<CMD_Del_Topic_a_Parameters>(() => new CMD_Del_Topic_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Del_Topic_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Topic_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Topic_a_Parameters(CMD_Del_Topic_a_Parameters other) : this() {
    topicId_ = other.topicId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Del_Topic_a_Parameters Clone() {
    return new CMD_Del_Topic_a_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Del_Topic_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Del_Topic_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Del_Topic_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_topic_list_r		= 957;
/// </summary>
public sealed partial class CMD_Get_Topic_List_r_Parameters : pb::IMessage<CMD_Get_Topic_List_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Topic_List_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Topic_List_r_Parameters>(() => new CMD_Get_Topic_List_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Topic_List_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_List_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_List_r_Parameters(CMD_Get_Topic_List_r_Parameters other) : this() {
    reqType_ = other.reqType_;
    reqName_ = other.reqName_;
    reqTopicType_ = other.reqTopicType_;
    reqProjectLanguageType_ = other.reqProjectLanguageType_;
    reqLevel_ = other.reqLevel_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_List_r_Parameters Clone() {
    return new CMD_Get_Topic_List_r_Parameters(this);
  }

  /// <summary>Field number for the "req_type" field.</summary>
  public const int ReqTypeFieldNumber = 1;
  private global::GetTopicListType reqType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetTopicListType ReqType {
    get { return reqType_; }
    set {
      reqType_ = value;
    }
  }

  /// <summary>Field number for the "req_name" field.</summary>
  public const int ReqNameFieldNumber = 2;
  private string reqName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReqName {
    get { return reqName_; }
    set {
      reqName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "req_topic_type" field.</summary>
  public const int ReqTopicTypeFieldNumber = 3;
  private global::Topic_Type reqTopicType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Type ReqTopicType {
    get { return reqTopicType_; }
    set {
      reqTopicType_ = value;
    }
  }

  /// <summary>Field number for the "req_project_language_type" field.</summary>
  public const int ReqProjectLanguageTypeFieldNumber = 4;
  private global::Project_Language_Type reqProjectLanguageType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Project_Language_Type ReqProjectLanguageType {
    get { return reqProjectLanguageType_; }
    set {
      reqProjectLanguageType_ = value;
    }
  }

  /// <summary>Field number for the "req_level" field.</summary>
  public const int ReqLevelFieldNumber = 5;
  private uint reqLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ReqLevel {
    get { return reqLevel_; }
    set {
      reqLevel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Topic_List_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Topic_List_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReqType != other.ReqType) return false;
    if (ReqName != other.ReqName) return false;
    if (ReqTopicType != other.ReqTopicType) return false;
    if (ReqProjectLanguageType != other.ReqProjectLanguageType) return false;
    if (ReqLevel != other.ReqLevel) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ReqType != 0) hash ^= ReqType.GetHashCode();
    if (ReqName.Length != 0) hash ^= ReqName.GetHashCode();
    if (ReqTopicType != 0) hash ^= ReqTopicType.GetHashCode();
    if (ReqProjectLanguageType != 0) hash ^= ReqProjectLanguageType.GetHashCode();
    if (ReqLevel != 0) hash ^= ReqLevel.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ReqType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ReqType);
    }
    if (ReqName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ReqName);
    }
    if (ReqTopicType != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) ReqTopicType);
    }
    if (ReqProjectLanguageType != 0) {
      output.WriteRawTag(32);
      output.WriteEnum((int) ReqProjectLanguageType);
    }
    if (ReqLevel != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(ReqLevel);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ReqType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqType);
    }
    if (ReqName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqName);
    }
    if (ReqTopicType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqTopicType);
    }
    if (ReqProjectLanguageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqProjectLanguageType);
    }
    if (ReqLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReqLevel);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Topic_List_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.ReqType != 0) {
      ReqType = other.ReqType;
    }
    if (other.ReqName.Length != 0) {
      ReqName = other.ReqName;
    }
    if (other.ReqTopicType != 0) {
      ReqTopicType = other.ReqTopicType;
    }
    if (other.ReqProjectLanguageType != 0) {
      ReqProjectLanguageType = other.ReqProjectLanguageType;
    }
    if (other.ReqLevel != 0) {
      ReqLevel = other.ReqLevel;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          reqType_ = (global::GetTopicListType) input.ReadEnum();
          break;
        }
        case 18: {
          ReqName = input.ReadString();
          break;
        }
        case 24: {
          reqTopicType_ = (global::Topic_Type) input.ReadEnum();
          break;
        }
        case 32: {
          reqProjectLanguageType_ = (global::Project_Language_Type) input.ReadEnum();
          break;
        }
        case 40: {
          ReqLevel = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_topic_list_a		= 958;
/// </summary>
public sealed partial class CMD_Get_Topic_List_a_Parameters : pb::IMessage<CMD_Get_Topic_List_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Topic_List_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Topic_List_a_Parameters>(() => new CMD_Get_Topic_List_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Topic_List_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_List_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_List_a_Parameters(CMD_Get_Topic_List_a_Parameters other) : this() {
    topicList_ = other.topicList_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_List_a_Parameters Clone() {
    return new CMD_Get_Topic_List_a_Parameters(this);
  }

  /// <summary>Field number for the "topic_list" field.</summary>
  public const int TopicListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Topic_Info> _repeated_topicList_codec
      = pb::FieldCodec.ForMessage(10, global::Topic_Info.Parser);
  private readonly pbc::RepeatedField<global::Topic_Info> topicList_ = new pbc::RepeatedField<global::Topic_Info>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Topic_Info> TopicList {
    get { return topicList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Topic_List_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Topic_List_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!topicList_.Equals(other.topicList_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= topicList_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    topicList_.WriteTo(output, _repeated_topicList_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += topicList_.CalculateSize(_repeated_topicList_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Topic_List_a_Parameters other) {
    if (other == null) {
      return;
    }
    topicList_.Add(other.topicList_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          topicList_.AddEntriesFrom(input, _repeated_topicList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_approve_topic_r		= 959;
/// </summary>
public sealed partial class CMD_Approve_Topic_r_Parameters : pb::IMessage<CMD_Approve_Topic_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Approve_Topic_r_Parameters> _parser = new pb::MessageParser<CMD_Approve_Topic_r_Parameters>(() => new CMD_Approve_Topic_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Approve_Topic_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Topic_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Topic_r_Parameters(CMD_Approve_Topic_r_Parameters other) : this() {
    topicId_ = other.topicId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Topic_r_Parameters Clone() {
    return new CMD_Approve_Topic_r_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Approve_Topic_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Approve_Topic_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Approve_Topic_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_approve_topic_a		= 960;
/// </summary>
public sealed partial class CMD_Approve_Topic_a_Parameters : pb::IMessage<CMD_Approve_Topic_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Approve_Topic_a_Parameters> _parser = new pb::MessageParser<CMD_Approve_Topic_a_Parameters>(() => new CMD_Approve_Topic_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Approve_Topic_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Topic_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Topic_a_Parameters(CMD_Approve_Topic_a_Parameters other) : this() {
    topicId_ = other.topicId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Approve_Topic_a_Parameters Clone() {
    return new CMD_Approve_Topic_a_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Approve_Topic_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Approve_Topic_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Approve_Topic_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_topic_status_r		= 961;
/// </summary>
public sealed partial class CMD_Set_Topic_Status_r_Parameters : pb::IMessage<CMD_Set_Topic_Status_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Set_Topic_Status_r_Parameters> _parser = new pb::MessageParser<CMD_Set_Topic_Status_r_Parameters>(() => new CMD_Set_Topic_Status_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Topic_Status_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Topic_Status_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Topic_Status_r_Parameters(CMD_Set_Topic_Status_r_Parameters other) : this() {
    topicId_ = other.topicId_;
    topicStatus_ = other.topicStatus_;
    topicPassword_ = other.topicPassword_;
    topicPrice_ = other.topicPrice_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Topic_Status_r_Parameters Clone() {
    return new CMD_Set_Topic_Status_r_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  /// <summary>Field number for the "topic_status" field.</summary>
  public const int TopicStatusFieldNumber = 2;
  private global::Topic_Status topicStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Status TopicStatus {
    get { return topicStatus_; }
    set {
      topicStatus_ = value;
    }
  }

  /// <summary>Field number for the "topic_password" field.</summary>
  public const int TopicPasswordFieldNumber = 3;
  private string topicPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TopicPassword {
    get { return topicPassword_; }
    set {
      topicPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "topic_price" field.</summary>
  public const int TopicPriceFieldNumber = 4;
  private uint topicPrice_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicPrice {
    get { return topicPrice_; }
    set {
      topicPrice_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Topic_Status_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Topic_Status_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    if (TopicStatus != other.TopicStatus) return false;
    if (TopicPassword != other.TopicPassword) return false;
    if (TopicPrice != other.TopicPrice) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    if (TopicStatus != 0) hash ^= TopicStatus.GetHashCode();
    if (TopicPassword.Length != 0) hash ^= TopicPassword.GetHashCode();
    if (TopicPrice != 0) hash ^= TopicPrice.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
    if (TopicStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) TopicStatus);
    }
    if (TopicPassword.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(TopicPassword);
    }
    if (TopicPrice != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(TopicPrice);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    if (TopicStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TopicStatus);
    }
    if (TopicPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicPassword);
    }
    if (TopicPrice != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicPrice);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Topic_Status_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
    if (other.TopicStatus != 0) {
      TopicStatus = other.TopicStatus;
    }
    if (other.TopicPassword.Length != 0) {
      TopicPassword = other.TopicPassword;
    }
    if (other.TopicPrice != 0) {
      TopicPrice = other.TopicPrice;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
        case 16: {
          topicStatus_ = (global::Topic_Status) input.ReadEnum();
          break;
        }
        case 26: {
          TopicPassword = input.ReadString();
          break;
        }
        case 32: {
          TopicPrice = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_set_topic_status_a		= 962;
/// </summary>
public sealed partial class CMD_Set_Topic_Status_a_Parameters : pb::IMessage<CMD_Set_Topic_Status_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Set_Topic_Status_a_Parameters> _parser = new pb::MessageParser<CMD_Set_Topic_Status_a_Parameters>(() => new CMD_Set_Topic_Status_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Set_Topic_Status_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Topic_Status_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Topic_Status_a_Parameters(CMD_Set_Topic_Status_a_Parameters other) : this() {
    topicId_ = other.topicId_;
    topicStatus_ = other.topicStatus_;
    TopicInfo = other.topicInfo_ != null ? other.TopicInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Set_Topic_Status_a_Parameters Clone() {
    return new CMD_Set_Topic_Status_a_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  /// <summary>Field number for the "topic_status" field.</summary>
  public const int TopicStatusFieldNumber = 2;
  private global::Topic_Status topicStatus_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Status TopicStatus {
    get { return topicStatus_; }
    set {
      topicStatus_ = value;
    }
  }

  /// <summary>Field number for the "topic_info" field.</summary>
  public const int TopicInfoFieldNumber = 3;
  private global::Topic_Info topicInfo_;
  /// <summary>
  /// when topic_status=publish,test
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Info TopicInfo {
    get { return topicInfo_; }
    set {
      topicInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Set_Topic_Status_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Set_Topic_Status_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    if (TopicStatus != other.TopicStatus) return false;
    if (!object.Equals(TopicInfo, other.TopicInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    if (TopicStatus != 0) hash ^= TopicStatus.GetHashCode();
    if (topicInfo_ != null) hash ^= TopicInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
    if (TopicStatus != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) TopicStatus);
    }
    if (topicInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(TopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    if (TopicStatus != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TopicStatus);
    }
    if (topicInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopicInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Set_Topic_Status_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
    if (other.TopicStatus != 0) {
      TopicStatus = other.TopicStatus;
    }
    if (other.topicInfo_ != null) {
      if (topicInfo_ == null) {
        topicInfo_ = new global::Topic_Info();
      }
      TopicInfo.MergeFrom(other.TopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
        case 16: {
          topicStatus_ = (global::Topic_Status) input.ReadEnum();
          break;
        }
        case 26: {
          if (topicInfo_ == null) {
            topicInfo_ = new global::Topic_Info();
          }
          input.ReadMessage(topicInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_buy_topic_r			= 963;
/// </summary>
public sealed partial class CMD_Buy_Topic_r_Parameters : pb::IMessage<CMD_Buy_Topic_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Buy_Topic_r_Parameters> _parser = new pb::MessageParser<CMD_Buy_Topic_r_Parameters>(() => new CMD_Buy_Topic_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Buy_Topic_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Topic_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Topic_r_Parameters(CMD_Buy_Topic_r_Parameters other) : this() {
    topicId_ = other.topicId_;
    topicPassword_ = other.topicPassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Topic_r_Parameters Clone() {
    return new CMD_Buy_Topic_r_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  /// <summary>Field number for the "topic_password" field.</summary>
  public const int TopicPasswordFieldNumber = 2;
  private string topicPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TopicPassword {
    get { return topicPassword_; }
    set {
      topicPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Buy_Topic_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Buy_Topic_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    if (TopicPassword != other.TopicPassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    if (TopicPassword.Length != 0) hash ^= TopicPassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
    if (TopicPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(TopicPassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    if (TopicPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicPassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Buy_Topic_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
    if (other.TopicPassword.Length != 0) {
      TopicPassword = other.TopicPassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
        case 18: {
          TopicPassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_buy_topic_a			= 964;
/// </summary>
public sealed partial class CMD_Buy_Topic_a_Parameters : pb::IMessage<CMD_Buy_Topic_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Buy_Topic_a_Parameters> _parser = new pb::MessageParser<CMD_Buy_Topic_a_Parameters>(() => new CMD_Buy_Topic_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Buy_Topic_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Topic_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Topic_a_Parameters(CMD_Buy_Topic_a_Parameters other) : this() {
    topicId_ = other.topicId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Buy_Topic_a_Parameters Clone() {
    return new CMD_Buy_Topic_a_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Buy_Topic_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Buy_Topic_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Buy_Topic_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_topic_password_r	= 965;
/// </summary>
public sealed partial class CMD_Get_Topic_Password_r_Parameters : pb::IMessage<CMD_Get_Topic_Password_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Topic_Password_r_Parameters> _parser = new pb::MessageParser<CMD_Get_Topic_Password_r_Parameters>(() => new CMD_Get_Topic_Password_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Topic_Password_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_Password_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_Password_r_Parameters(CMD_Get_Topic_Password_r_Parameters other) : this() {
    topicId_ = other.topicId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_Password_r_Parameters Clone() {
    return new CMD_Get_Topic_Password_r_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Topic_Password_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Topic_Password_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Topic_Password_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_get_topic_password_a	= 966;
/// </summary>
public sealed partial class CMD_Get_Topic_Password_a_Parameters : pb::IMessage<CMD_Get_Topic_Password_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Get_Topic_Password_a_Parameters> _parser = new pb::MessageParser<CMD_Get_Topic_Password_a_Parameters>(() => new CMD_Get_Topic_Password_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Get_Topic_Password_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_Password_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_Password_a_Parameters(CMD_Get_Topic_Password_a_Parameters other) : this() {
    topicId_ = other.topicId_;
    topicPassword_ = other.topicPassword_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Get_Topic_Password_a_Parameters Clone() {
    return new CMD_Get_Topic_Password_a_Parameters(this);
  }

  /// <summary>Field number for the "topic_id" field.</summary>
  public const int TopicIdFieldNumber = 1;
  private uint topicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TopicId {
    get { return topicId_; }
    set {
      topicId_ = value;
    }
  }

  /// <summary>Field number for the "topic_password" field.</summary>
  public const int TopicPasswordFieldNumber = 2;
  private string topicPassword_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TopicPassword {
    get { return topicPassword_; }
    set {
      topicPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Get_Topic_Password_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Get_Topic_Password_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicId != other.TopicId) return false;
    if (TopicPassword != other.TopicPassword) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicId != 0) hash ^= TopicId.GetHashCode();
    if (TopicPassword.Length != 0) hash ^= TopicPassword.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(TopicId);
    }
    if (TopicPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(TopicPassword);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopicId);
    }
    if (TopicPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicPassword);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Get_Topic_Password_a_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicId != 0) {
      TopicId = other.TopicId;
    }
    if (other.TopicPassword.Length != 0) {
      TopicPassword = other.TopicPassword;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          TopicId = input.ReadUInt32();
          break;
        }
        case 18: {
          TopicPassword = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_topic_status_change_notify = 968
/// </summary>
public sealed partial class CMD_Topic_Status_Change_Notify_Parameters : pb::IMessage<CMD_Topic_Status_Change_Notify_Parameters> {
  private static readonly pb::MessageParser<CMD_Topic_Status_Change_Notify_Parameters> _parser = new pb::MessageParser<CMD_Topic_Status_Change_Notify_Parameters>(() => new CMD_Topic_Status_Change_Notify_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Topic_Status_Change_Notify_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Topic_Status_Change_Notify_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Topic_Status_Change_Notify_Parameters(CMD_Topic_Status_Change_Notify_Parameters other) : this() {
    TopicInfo = other.topicInfo_ != null ? other.TopicInfo.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Topic_Status_Change_Notify_Parameters Clone() {
    return new CMD_Topic_Status_Change_Notify_Parameters(this);
  }

  /// <summary>Field number for the "topic_info" field.</summary>
  public const int TopicInfoFieldNumber = 1;
  private global::Topic_Info topicInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Topic_Info TopicInfo {
    get { return topicInfo_; }
    set {
      topicInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Topic_Status_Change_Notify_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Topic_Status_Change_Notify_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(TopicInfo, other.TopicInfo)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (topicInfo_ != null) hash ^= TopicInfo.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (topicInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(TopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (topicInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TopicInfo);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Topic_Status_Change_Notify_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.topicInfo_ != null) {
      if (topicInfo_ == null) {
        topicInfo_ = new global::Topic_Info();
      }
      TopicInfo.MergeFrom(other.TopicInfo);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (topicInfo_ == null) {
            topicInfo_ = new global::Topic_Info();
          }
          input.ReadMessage(topicInfo_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_download_topic_r			= 969;
/// </summary>
public sealed partial class CMD_Download_Topic_r_Parameters : pb::IMessage<CMD_Download_Topic_r_Parameters> {
  private static readonly pb::MessageParser<CMD_Download_Topic_r_Parameters> _parser = new pb::MessageParser<CMD_Download_Topic_r_Parameters>(() => new CMD_Download_Topic_r_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Download_Topic_r_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Topic_r_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Topic_r_Parameters(CMD_Download_Topic_r_Parameters other) : this() {
    topicPath_ = other.topicPath_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Topic_r_Parameters Clone() {
    return new CMD_Download_Topic_r_Parameters(this);
  }

  /// <summary>Field number for the "topic_path" field.</summary>
  public const int TopicPathFieldNumber = 1;
  private string topicPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TopicPath {
    get { return topicPath_; }
    set {
      topicPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Download_Topic_r_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Download_Topic_r_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TopicPath != other.TopicPath) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TopicPath.Length != 0) hash ^= TopicPath.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TopicPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(TopicPath);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TopicPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicPath);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Download_Topic_r_Parameters other) {
    if (other == null) {
      return;
    }
    if (other.TopicPath.Length != 0) {
      TopicPath = other.TopicPath;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          TopicPath = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 	cmd_download_topic_r			= 970;
/// </summary>
public sealed partial class CMD_Download_Topic_a_Parameters : pb::IMessage<CMD_Download_Topic_a_Parameters> {
  private static readonly pb::MessageParser<CMD_Download_Topic_a_Parameters> _parser = new pb::MessageParser<CMD_Download_Topic_a_Parameters>(() => new CMD_Download_Topic_a_Parameters());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_Download_Topic_a_Parameters> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TopicReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Topic_a_Parameters() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Topic_a_Parameters(CMD_Download_Topic_a_Parameters other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_Download_Topic_a_Parameters Clone() {
    return new CMD_Download_Topic_a_Parameters(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_Download_Topic_a_Parameters);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_Download_Topic_a_Parameters other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_Download_Topic_a_Parameters other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
